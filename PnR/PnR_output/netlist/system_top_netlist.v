/*
###############################################################
#  Generated by:      Cadence Innovus 15.20-p005_1
#  OS:                Linux x86_64(Host ID IC)
#  Generated on:      Thu Mar 23 00:36:31 2023
#  Design:            system_top
#  Command:           saveNetlist ../PnR_output/netlist/system_top_netlist.v
###############################################################
*/
module system_top (
	reference_clk, 
	UART_clk, 
	reset, 
	serial_data_in, 
	scan_clk, 
	scan_reset, 
	test_mode, 
	SE, 
	SI, 
	SO, 
	serial_data_out, 
	parity_error, 
	frame_error);
   input reference_clk;
   input UART_clk;
   input reset;
   input serial_data_in;
   input scan_clk;
   input scan_reset;
   input test_mode;
   input SE;
   input [2:0] SI;
   output [2:0] SO;
   output serial_data_out;
   output parity_error;
   output frame_error;

   // Internal wires
   wire FE_PHN14_multiplexed_reset;
   wire scan_clk__L4_N0;
   wire scan_clk__L3_N0;
   wire scan_clk__L2_N1;
   wire scan_clk__L2_N0;
   wire scan_clk__L1_N0;
   wire UART_clk__L2_N0;
   wire UART_clk__L1_N0;
   wire multiplexed_UART_clk__L9_N1;
   wire multiplexed_UART_clk__L9_N0;
   wire multiplexed_UART_clk__L8_N0;
   wire multiplexed_UART_clk__L7_N0;
   wire multiplexed_UART_clk__L6_N0;
   wire multiplexed_UART_clk__L5_N0;
   wire multiplexed_UART_clk__L4_N0;
   wire multiplexed_UART_clk__L3_N0;
   wire multiplexed_UART_clk__L2_N0;
   wire multiplexed_UART_clk__L1_N0;
   wire multiplexed_UART_transmitter_clk__L1_N0;
   wire reference_clk__L2_N0;
   wire reference_clk__L1_N0;
   wire multiplexed_reference_clk__L3_N2;
   wire multiplexed_reference_clk__L3_N1;
   wire multiplexed_reference_clk__L3_N0;
   wire multiplexed_reference_clk__L2_N0;
   wire multiplexed_reference_clk__L1_N0;
   wire ALU_clk__L1_N0;
   wire FE_OFN11_ALU_operand_B_1_;
   wire FE_OFN9_multiplexed_reference_reset_synchronized;
   wire FE_OFN8_multiplexed_reference_reset_synchronized;
   wire FE_OFN4_serial_data_out;
   wire FE_OFN3_SE;
   wire FE_OFN2_SE;
   wire FE_OFN1_SE;
   wire FE_OFN0_SE;
   wire multiplexed_reference_clk;
   wire multiplexed_reset;
   wire reference_reset_synchronized;
   wire multiplexed_reference_reset_synchronized;
   wire ALU_result_valid;
   wire register_file_read_data_valid;
   wire UART_transmitter_busy_synchronized;
   wire transmitter_Q_pulse_generator_synchronized;
   wire receiver_parallel_data_valid_synchronized;
   wire ALU_enable;
   wire ALU_clk_enable;
   wire transmitter_parallel_data_valid;
   wire register_file_write_enable;
   wire register_file_read_enable;
   wire _0_net_;
   wire ALU_clk;
   wire UART_transmitter_busy;
   wire transmitter_Q_pulse_generator;
   wire receiver_parallel_data_valid;
   wire multiplexed_UART_clk;
   wire UART_transmitter_clk;
   wire multiplexed_UART_transmitter_clk;
   wire UART_reset_synchronized;
   wire multiplexed_UART_reset_synchronized;
   wire transmitter_parallel_data_valid_synchronized;
   wire n7;
   wire n10;
   wire n11;
   wire [15:0] ALU_result;
   wire [7:0] register_file_read_data;
   wire [7:0] receiver_parallel_data_synchronized;
   wire [3:0] ALU_function;
   wire [7:0] transmitter_parallel_data;
   wire [3:0] register_file_address;
   wire [7:0] register_file_write_data;
   wire [7:0] ALU_operand_A;
   wire [7:0] ALU_operand_B;
   wire [7:0] UART_parity_configuration;
   wire [7:0] UART_prescale_configuration;
   wire [7:0] receiver_parallel_data;
   wire [7:0] transmitter_parallel_data_synchronized;
   wire SYNOPSYS_UNCONNECTED__0;
   wire SYNOPSYS_UNCONNECTED__1;
   wire SYNOPSYS_UNCONNECTED__2;
   wire SYNOPSYS_UNCONNECTED__3;
   wire SYNOPSYS_UNCONNECTED__4;
   wire SYNOPSYS_UNCONNECTED__5;
   wire SYNOPSYS_UNCONNECTED__6;
   wire SYNOPSYS_UNCONNECTED__7;

   DLY4X1M FE_PHC14_multiplexed_reset (.A(multiplexed_reset),
	.Y(FE_PHN14_multiplexed_reset));
   CLKINVX40M scan_clk__L4_I0 (.A(scan_clk__L3_N0),
	.Y(scan_clk__L4_N0));
   CLKBUFX20M scan_clk__L3_I0 (.A(scan_clk__L2_N1),
	.Y(scan_clk__L3_N0));
   CLKBUFX20M scan_clk__L2_I1 (.A(scan_clk__L1_N0),
	.Y(scan_clk__L2_N1));
   CLKINVX32M scan_clk__L2_I0 (.A(scan_clk__L1_N0),
	.Y(scan_clk__L2_N0));
   CLKINVX40M scan_clk__L1_I0 (.A(scan_clk),
	.Y(scan_clk__L1_N0));
   CLKINVX32M UART_clk__L2_I0 (.A(UART_clk__L1_N0),
	.Y(UART_clk__L2_N0));
   CLKINVX40M UART_clk__L1_I0 (.A(UART_clk),
	.Y(UART_clk__L1_N0));
   CLKBUFX20M multiplexed_UART_clk__L9_I1 (.A(multiplexed_UART_clk__L8_N0),
	.Y(multiplexed_UART_clk__L9_N1));
   CLKBUFX20M multiplexed_UART_clk__L9_I0 (.A(multiplexed_UART_clk__L8_N0),
	.Y(multiplexed_UART_clk__L9_N0));
   CLKINVX40M multiplexed_UART_clk__L8_I0 (.A(multiplexed_UART_clk__L7_N0),
	.Y(multiplexed_UART_clk__L8_N0));
   CLKINVX40M multiplexed_UART_clk__L7_I0 (.A(multiplexed_UART_clk__L6_N0),
	.Y(multiplexed_UART_clk__L7_N0));
   CLKBUFX20M multiplexed_UART_clk__L6_I0 (.A(multiplexed_UART_clk__L5_N0),
	.Y(multiplexed_UART_clk__L6_N0));
   CLKBUFX24M multiplexed_UART_clk__L5_I0 (.A(multiplexed_UART_clk__L4_N0),
	.Y(multiplexed_UART_clk__L5_N0));
   CLKBUFX24M multiplexed_UART_clk__L4_I0 (.A(multiplexed_UART_clk__L3_N0),
	.Y(multiplexed_UART_clk__L4_N0));
   CLKBUFX24M multiplexed_UART_clk__L3_I0 (.A(multiplexed_UART_clk__L2_N0),
	.Y(multiplexed_UART_clk__L3_N0));
   CLKBUFX24M multiplexed_UART_clk__L2_I0 (.A(multiplexed_UART_clk__L1_N0),
	.Y(multiplexed_UART_clk__L2_N0));
   CLKBUFX24M multiplexed_UART_clk__L1_I0 (.A(multiplexed_UART_clk),
	.Y(multiplexed_UART_clk__L1_N0));
   CLKBUFX20M multiplexed_UART_transmitter_clk__L1_I0 (.A(multiplexed_UART_transmitter_clk),
	.Y(multiplexed_UART_transmitter_clk__L1_N0));
   CLKINVX32M reference_clk__L2_I0 (.A(reference_clk__L1_N0),
	.Y(reference_clk__L2_N0));
   CLKINVX40M reference_clk__L1_I0 (.A(reference_clk),
	.Y(reference_clk__L1_N0));
   CLKINVX40M multiplexed_reference_clk__L3_I2 (.A(multiplexed_reference_clk__L2_N0),
	.Y(multiplexed_reference_clk__L3_N2));
   CLKINVX40M multiplexed_reference_clk__L3_I1 (.A(multiplexed_reference_clk__L2_N0),
	.Y(multiplexed_reference_clk__L3_N1));
   CLKINVX40M multiplexed_reference_clk__L3_I0 (.A(multiplexed_reference_clk__L2_N0),
	.Y(multiplexed_reference_clk__L3_N0));
   CLKINVX40M multiplexed_reference_clk__L2_I0 (.A(multiplexed_reference_clk__L1_N0),
	.Y(multiplexed_reference_clk__L2_N0));
   CLKBUFX32M multiplexed_reference_clk__L1_I0 (.A(multiplexed_reference_clk),
	.Y(multiplexed_reference_clk__L1_N0));
   CLKBUFX20M ALU_clk__L1_I0 (.A(ALU_clk),
	.Y(ALU_clk__L1_N0));
   BUFX2M FE_OFC11_ALU_operand_B_1_ (.A(ALU_operand_B[1]),
	.Y(FE_OFN11_ALU_operand_B_1_));
   BUFX8M FE_OFC9_multiplexed_reference_reset_synchronized (.A(FE_OFN8_multiplexed_reference_reset_synchronized),
	.Y(FE_OFN9_multiplexed_reference_reset_synchronized));
   BUFX32M FE_OFC8_multiplexed_reference_reset_synchronized (.A(multiplexed_reference_reset_synchronized),
	.Y(FE_OFN8_multiplexed_reference_reset_synchronized));
   BUFX10M FE_OFC5_serial_data_out (.A(FE_OFN4_serial_data_out),
	.Y(serial_data_out));
   BUFX2M FE_OFC3_SE (.A(FE_OFN2_SE),
	.Y(FE_OFN3_SE));
   CLKBUFX6M FE_OFC2_SE (.A(FE_OFN1_SE),
	.Y(FE_OFN2_SE));
   CLKBUFX6M FE_OFC1_SE (.A(FE_OFN0_SE),
	.Y(FE_OFN1_SE));
   CLKBUFX6M FE_OFC0_SE (.A(SE),
	.Y(FE_OFN0_SE));
   OR2X1M U4 (.A(ALU_clk_enable),
	.B(test_mode),
	.Y(_0_net_));
   multiplexer_2x1_1 U_reference_clock_multiplexer (.IN0(reference_clk__L2_N0),
	.IN1(scan_clk__L4_N0),
	.select(test_mode),
	.OUT(multiplexed_reference_clk));
   multiplexer_2x1_0 U_reset_multiplexer (.IN0(reset),
	.IN1(scan_reset),
	.select(test_mode),
	.OUT(multiplexed_reset));
   reset_synchronizer_test_1 U_reference_reset_synchronizer (.clk(multiplexed_reference_clk__L3_N0),
	.reset(multiplexed_reset),
	.reset_synchronized(reference_reset_synchronized),
	.test_si(n7),
	.test_se(FE_OFN0_SE));
   multiplexer_2x1_3 U_reference_reset_multiplexer (.IN0(reference_reset_synchronized),
	.IN1(scan_reset),
	.select(test_mode),
	.OUT(multiplexed_reference_reset_synchronized));
   system_controller_test_1 U_system_controller (.clk(multiplexed_reference_clk__L3_N0),
	.reset(FE_OFN9_multiplexed_reference_reset_synchronized),
	.ALU_result_valid(ALU_result_valid),
	.ALU_result(ALU_result),
	.register_file_read_data_valid(register_file_read_data_valid),
	.register_file_read_data(register_file_read_data),
	.transmitter_busy_synchronized(UART_transmitter_busy_synchronized),
	.transmitter_Q_pulse_generator(transmitter_Q_pulse_generator_synchronized),
	.receiver_parallel_data_valid_synchronized(receiver_parallel_data_valid_synchronized),
	.receiver_parallel_data_synchronized(receiver_parallel_data_synchronized),
	.ALU_function(ALU_function),
	.ALU_enable(ALU_enable),
	.ALU_clk_enable(ALU_clk_enable),
	.transmitter_parallel_data_valid(transmitter_parallel_data_valid),
	.transmitter_parallel_data(transmitter_parallel_data),
	.register_file_address(register_file_address),
	.register_file_write_enable(register_file_write_enable),
	.register_file_write_data(register_file_write_data),
	.register_file_read_enable(register_file_read_enable),
	.test_so(SO[0]),
	.test_se(FE_OFN2_SE),
	.p1(FE_OFN3_SE),
	.multiplexed_reference_clk__L3_N1(multiplexed_reference_clk__L3_N1));
   clock_gating_cell U_clock_gating_cell (.clk(multiplexed_reference_clk__L1_N0),
	.clk_enable(_0_net_),
	.gated_clock(ALU_clk));
   ALU_test_1 U_ALU (.clk(ALU_clk__L1_N0),
	.reset(FE_OFN9_multiplexed_reference_reset_synchronized),
	.A(ALU_operand_A),
	.B({ ALU_operand_B[7],
		ALU_operand_B[6],
		ALU_operand_B[5],
		ALU_operand_B[4],
		ALU_operand_B[3],
		ALU_operand_B[2],
		FE_OFN11_ALU_operand_B_1_,
		ALU_operand_B[0] }),
	.ALU_function(ALU_function),
	.enable(ALU_enable),
	.ALU_result_valid(ALU_result_valid),
	.ALU_result(ALU_result),
	.test_si(n11),
	.test_se(FE_OFN2_SE),
	.p1(FE_OFN3_SE));
   register_file_test_1 U_register_file (.clk(multiplexed_reference_clk__L3_N0),
	.reset(multiplexed_reference_reset_synchronized),
	.address(register_file_address),
	.write_enable(register_file_write_enable),
	.write_data(register_file_write_data),
	.read_enable(register_file_read_enable),
	.read_data(register_file_read_data),
	.read_data_valid(register_file_read_data_valid),
	.register0(ALU_operand_A),
	.register1(ALU_operand_B),
	.register2({ SYNOPSYS_UNCONNECTED__0,
		SYNOPSYS_UNCONNECTED__1,
		SYNOPSYS_UNCONNECTED__2,
		SYNOPSYS_UNCONNECTED__3,
		SYNOPSYS_UNCONNECTED__4,
		SYNOPSYS_UNCONNECTED__5,
		UART_parity_configuration[1],
		UART_parity_configuration[0] }),
	.register3({ SYNOPSYS_UNCONNECTED__6,
		SYNOPSYS_UNCONNECTED__7,
		UART_prescale_configuration[5],
		UART_prescale_configuration[4],
		UART_prescale_configuration[3],
		UART_prescale_configuration[2],
		UART_prescale_configuration[1],
		UART_prescale_configuration[0] }),
	.test_si2(SI[0]),
	.test_si1(reference_reset_synchronized),
	.test_so1(SO[1]),
	.test_se(SE),
	.p1(FE_OFN0_SE),
	.p2(FE_OFN1_SE),
	.p3(FE_OFN2_SE),
	.p4(FE_OFN8_multiplexed_reference_reset_synchronized),
	.p5(FE_OFN9_multiplexed_reference_reset_synchronized),
	.multiplexed_reference_clk__L3_N1(multiplexed_reference_clk__L3_N1),
	.multiplexed_reference_clk__L3_N2(multiplexed_reference_clk__L3_N2));
   bus_synchronizer_test_1 U_busy_bit_synchronizer (.clk(multiplexed_reference_clk__L3_N0),
	.reset(FE_OFN9_multiplexed_reference_reset_synchronized),
	.asynchronous_data(UART_transmitter_busy),
	.synchronous_data(UART_transmitter_busy_synchronized),
	.test_si(transmitter_parallel_data_valid_synchronized),
	.test_se(FE_OFN2_SE));
   bus_synchronizer_3 U_Q_pulse_generator_bit_synchronizer (.clk(multiplexed_reference_clk__L3_N0),
	.reset(FE_OFN9_multiplexed_reference_reset_synchronized),
	.asynchronous_data(transmitter_Q_pulse_generator),
	.synchronous_data(transmitter_Q_pulse_generator_synchronized));
   data_synchronizer_test_0 U_UART_receiver_data_synchronizer (.clk(multiplexed_reference_clk__L3_N0),
	.reset(FE_OFN8_multiplexed_reference_reset_synchronized),
	.asynchronous_data_valid(receiver_parallel_data_valid),
	.asynchronous_data(receiver_parallel_data),
	.synchronous_data_valid(receiver_parallel_data_valid_synchronized),
	.synchronous_data(receiver_parallel_data_synchronized),
	.test_si2(n10),
	.test_si1(transmitter_Q_pulse_generator_synchronized),
	.test_so1(n11),
	.test_se(FE_OFN0_SE),
	.p1(FE_OFN2_SE),
	.p2(FE_OFN9_multiplexed_reference_reset_synchronized));
   multiplexer_2x1_5 U_UART_clock_multiplexer (.IN0(UART_clk__L2_N0),
	.IN1(scan_clk__L2_N0),
	.select(test_mode),
	.OUT(multiplexed_UART_clk));
   multiplexer_2x1_4 U_UART_transmitter_clock_multiplexer (.IN0(UART_transmitter_clk),
	.IN1(scan_clk__L4_N0),
	.select(test_mode),
	.OUT(multiplexed_UART_transmitter_clk));
   reset_synchronizer_test_0 U_UART_reset_synchronizer (.clk(multiplexed_UART_clk__L9_N0),
	.reset(FE_PHN14_multiplexed_reset),
	.reset_synchronized(UART_reset_synchronized),
	.test_si(receiver_parallel_data_valid_synchronized),
	.test_se(FE_OFN0_SE));
   multiplexer_2x1_2 U_UART_reset_multiplexer (.IN0(UART_reset_synchronized),
	.IN1(scan_reset),
	.select(test_mode),
	.OUT(multiplexed_UART_reset_synchronized));
   UART_test_1 U_UART (.transmitter_clk(multiplexed_UART_transmitter_clk__L1_N0),
	.receiver_clk(multiplexed_UART_clk__L9_N0),
	.reset(multiplexed_UART_reset_synchronized),
	.parity_type(UART_parity_configuration[1]),
	.parity_enable(UART_parity_configuration[0]),
	.prescale({ UART_prescale_configuration[5],
		UART_prescale_configuration[4],
		UART_prescale_configuration[3],
		UART_prescale_configuration[2],
		UART_prescale_configuration[1],
		UART_prescale_configuration[0] }),
	.transmitter_parallel_data_valid(transmitter_parallel_data_valid_synchronized),
	.transmitter_parallel_data(transmitter_parallel_data_synchronized),
	.serial_data_receiver(serial_data_in),
	.serial_data_transmitter(FE_OFN4_serial_data_out),
	.transmitter_busy(UART_transmitter_busy),
	.receiver_parallel_data_valid(receiver_parallel_data_valid),
	.receiver_parallel_data(receiver_parallel_data),
	.parity_error_receiver(parity_error),
	.frame_error_receiver(frame_error),
	.test_si(ALU_result_valid),
	.test_so(n10),
	.test_se(FE_OFN0_SE),
	.p1(FE_OFN2_SE),
	.multiplexed_UART_clk__L9_N1(multiplexed_UART_clk__L9_N1));
   clock_divider_test_1 U_clock_divider (.reference_clk(multiplexed_UART_clk),
	.reset(multiplexed_UART_reset_synchronized),
	.division_ratio({ UART_prescale_configuration[5],
		UART_prescale_configuration[4],
		UART_prescale_configuration[3],
		UART_prescale_configuration[2],
		UART_prescale_configuration[1],
		UART_prescale_configuration[0] }),
	.output_clk(UART_transmitter_clk),
	.test_si2(SI[1]),
	.test_si1(UART_transmitter_busy_synchronized),
	.test_so2(n7),
	.test_so1(SO[2]),
	.test_se(SE),
	.p1(FE_OFN0_SE));
   data_synchronizer_test_1 U_UART_transmitter_data_synchronizer (.clk(multiplexed_UART_transmitter_clk__L1_N0),
	.reset(multiplexed_UART_reset_synchronized),
	.asynchronous_data_valid(transmitter_parallel_data_valid),
	.asynchronous_data(transmitter_parallel_data),
	.Q_pulse_generator(transmitter_Q_pulse_generator),
	.synchronous_data_valid(transmitter_parallel_data_valid_synchronized),
	.synchronous_data(transmitter_parallel_data_synchronized),
	.test_si2(UART_reset_synchronized),
	.test_si1(SI[2]),
	.test_se(FE_OFN2_SE));
endmodule

/////////////////////////////////////////////////////////////
// Created by: Synopsys DC Ultra(TM) in wire load mode
// Version   : K-2015.06
// Date      : Wed Mar 22 23:31:43 2023
/////////////////////////////////////////////////////////////
module multiplexer_2x1_1 (
	IN0, 
	IN1, 
	select, 
	OUT);
   input IN0;
   input IN1;
   input select;
   output OUT;

   MX2X4M U1 (.S0(select),
	.B(IN1),
	.A(IN0),
	.Y(OUT));
endmodule

module multiplexer_2x1_0 (
	IN0, 
	IN1, 
	select, 
	OUT);
   input IN0;
   input IN1;
   input select;
   output OUT;

   MX2XLM U1 (.S0(select),
	.B(IN1),
	.A(IN0),
	.Y(OUT));
endmodule

module reset_synchronizer_test_1 (
	clk, 
	reset, 
	reset_synchronized, 
	test_si, 
	test_se);
   input clk;
   input reset;
   output reset_synchronized;
   input test_si;
   input test_se;

   // Internal wires
   wire FE_PHN15_n7;
   wire HTIE_LTIEHI_NET;
   wire \Q[0] ;

   BUFX2M FE_PHC15_n7 (.A(test_si),
	.Y(FE_PHN15_n7));
   TIEHIM HTIE_LTIEHI (.Y(HTIE_LTIEHI_NET));
   SDFFRQX1M \Q_reg[0]  (.SI(FE_PHN15_n7),
	.SE(test_se),
	.D(HTIE_LTIEHI_NET),
	.CK(clk),
	.RN(reset),
	.Q(\Q[0] ));
   SDFFRQX1M \Q_reg[1]  (.SI(\Q[0] ),
	.SE(test_se),
	.D(\Q[0] ),
	.CK(clk),
	.RN(reset),
	.Q(reset_synchronized));
endmodule

module multiplexer_2x1_3 (
	IN0, 
	IN1, 
	select, 
	OUT);
   input IN0;
   input IN1;
   input select;
   output OUT;

   MX2X8M U1 (.S0(select),
	.B(IN1),
	.A(IN0),
	.Y(OUT));
endmodule

module UART_transmitter_controller_test_1 (
	clk, 
	reset, 
	ALU_result_valid, 
	ALU_result, 
	read_data_valid, 
	read_data, 
	transmitter_busy_synchronized, 
	transmitter_Q_pulse_generator, 
	transmitter_parallel_data_valid, 
	transmitter_parallel_data, 
	UART_receiver_controller_enable, 
	test_si, 
	test_so, 
	test_se, 
	p1);
   input clk;
   input reset;
   input ALU_result_valid;
   input [15:0] ALU_result;
   input read_data_valid;
   input [7:0] read_data;
   input transmitter_busy_synchronized;
   input transmitter_Q_pulse_generator;
   output transmitter_parallel_data_valid;
   output [7:0] transmitter_parallel_data;
   output UART_receiver_controller_enable;
   input test_si;
   output test_so;
   input test_se;
   input p1;

   // Internal wires
   wire N62;
   wire D_UART_receiver_controller_enable;
   wire n27;
   wire n29;
   wire n31;
   wire n33;
   wire n35;
   wire n37;
   wire n39;
   wire n41;
   wire n43;
   wire n45;
   wire n47;
   wire n49;
   wire n51;
   wire n53;
   wire n55;
   wire n57;
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire [2:0] current_state;
   wire [2:0] next_state;
   wire [15:0] message;
   wire [1:0] transmission_current_state;
   wire [1:0] transmission_next_state;

   assign test_so = transmission_current_state[1] ;
   assign N62 = read_data_valid ;

   SDFFRQX1M \current_state_reg[2]  (.SI(current_state[1]),
	.SE(test_se),
	.D(next_state[2]),
	.CK(clk),
	.RN(reset),
	.Q(current_state[2]));
   SDFFRQX1M \current_state_reg[1]  (.SI(current_state[0]),
	.SE(test_se),
	.D(next_state[1]),
	.CK(clk),
	.RN(reset),
	.Q(current_state[1]));
   SDFFRQX1M \current_state_reg[0]  (.SI(UART_receiver_controller_enable),
	.SE(test_se),
	.D(next_state[0]),
	.CK(clk),
	.RN(reset),
	.Q(current_state[0]));
   SDFFRQX1M \transmission_current_state_reg[1]  (.SI(transmission_current_state[0]),
	.SE(test_se),
	.D(transmission_next_state[1]),
	.CK(clk),
	.RN(reset),
	.Q(transmission_current_state[1]));
   SDFFRQX1M \transmission_current_state_reg[0]  (.SI(message[15]),
	.SE(test_se),
	.D(transmission_next_state[0]),
	.CK(clk),
	.RN(reset),
	.Q(transmission_current_state[0]));
   SDFFRQX1M \message_reg[0]  (.SI(current_state[2]),
	.SE(test_se),
	.D(n27),
	.CK(clk),
	.RN(reset),
	.Q(message[0]));
   NAND2BXLM U3 (.AN(current_state[0]),
	.B(n21),
	.Y(n17));
   INVXLM U4 (.A(n6),
	.Y(n39));
   NOR3BXLM U5 (.AN(transmission_current_state[0]),
	.B(transmission_current_state[1]),
	.C(transmitter_busy_synchronized),
	.Y(transmission_next_state[1]));
   INVXLM U6 (.A(transmitter_busy_synchronized),
	.Y(n21));
   NOR2XLM U7 (.A(transmission_current_state[1]),
	.B(n21),
	.Y(transmission_next_state[0]));
   NOR2BXLM U8 (.AN(transmission_current_state[1]),
	.B(transmission_current_state[0]),
	.Y(n20));
   NOR2XLM U9 (.A(current_state[0]),
	.B(current_state[1]),
	.Y(n22));
   NAND2XLM U10 (.A(current_state[2]),
	.B(n22),
	.Y(n10));
   NAND3BXLM U11 (.AN(transmitter_Q_pulse_generator),
	.B(current_state[1]),
	.C(current_state[0]),
	.Y(n1));
   OAI22XLM U12 (.A0(n20),
	.A1(n10),
	.B0(current_state[2]),
	.B1(n1),
	.Y(next_state[2]));
   NOR2X2M U13 (.A(N62),
	.B(ALU_result_valid),
	.Y(n13));
   NAND2BXLM U14 (.AN(N62),
	.B(ALU_result_valid),
	.Y(n16));
   CLKINVX2M U15 (.A(n16),
	.Y(n12));
   AOI222XLM U16 (.A0(N62),
	.A1(read_data[5]),
	.B0(message[5]),
	.B1(n13),
	.C0(n12),
	.C1(ALU_result[5]),
	.Y(n2));
   INVXLM U17 (.A(n2),
	.Y(n37));
   AOI222XLM U18 (.A0(N62),
	.A1(read_data[7]),
	.B0(message[7]),
	.B1(n13),
	.C0(n12),
	.C1(ALU_result[7]),
	.Y(n3));
   INVXLM U19 (.A(n3),
	.Y(n41));
   AOI222XLM U20 (.A0(N62),
	.A1(read_data[2]),
	.B0(message[2]),
	.B1(n13),
	.C0(n12),
	.C1(ALU_result[2]),
	.Y(n4));
   INVXLM U21 (.A(n4),
	.Y(n31));
   AOI222XLM U22 (.A0(N62),
	.A1(read_data[1]),
	.B0(message[1]),
	.B1(n13),
	.C0(n12),
	.C1(ALU_result[1]),
	.Y(n5));
   INVXLM U23 (.A(n5),
	.Y(n29));
   AOI222XLM U24 (.A0(N62),
	.A1(read_data[6]),
	.B0(message[6]),
	.B1(n13),
	.C0(n12),
	.C1(ALU_result[6]),
	.Y(n6));
   AOI222XLM U25 (.A0(N62),
	.A1(read_data[4]),
	.B0(message[4]),
	.B1(n13),
	.C0(n12),
	.C1(ALU_result[4]),
	.Y(n7));
   INVXLM U26 (.A(n7),
	.Y(n35));
   AOI222XLM U27 (.A0(N62),
	.A1(read_data[3]),
	.B0(message[3]),
	.B1(n13),
	.C0(n12),
	.C1(ALU_result[3]),
	.Y(n8));
   INVXLM U28 (.A(n8),
	.Y(n33));
   AOI222XLM U29 (.A0(N62),
	.A1(read_data[0]),
	.B0(message[0]),
	.B1(n13),
	.C0(n12),
	.C1(ALU_result[0]),
	.Y(n9));
   INVXLM U30 (.A(n9),
	.Y(n27));
   AOI211X2M U31 (.A0(current_state[0]),
	.A1(current_state[1]),
	.B0(current_state[2]),
	.C0(n22),
	.Y(n15));
   NAND2BXLM U32 (.AN(n15),
	.B(n10),
	.Y(transmitter_parallel_data_valid));
   NOR2XLM U33 (.A(current_state[2]),
	.B(n22),
	.Y(n11));
   INVXLM U34 (.A(n10),
	.Y(n14));
   NOR2XLM U35 (.A(n11),
	.B(n14),
	.Y(D_UART_receiver_controller_enable));
   AO22XLM U37 (.A0(message[15]),
	.A1(n13),
	.B0(n12),
	.B1(ALU_result[15]),
	.Y(n57));
   AO22XLM U38 (.A0(message[14]),
	.A1(n13),
	.B0(n12),
	.B1(ALU_result[14]),
	.Y(n55));
   AO22XLM U39 (.A0(message[13]),
	.A1(n13),
	.B0(n12),
	.B1(ALU_result[13]),
	.Y(n53));
   AO22XLM U40 (.A0(message[12]),
	.A1(n13),
	.B0(n12),
	.B1(ALU_result[12]),
	.Y(n51));
   AO22XLM U41 (.A0(message[11]),
	.A1(n13),
	.B0(n12),
	.B1(ALU_result[11]),
	.Y(n49));
   AO22XLM U42 (.A0(message[10]),
	.A1(n13),
	.B0(n12),
	.B1(ALU_result[10]),
	.Y(n47));
   AO22XLM U43 (.A0(message[9]),
	.A1(n13),
	.B0(n12),
	.B1(ALU_result[9]),
	.Y(n45));
   AO22XLM U44 (.A0(message[8]),
	.A1(n13),
	.B0(n12),
	.B1(ALU_result[8]),
	.Y(n43));
   AO22XLM U46 (.A0(n15),
	.A1(message[7]),
	.B0(n14),
	.B1(message[15]),
	.Y(transmitter_parallel_data[7]));
   AO22XLM U47 (.A0(n15),
	.A1(message[6]),
	.B0(n14),
	.B1(message[14]),
	.Y(transmitter_parallel_data[6]));
   AO22XLM U48 (.A0(n15),
	.A1(message[5]),
	.B0(n14),
	.B1(message[13]),
	.Y(transmitter_parallel_data[5]));
   AO22XLM U49 (.A0(n15),
	.A1(message[4]),
	.B0(n14),
	.B1(message[12]),
	.Y(transmitter_parallel_data[4]));
   AO22XLM U50 (.A0(n15),
	.A1(message[3]),
	.B0(n14),
	.B1(message[11]),
	.Y(transmitter_parallel_data[3]));
   AO22XLM U51 (.A0(n15),
	.A1(message[2]),
	.B0(n14),
	.B1(message[10]),
	.Y(transmitter_parallel_data[2]));
   AO22XLM U52 (.A0(n15),
	.A1(message[1]),
	.B0(n14),
	.B1(message[9]),
	.Y(transmitter_parallel_data[1]));
   AO22XLM U53 (.A0(n15),
	.A1(message[0]),
	.B0(n14),
	.B1(message[8]),
	.Y(transmitter_parallel_data[0]));
   OAI2B1XLM U54 (.A0(transmitter_Q_pulse_generator),
	.A1N(current_state[0]),
	.B0(current_state[1]),
	.Y(n18));
   AOI221XLM U55 (.A0(n17),
	.A1(n18),
	.B0(n16),
	.B1(n18),
	.C0(current_state[2]),
	.Y(next_state[1]));
   OAI21XLM U56 (.A0(n20),
	.A1(current_state[1]),
	.B0(n18),
	.Y(n19));
   OAI21XLM U57 (.A0(n20),
	.A1(current_state[0]),
	.B0(n19),
	.Y(n24));
   NAND3XLM U58 (.A(N62),
	.B(n22),
	.C(n21),
	.Y(n23));
   AOI21XLM U59 (.A0(n24),
	.A1(n23),
	.B0(current_state[2]),
	.Y(next_state[0]));
   SDFFRQX2M \message_reg[6]  (.SI(message[5]),
	.SE(p1),
	.D(n39),
	.CK(clk),
	.RN(reset),
	.Q(message[6]));
   SDFFRQX2M \message_reg[8]  (.SI(message[7]),
	.SE(p1),
	.D(n43),
	.CK(clk),
	.RN(reset),
	.Q(message[8]));
   SDFFRQX2M \message_reg[2]  (.SI(message[1]),
	.SE(test_se),
	.D(n31),
	.CK(clk),
	.RN(reset),
	.Q(message[2]));
   SDFFRQX2M \message_reg[3]  (.SI(message[2]),
	.SE(test_se),
	.D(n33),
	.CK(clk),
	.RN(reset),
	.Q(message[3]));
   SDFFRQX2M \message_reg[4]  (.SI(message[3]),
	.SE(test_se),
	.D(n35),
	.CK(clk),
	.RN(reset),
	.Q(message[4]));
   SDFFRQX2M \message_reg[5]  (.SI(message[4]),
	.SE(p1),
	.D(n37),
	.CK(clk),
	.RN(reset),
	.Q(message[5]));
   SDFFRQX2M \message_reg[7]  (.SI(message[6]),
	.SE(p1),
	.D(n41),
	.CK(clk),
	.RN(reset),
	.Q(message[7]));
   SDFFRQX2M \message_reg[9]  (.SI(message[8]),
	.SE(p1),
	.D(n45),
	.CK(clk),
	.RN(reset),
	.Q(message[9]));
   SDFFRQX2M \message_reg[10]  (.SI(message[9]),
	.SE(p1),
	.D(n47),
	.CK(clk),
	.RN(reset),
	.Q(message[10]));
   SDFFRQX2M \message_reg[11]  (.SI(message[10]),
	.SE(p1),
	.D(n49),
	.CK(clk),
	.RN(reset),
	.Q(message[11]));
   SDFFRQX2M \message_reg[12]  (.SI(message[11]),
	.SE(p1),
	.D(n51),
	.CK(clk),
	.RN(reset),
	.Q(message[12]));
   SDFFRQX2M \message_reg[13]  (.SI(message[12]),
	.SE(p1),
	.D(n53),
	.CK(clk),
	.RN(reset),
	.Q(message[13]));
   SDFFRQX2M \message_reg[14]  (.SI(message[13]),
	.SE(p1),
	.D(n55),
	.CK(clk),
	.RN(reset),
	.Q(message[14]));
   SDFFSQX1M UART_receiver_controller_enable_reg (.SI(test_si),
	.SE(test_se),
	.D(D_UART_receiver_controller_enable),
	.CK(clk),
	.SN(reset),
	.Q(UART_receiver_controller_enable));
   SDFFRQX1M \message_reg[1]  (.SI(message[0]),
	.SE(test_se),
	.D(n29),
	.CK(clk),
	.RN(reset),
	.Q(message[1]));
   SDFFRQX1M \message_reg[15]  (.SI(message[14]),
	.SE(p1),
	.D(n57),
	.CK(clk),
	.RN(reset),
	.Q(message[15]));
endmodule

module UART_receiver_controller_test_1 (
	clk, 
	reset, 
	enable, 
	parallel_data_valid_synchronized, 
	parallel_data_synchronized, 
	ALU_function, 
	ALU_enable, 
	ALU_clk_enable, 
	address, 
	write_enable, 
	write_data, 
	read_enable, 
	test_si, 
	test_so, 
	test_se, 
	multiplexed_reference_clk__L3_N1);
   input clk;
   input reset;
   input enable;
   input parallel_data_valid_synchronized;
   input [7:0] parallel_data_synchronized;
   output [3:0] ALU_function;
   output ALU_enable;
   output ALU_clk_enable;
   output [3:0] address;
   output write_enable;
   output [7:0] write_data;
   output read_enable;
   input test_si;
   output test_so;
   input test_se;
   input multiplexed_reference_clk__L3_N1;

   // Internal wires
   wire N102;
   wire n46;
   wire n47;
   wire n48;
   wire n49;
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire n25;
   wire n26;
   wire n27;
   wire n28;
   wire n29;
   wire n30;
   wire n31;
   wire n32;
   wire n33;
   wire [2:0] current_state;
   wire [2:0] next_state;
   wire [3:0] Q_write_address_register;
   wire [1:0] counter;

   assign test_so = current_state[2] ;

   SDFFRQX1M \current_state_reg[0]  (.SI(counter[1]),
	.SE(test_se),
	.D(next_state[0]),
	.CK(clk),
	.RN(reset),
	.Q(current_state[0]));
   SDFFRQX1M \current_state_reg[2]  (.SI(current_state[1]),
	.SE(test_se),
	.D(next_state[2]),
	.CK(clk),
	.RN(reset),
	.Q(current_state[2]));
   SDFFRQX1M \current_state_reg[1]  (.SI(current_state[0]),
	.SE(test_se),
	.D(next_state[1]),
	.CK(clk),
	.RN(reset),
	.Q(current_state[1]));
   SDFFRQX1M \counter_reg[1]  (.SI(counter[0]),
	.SE(test_se),
	.D(N102),
	.CK(clk),
	.RN(reset),
	.Q(counter[1]));
   NOR2BXLM U3 (.AN(n18),
	.B(n16),
	.Y(n15));
   NOR2XLM U4 (.A(n15),
	.B(n31),
	.Y(write_data[2]));
   NOR2XLM U5 (.A(n29),
	.B(n22),
	.Y(ALU_function[0]));
   INVXLM U6 (.A(n14),
	.Y(n21));
   INVXLM U7 (.A(parallel_data_valid_synchronized),
	.Y(n8));
   NOR3XLM U8 (.A(counter[1]),
	.B(counter[0]),
	.C(n8),
	.Y(n1));
   INVXLM U9 (.A(current_state[1]),
	.Y(n19));
   NAND3XLM U10 (.A(current_state[2]),
	.B(n1),
	.C(n19),
	.Y(n18));
   INVXLM U11 (.A(n1),
	.Y(n27));
   NOR4X1M U12 (.A(current_state[0]),
	.B(current_state[2]),
	.C(n19),
	.D(n27),
	.Y(n16));
   INVXLM U13 (.A(parallel_data_synchronized[2]),
	.Y(n31));
   INVXLM U14 (.A(parallel_data_synchronized[3]),
	.Y(n32));
   NOR2XLM U15 (.A(n15),
	.B(n32),
	.Y(write_data[3]));
   INVXLM U16 (.A(parallel_data_synchronized[1]),
	.Y(n30));
   INVXLM U17 (.A(current_state[0]),
	.Y(n28));
   NOR2XLM U18 (.A(n28),
	.B(n19),
	.Y(n26));
   INVXLM U19 (.A(current_state[2]),
	.Y(n25));
   NAND3XLM U20 (.A(n26),
	.B(n25),
	.C(n1),
	.Y(n2));
   OAI2BB2XLM U21 (.A0N(n16),
	.A1N(Q_write_address_register[1]),
	.B0(n30),
	.B1(n2),
	.Y(address[1]));
   OAI2BB2XLM U22 (.A0N(n16),
	.A1N(Q_write_address_register[2]),
	.B0(n31),
	.B1(n2),
	.Y(address[2]));
   OAI2BB2XLM U23 (.A0N(n16),
	.A1N(Q_write_address_register[3]),
	.B0(n32),
	.B1(n2),
	.Y(address[3]));
   INVXLM U24 (.A(n2),
	.Y(read_enable));
   INVXLM U25 (.A(n15),
	.Y(write_enable));
   NOR2XLM U26 (.A(n25),
	.B(n19),
	.Y(n14));
   NOR2XLM U27 (.A(n28),
	.B(n21),
	.Y(ALU_enable));
   INVXLM U28 (.A(ALU_enable),
	.Y(n22));
   NOR2XLM U29 (.A(n32),
	.B(n22),
	.Y(ALU_function[3]));
   NOR2XLM U30 (.A(n31),
	.B(n22),
	.Y(ALU_function[2]));
   AND2X1M U31 (.A(parallel_data_synchronized[6]),
	.B(write_enable),
	.Y(write_data[6]));
   INVXLM U32 (.A(parallel_data_synchronized[0]),
	.Y(n29));
   NOR2XLM U33 (.A(n15),
	.B(n29),
	.Y(write_data[0]));
   INVXLM U34 (.A(parallel_data_synchronized[5]),
	.Y(n3));
   NOR2XLM U35 (.A(n15),
	.B(n3),
	.Y(write_data[5]));
   INVXLM U36 (.A(parallel_data_synchronized[4]),
	.Y(n10));
   NOR2XLM U37 (.A(n15),
	.B(n10),
	.Y(write_data[4]));
   AND2X1M U38 (.A(parallel_data_synchronized[7]),
	.B(write_enable),
	.Y(write_data[7]));
   NOR2XLM U39 (.A(n30),
	.B(n22),
	.Y(ALU_function[1]));
   AOI33XLM U40 (.A0(parallel_data_valid_synchronized),
	.A1(current_state[0]),
	.A2(n19),
	.B0(current_state[1]),
	.B1(n25),
	.B2(n8),
	.Y(n7));
   NOR4XLM U41 (.A(parallel_data_synchronized[2]),
	.B(parallel_data_synchronized[6]),
	.C(n30),
	.D(n3),
	.Y(n11));
   AND4XLM U42 (.A(parallel_data_synchronized[6]),
	.B(parallel_data_synchronized[2]),
	.C(n3),
	.D(n30),
	.Y(n24));
   NOR2XLM U43 (.A(n11),
	.B(n24),
	.Y(n5));
   NOR4XLM U44 (.A(current_state[2]),
	.B(current_state[0]),
	.C(current_state[1]),
	.D(n8),
	.Y(n4));
   NAND4XLM U45 (.A(enable),
	.B(parallel_data_synchronized[3]),
	.C(parallel_data_synchronized[7]),
	.D(n4),
	.Y(n9));
   OR4X1M U46 (.A(n5),
	.B(n9),
	.C(n29),
	.D(n10),
	.Y(n6));
   OAI211XLM U47 (.A0(current_state[0]),
	.A1(n21),
	.B0(n7),
	.C0(n6),
	.Y(next_state[1]));
   NOR2XLM U48 (.A(current_state[0]),
	.B(n8),
	.Y(n12));
   AOI221XLM U49 (.A0(parallel_data_synchronized[0]),
	.A1(n10),
	.B0(n29),
	.B1(parallel_data_synchronized[4]),
	.C0(n9),
	.Y(n23));
   AOI22XLM U50 (.A0(current_state[2]),
	.A1(n12),
	.B0(n11),
	.B1(n23),
	.Y(n13));
   OAI31XLM U51 (.A0(parallel_data_valid_synchronized),
	.A1(n14),
	.A2(n28),
	.B0(n13),
	.Y(next_state[0]));
   NOR2XLM U52 (.A(n15),
	.B(n30),
	.Y(write_data[1]));
   AOI22XLM U53 (.A0(parallel_data_synchronized[0]),
	.A1(read_enable),
	.B0(Q_write_address_register[0]),
	.B1(n16),
	.Y(n17));
   OAI21XLM U54 (.A0(n28),
	.A1(n18),
	.B0(n17),
	.Y(address[0]));
   NAND4BXLM U55 (.AN(counter[0]),
	.B(counter[1]),
	.C(n25),
	.D(n19),
	.Y(n20));
   OAI222XLM U56 (.A0(n21),
	.A1(n27),
	.B0(n21),
	.B1(n28),
	.C0(current_state[0]),
	.C1(n20),
	.Y(ALU_clk_enable));
   NOR2XLM U57 (.A(parallel_data_valid_synchronized),
	.B(n22),
	.Y(N102));
   OAI2BB2XLM U58 (.A0N(n24),
	.A1N(n23),
	.B0(n26),
	.B1(n25),
	.Y(next_state[2]));
   NOR4X1M U59 (.A(current_state[1]),
	.B(current_state[2]),
	.C(n28),
	.D(n27),
	.Y(n33));
   AOI2BB2XLM U60 (.A0N(Q_write_address_register[0]),
	.A1N(n33),
	.B0(n33),
	.B1(n29),
	.Y(n49));
   AOI2BB2XLM U61 (.A0N(Q_write_address_register[1]),
	.A1N(n33),
	.B0(n33),
	.B1(n30),
	.Y(n48));
   AOI2BB2XLM U62 (.A0N(Q_write_address_register[2]),
	.A1N(n33),
	.B0(n33),
	.B1(n31),
	.Y(n47));
   AOI2BB2XLM U63 (.A0N(Q_write_address_register[3]),
	.A1N(n33),
	.B0(n33),
	.B1(n32),
	.Y(n46));
   SDFFRQX2M \Q_write_address_register_reg[3]  (.SI(Q_write_address_register[2]),
	.SE(test_se),
	.D(n46),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(Q_write_address_register[3]));
   SDFFRQX2M \Q_write_address_register_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(n49),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(Q_write_address_register[0]));
   SDFFRQX2M \Q_write_address_register_reg[1]  (.SI(Q_write_address_register[0]),
	.SE(test_se),
	.D(n48),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(Q_write_address_register[1]));
   SDFFRQX2M \Q_write_address_register_reg[2]  (.SI(Q_write_address_register[1]),
	.SE(test_se),
	.D(n47),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(Q_write_address_register[2]));
   SDFFRQX2M \counter_reg[0]  (.SI(Q_write_address_register[3]),
	.SE(test_se),
	.D(parallel_data_valid_synchronized),
	.CK(clk),
	.RN(reset),
	.Q(counter[0]));
endmodule

module system_controller_test_1 (
	clk, 
	reset, 
	ALU_result_valid, 
	ALU_result, 
	register_file_read_data_valid, 
	register_file_read_data, 
	transmitter_busy_synchronized, 
	transmitter_Q_pulse_generator, 
	receiver_parallel_data_valid_synchronized, 
	receiver_parallel_data_synchronized, 
	ALU_function, 
	ALU_enable, 
	ALU_clk_enable, 
	transmitter_parallel_data_valid, 
	transmitter_parallel_data, 
	register_file_address, 
	register_file_write_enable, 
	register_file_write_data, 
	register_file_read_enable, 
	test_so, 
	test_se, 
	p1, 
	multiplexed_reference_clk__L3_N1);
   input clk;
   input reset;
   input ALU_result_valid;
   input [15:0] ALU_result;
   input register_file_read_data_valid;
   input [7:0] register_file_read_data;
   input transmitter_busy_synchronized;
   input transmitter_Q_pulse_generator;
   input receiver_parallel_data_valid_synchronized;
   input [7:0] receiver_parallel_data_synchronized;
   output [3:0] ALU_function;
   output ALU_enable;
   output ALU_clk_enable;
   output transmitter_parallel_data_valid;
   output [7:0] transmitter_parallel_data;
   output [3:0] register_file_address;
   output register_file_write_enable;
   output [7:0] register_file_write_data;
   output register_file_read_enable;
   output test_so;
   input test_se;
   input p1;
   input multiplexed_reference_clk__L3_N1;

   // Internal wires
   wire receiver_controller_enable;
   wire n2;

   UART_transmitter_controller_test_1 U_UART_transmitter_controller (.clk(clk),
	.reset(reset),
	.ALU_result_valid(ALU_result_valid),
	.ALU_result(ALU_result),
	.read_data_valid(register_file_read_data_valid),
	.read_data(register_file_read_data),
	.transmitter_busy_synchronized(transmitter_busy_synchronized),
	.transmitter_Q_pulse_generator(transmitter_Q_pulse_generator),
	.transmitter_parallel_data_valid(transmitter_parallel_data_valid),
	.transmitter_parallel_data(transmitter_parallel_data),
	.UART_receiver_controller_enable(receiver_controller_enable),
	.test_si(n2),
	.test_so(test_so),
	.test_se(test_se),
	.p1(p1));
   UART_receiver_controller_test_1 U_UART_receiver_controller (.clk(clk),
	.reset(reset),
	.enable(receiver_controller_enable),
	.parallel_data_valid_synchronized(receiver_parallel_data_valid_synchronized),
	.parallel_data_synchronized(receiver_parallel_data_synchronized),
	.ALU_function(ALU_function),
	.ALU_enable(ALU_enable),
	.ALU_clk_enable(ALU_clk_enable),
	.address(register_file_address),
	.write_enable(register_file_write_enable),
	.write_data(register_file_write_data),
	.read_enable(register_file_read_enable),
	.test_si(register_file_read_data_valid),
	.test_so(n2),
	.test_se(test_se),
	.multiplexed_reference_clk__L3_N1(multiplexed_reference_clk__L3_N1));
endmodule

module clock_gating_cell (
	clk, 
	clk_enable, 
	gated_clock);
   input clk;
   input clk_enable;
   output gated_clock;

   TLATNCAX20M U_ICG_cell (.E(clk_enable),
	.CK(clk),
	.ECK(gated_clock));
endmodule

module ALU_test_1 (
	clk, 
	reset, 
	A, 
	B, 
	ALU_function, 
	enable, 
	ALU_result_valid, 
	ALU_result, 
	test_si, 
	test_se, 
	p1);
   input clk;
   input reset;
   input [7:0] A;
   input [7:0] B;
   input [3:0] ALU_function;
   input enable;
   output ALU_result_valid;
   output [15:0] ALU_result;
   input test_si;
   input test_se;
   input p1;

   // Internal wires
   wire FE_OFN13_n344;
   wire N178;
   wire N179;
   wire N180;
   wire N181;
   wire N182;
   wire N183;
   wire N184;
   wire N185;
   wire N186;
   wire N187;
   wire N188;
   wire N189;
   wire N190;
   wire N191;
   wire N192;
   wire N193;
   wire N194;
   wire \C7M/DATA15_0 ;
   wire \C7M/DATA15_1 ;
   wire \C7M/DATA15_2 ;
   wire \C7M/DATA15_3 ;
   wire \C7M/DATA15_4 ;
   wire \C7M/DATA15_5 ;
   wire \C7M/DATA15_6 ;
   wire \C7M/DATA15_7 ;
   wire \DP_OP_29J1_122_2578/n43 ;
   wire \DP_OP_29J1_122_2578/n29 ;
   wire \DP_OP_29J1_122_2578/n28 ;
   wire \DP_OP_29J1_122_2578/n27 ;
   wire \DP_OP_29J1_122_2578/n26 ;
   wire \DP_OP_29J1_122_2578/n25 ;
   wire \DP_OP_29J1_122_2578/n24 ;
   wire \DP_OP_29J1_122_2578/n23 ;
   wire \DP_OP_29J1_122_2578/n22 ;
   wire \DP_OP_29J1_122_2578/n16 ;
   wire \DP_OP_29J1_122_2578/n15 ;
   wire \DP_OP_29J1_122_2578/n14 ;
   wire \DP_OP_29J1_122_2578/n13 ;
   wire \DP_OP_29J1_122_2578/n12 ;
   wire \DP_OP_29J1_122_2578/n11 ;
   wire \DP_OP_29J1_122_2578/n10 ;
   wire \DP_OP_29J1_122_2578/n9 ;
   wire \intadd_0/A[4] ;
   wire \intadd_0/A[3] ;
   wire \intadd_0/A[2] ;
   wire \intadd_0/A[1] ;
   wire \intadd_0/A[0] ;
   wire \intadd_0/B[4] ;
   wire \intadd_0/B[3] ;
   wire \intadd_0/B[2] ;
   wire \intadd_0/B[1] ;
   wire \intadd_0/B[0] ;
   wire \intadd_0/CI ;
   wire \intadd_0/SUM[4] ;
   wire \intadd_0/SUM[3] ;
   wire \intadd_0/SUM[2] ;
   wire \intadd_0/SUM[1] ;
   wire \intadd_0/SUM[0] ;
   wire \intadd_0/n5 ;
   wire \intadd_0/n4 ;
   wire \intadd_0/n3 ;
   wire \intadd_0/n2 ;
   wire \intadd_0/n1 ;
   wire \intadd_1/A[3] ;
   wire \intadd_1/A[2] ;
   wire \intadd_1/A[1] ;
   wire \intadd_1/A[0] ;
   wire \intadd_1/B[4] ;
   wire \intadd_1/B[3] ;
   wire \intadd_1/B[2] ;
   wire \intadd_1/B[1] ;
   wire \intadd_1/B[0] ;
   wire \intadd_1/CI ;
   wire \intadd_1/SUM[4] ;
   wire \intadd_1/SUM[3] ;
   wire \intadd_1/SUM[2] ;
   wire \intadd_1/SUM[1] ;
   wire \intadd_1/SUM[0] ;
   wire \intadd_1/n5 ;
   wire \intadd_1/n4 ;
   wire \intadd_1/n3 ;
   wire \intadd_1/n2 ;
   wire \intadd_1/n1 ;
   wire \intadd_2/A[3] ;
   wire \intadd_2/A[2] ;
   wire \intadd_2/A[1] ;
   wire \intadd_2/A[0] ;
   wire \intadd_2/B[3] ;
   wire \intadd_2/B[2] ;
   wire \intadd_2/B[1] ;
   wire \intadd_2/B[0] ;
   wire \intadd_2/CI ;
   wire \intadd_2/SUM[3] ;
   wire \intadd_2/SUM[2] ;
   wire \intadd_2/SUM[1] ;
   wire \intadd_2/SUM[0] ;
   wire \intadd_2/n4 ;
   wire \intadd_2/n3 ;
   wire \intadd_2/n2 ;
   wire \intadd_2/n1 ;
   wire \intadd_3/A[3] ;
   wire \intadd_3/A[2] ;
   wire \intadd_3/A[1] ;
   wire \intadd_3/A[0] ;
   wire \intadd_3/B[2] ;
   wire \intadd_3/B[1] ;
   wire \intadd_3/B[0] ;
   wire \intadd_3/CI ;
   wire \intadd_3/SUM[2] ;
   wire \intadd_3/SUM[0] ;
   wire \intadd_3/n4 ;
   wire \intadd_3/n3 ;
   wire \intadd_3/n2 ;
   wire \intadd_3/n1 ;
   wire \intadd_4/A[0] ;
   wire \intadd_4/B[1] ;
   wire \intadd_4/B[0] ;
   wire \intadd_4/CI ;
   wire \intadd_4/SUM[0] ;
   wire \intadd_4/n3 ;
   wire \intadd_4/n2 ;
   wire \intadd_4/n1 ;
   wire \intadd_5/A[2] ;
   wire \intadd_5/A[0] ;
   wire \intadd_5/B[1] ;
   wire \intadd_5/B[0] ;
   wire \intadd_5/CI ;
   wire \intadd_5/n3 ;
   wire \intadd_5/n2 ;
   wire \intadd_5/n1 ;
   wire \intadd_6/A[2] ;
   wire \intadd_6/A[0] ;
   wire \intadd_6/B[2] ;
   wire \intadd_6/B[1] ;
   wire \intadd_6/B[0] ;
   wire \intadd_6/CI ;
   wire \intadd_6/SUM[2] ;
   wire \intadd_6/SUM[1] ;
   wire \intadd_6/SUM[0] ;
   wire \intadd_6/n3 ;
   wire \intadd_6/n2 ;
   wire \intadd_6/n1 ;
   wire \intadd_7/A[1] ;
   wire \intadd_7/A[0] ;
   wire \intadd_7/B[2] ;
   wire \intadd_7/B[1] ;
   wire \intadd_7/B[0] ;
   wire \intadd_7/CI ;
   wire \intadd_7/SUM[2] ;
   wire \intadd_7/SUM[1] ;
   wire \intadd_7/SUM[0] ;
   wire \intadd_7/n3 ;
   wire \intadd_7/n2 ;
   wire \intadd_7/n1 ;
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire n25;
   wire n26;
   wire n27;
   wire n28;
   wire n29;
   wire n30;
   wire n31;
   wire n32;
   wire n33;
   wire n34;
   wire n35;
   wire n36;
   wire n37;
   wire n38;
   wire n39;
   wire n40;
   wire n41;
   wire n42;
   wire n43;
   wire n44;
   wire n45;
   wire n46;
   wire n47;
   wire n48;
   wire n49;
   wire n50;
   wire n51;
   wire n52;
   wire n53;
   wire n54;
   wire n55;
   wire n56;
   wire n57;
   wire n58;
   wire n59;
   wire n60;
   wire n61;
   wire n62;
   wire n63;
   wire n64;
   wire n65;
   wire n66;
   wire n67;
   wire n68;
   wire n69;
   wire n70;
   wire n71;
   wire n72;
   wire n73;
   wire n74;
   wire n75;
   wire n76;
   wire n77;
   wire n78;
   wire n79;
   wire n80;
   wire n81;
   wire n82;
   wire n83;
   wire n84;
   wire n85;
   wire n86;
   wire n87;
   wire n88;
   wire n89;
   wire n90;
   wire n91;
   wire n92;
   wire n93;
   wire n94;
   wire n95;
   wire n96;
   wire n97;
   wire n98;
   wire n99;
   wire n100;
   wire n101;
   wire n102;
   wire n103;
   wire n104;
   wire n105;
   wire n106;
   wire n107;
   wire n108;
   wire n109;
   wire n110;
   wire n111;
   wire n112;
   wire n113;
   wire n114;
   wire n115;
   wire n116;
   wire n117;
   wire n118;
   wire n119;
   wire n120;
   wire n121;
   wire n122;
   wire n123;
   wire n124;
   wire n125;
   wire n126;
   wire n127;
   wire n128;
   wire n129;
   wire n130;
   wire n131;
   wire n132;
   wire n133;
   wire n134;
   wire n135;
   wire n136;
   wire n137;
   wire n138;
   wire n139;
   wire n140;
   wire n141;
   wire n142;
   wire n143;
   wire n144;
   wire n145;
   wire n146;
   wire n148;
   wire n149;
   wire n150;
   wire n151;
   wire n152;
   wire n153;
   wire n154;
   wire n155;
   wire n156;
   wire n157;
   wire n158;
   wire n159;
   wire n160;
   wire n161;
   wire n162;
   wire n163;
   wire n164;
   wire n165;
   wire n166;
   wire n167;
   wire n168;
   wire n169;
   wire n170;
   wire n171;
   wire n172;
   wire n173;
   wire n174;
   wire n175;
   wire n176;
   wire n177;
   wire n178;
   wire n179;
   wire n180;
   wire n181;
   wire n182;
   wire n183;
   wire n184;
   wire n185;
   wire n186;
   wire n187;
   wire n188;
   wire n189;
   wire n190;
   wire n191;
   wire n192;
   wire n193;
   wire n194;
   wire n195;
   wire n196;
   wire n197;
   wire n198;
   wire n199;
   wire n200;
   wire n201;
   wire n202;
   wire n203;
   wire n204;
   wire n205;
   wire n206;
   wire n207;
   wire n208;
   wire n209;
   wire n210;
   wire n211;
   wire n212;
   wire n213;
   wire n214;
   wire n215;
   wire n216;
   wire n217;
   wire n218;
   wire n219;
   wire n220;
   wire n221;
   wire n222;
   wire n223;
   wire n224;
   wire n225;
   wire n226;
   wire n227;
   wire n228;
   wire n229;
   wire n230;
   wire n231;
   wire n232;
   wire n233;
   wire n234;
   wire n235;
   wire n236;
   wire n237;
   wire n238;
   wire n239;
   wire n240;
   wire n241;
   wire n242;
   wire n243;
   wire n244;
   wire n245;
   wire n246;
   wire n247;
   wire n248;
   wire n249;
   wire n250;
   wire n251;
   wire n252;
   wire n253;
   wire n254;
   wire n255;
   wire n256;
   wire n257;
   wire n258;
   wire n259;
   wire n260;
   wire n261;
   wire n262;
   wire n263;
   wire n264;
   wire n265;
   wire n266;
   wire n267;
   wire n268;
   wire n269;
   wire n270;
   wire n271;
   wire n272;
   wire n273;
   wire n274;
   wire n275;
   wire n276;
   wire n277;
   wire n278;
   wire n279;
   wire n280;
   wire n281;
   wire n282;
   wire n283;
   wire n284;
   wire n285;
   wire n286;
   wire n287;
   wire n288;
   wire n289;
   wire n290;
   wire n291;
   wire n292;
   wire n293;
   wire n294;
   wire n295;
   wire n296;
   wire n297;
   wire n298;
   wire n299;
   wire n300;
   wire n301;
   wire n302;
   wire n303;
   wire n304;
   wire n305;
   wire n306;
   wire n307;
   wire n308;
   wire n309;
   wire n310;
   wire n311;
   wire n312;
   wire n313;
   wire n314;
   wire n315;
   wire n316;
   wire n317;
   wire n318;
   wire n319;
   wire n320;
   wire n321;
   wire n322;
   wire n323;
   wire n324;
   wire n325;
   wire n326;
   wire n327;
   wire n328;
   wire n329;
   wire n330;
   wire n331;
   wire n332;
   wire n333;
   wire n334;
   wire n335;
   wire n336;
   wire n337;
   wire n338;
   wire n339;
   wire n340;
   wire n341;
   wire n342;
   wire n343;
   wire n344;
   wire n345;
   wire n346;
   wire n347;
   wire n348;
   wire n349;
   wire n350;
   wire n351;
   wire n352;
   wire n353;
   wire n354;
   wire n355;
   wire n356;
   wire n357;
   wire n358;
   wire n359;
   wire n360;
   wire n361;
   wire n362;
   wire n363;
   wire n364;
   wire n365;
   wire n366;
   wire n367;
   wire n368;
   wire n369;
   wire n370;
   wire n371;
   wire n372;

   BUFX2M FE_OFC13_n344 (.A(n344),
	.Y(FE_OFN13_n344));
   SDFFRQX1M \ALU_result_reg[15]  (.SI(ALU_result[14]),
	.SE(p1),
	.D(N194),
	.CK(clk),
	.RN(reset),
	.Q(ALU_result[15]));
   SDFFRQX1M \ALU_result_reg[14]  (.SI(ALU_result[13]),
	.SE(p1),
	.D(N193),
	.CK(clk),
	.RN(reset),
	.Q(ALU_result[14]));
   SDFFRQX1M \ALU_result_reg[13]  (.SI(ALU_result[12]),
	.SE(p1),
	.D(N192),
	.CK(clk),
	.RN(reset),
	.Q(ALU_result[13]));
   SDFFRQX1M \ALU_result_reg[12]  (.SI(ALU_result[11]),
	.SE(p1),
	.D(N191),
	.CK(clk),
	.RN(reset),
	.Q(ALU_result[12]));
   SDFFRQX1M \ALU_result_reg[11]  (.SI(ALU_result[10]),
	.SE(p1),
	.D(N190),
	.CK(clk),
	.RN(reset),
	.Q(ALU_result[11]));
   SDFFRQX1M \ALU_result_reg[10]  (.SI(ALU_result[9]),
	.SE(p1),
	.D(N189),
	.CK(clk),
	.RN(reset),
	.Q(ALU_result[10]));
   SDFFRQX1M \ALU_result_reg[9]  (.SI(ALU_result[8]),
	.SE(p1),
	.D(N188),
	.CK(clk),
	.RN(reset),
	.Q(ALU_result[9]));
   SDFFRQX1M \ALU_result_reg[8]  (.SI(ALU_result[7]),
	.SE(p1),
	.D(N187),
	.CK(clk),
	.RN(reset),
	.Q(ALU_result[8]));
   SDFFRQX1M \ALU_result_reg[7]  (.SI(ALU_result[6]),
	.SE(p1),
	.D(N186),
	.CK(clk),
	.RN(reset),
	.Q(ALU_result[7]));
   SDFFRQX1M \ALU_result_reg[6]  (.SI(ALU_result[5]),
	.SE(p1),
	.D(N185),
	.CK(clk),
	.RN(reset),
	.Q(ALU_result[6]));
   SDFFRQX1M \ALU_result_reg[5]  (.SI(ALU_result[4]),
	.SE(test_se),
	.D(N184),
	.CK(clk),
	.RN(reset),
	.Q(ALU_result[5]));
   SDFFRQX1M \ALU_result_reg[4]  (.SI(ALU_result[3]),
	.SE(test_se),
	.D(N183),
	.CK(clk),
	.RN(reset),
	.Q(ALU_result[4]));
   SDFFRQX1M \ALU_result_reg[3]  (.SI(ALU_result[2]),
	.SE(test_se),
	.D(N182),
	.CK(clk),
	.RN(reset),
	.Q(ALU_result[3]));
   SDFFRQX1M \ALU_result_reg[2]  (.SI(ALU_result[1]),
	.SE(test_se),
	.D(N181),
	.CK(clk),
	.RN(reset),
	.Q(ALU_result[2]));
   SDFFRQX1M \ALU_result_reg[1]  (.SI(ALU_result[0]),
	.SE(test_se),
	.D(N180),
	.CK(clk),
	.RN(reset),
	.Q(ALU_result[1]));
   SDFFRQX1M \ALU_result_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(N179),
	.CK(clk),
	.RN(reset),
	.Q(ALU_result[0]));
   SDFFRQX1M ALU_result_valid_reg (.SI(ALU_result[15]),
	.SE(test_se),
	.D(N178),
	.CK(clk),
	.RN(reset),
	.Q(ALU_result_valid));
   ADDFX1M \intadd_3/U3  (.A(\intadd_3/A[2] ),
	.B(\intadd_3/B[2] ),
	.CI(\intadd_3/n3 ),
	.S(\intadd_3/SUM[2] ),
	.CO(\intadd_3/n2 ));
   ADDFX1M \intadd_4/U3  (.A(\intadd_0/SUM[0] ),
	.B(\intadd_4/B[1] ),
	.CI(\intadd_4/n3 ),
	.S(\intadd_1/A[2] ),
	.CO(\intadd_4/n2 ));
   ADDFX1M \intadd_4/U2  (.A(\intadd_0/SUM[1] ),
	.B(\intadd_3/SUM[2] ),
	.CI(\intadd_4/n2 ),
	.S(\intadd_1/B[3] ),
	.CO(\intadd_4/n1 ));
   ADDFX1M \intadd_3/U2  (.A(\intadd_3/A[3] ),
	.B(\intadd_0/SUM[2] ),
	.CI(\intadd_3/n2 ),
	.S(\intadd_1/B[4] ),
	.CO(\intadd_3/n1 ));
   ADDFX1M \intadd_6/U2  (.A(\intadd_6/A[2] ),
	.B(\intadd_6/B[2] ),
	.CI(\intadd_6/n2 ),
	.S(\intadd_6/SUM[2] ),
	.CO(\intadd_6/n1 ));
   ADDFX1M \intadd_0/U3  (.A(\intadd_0/A[3] ),
	.B(\intadd_0/B[3] ),
	.CI(\intadd_0/n3 ),
	.S(\intadd_0/SUM[3] ),
	.CO(\intadd_0/n2 ));
   ADDFX1M \intadd_2/U3  (.A(\intadd_2/A[2] ),
	.B(\intadd_2/B[2] ),
	.CI(\intadd_2/n3 ),
	.S(\intadd_2/SUM[2] ),
	.CO(\intadd_2/n2 ));
   ADDFX1M \intadd_1/U2  (.A(\intadd_4/n1 ),
	.B(\intadd_1/B[4] ),
	.CI(\intadd_1/n2 ),
	.S(\intadd_1/SUM[4] ),
	.CO(\intadd_1/n1 ));
   ADDFX1M \DP_OP_29J1_122_2578/U18  (.A(\DP_OP_29J1_122_2578/n26 ),
	.B(A[3]),
	.CI(\DP_OP_29J1_122_2578/n14 ),
	.S(\C7M/DATA15_3 ),
	.CO(\DP_OP_29J1_122_2578/n13 ));
   ADDFX1M \DP_OP_29J1_122_2578/U17  (.A(\DP_OP_29J1_122_2578/n25 ),
	.B(A[4]),
	.CI(\DP_OP_29J1_122_2578/n13 ),
	.S(\C7M/DATA15_4 ),
	.CO(\DP_OP_29J1_122_2578/n12 ));
   ADDFX1M \DP_OP_29J1_122_2578/U14  (.A(\DP_OP_29J1_122_2578/n22 ),
	.B(A[7]),
	.CI(\DP_OP_29J1_122_2578/n10 ),
	.S(\C7M/DATA15_7 ),
	.CO(\DP_OP_29J1_122_2578/n9 ));
   ADDFX1M \intadd_0/U5  (.A(\intadd_0/A[1] ),
	.B(\intadd_0/B[1] ),
	.CI(\intadd_0/n5 ),
	.S(\intadd_0/SUM[1] ),
	.CO(\intadd_0/n4 ));
   ADDFX1M \intadd_3/U5  (.A(\intadd_3/A[0] ),
	.B(\intadd_3/B[0] ),
	.CI(\intadd_3/CI ),
	.S(\intadd_3/SUM[0] ),
	.CO(\intadd_3/n4 ));
   ADDFX1M \intadd_3/U4  (.A(\intadd_3/A[1] ),
	.B(\intadd_3/B[1] ),
	.CI(\intadd_3/n4 ),
	.S(\intadd_1/B[2] ),
	.CO(\intadd_3/n3 ));
   ADDFX1M \intadd_4/U4  (.A(\intadd_4/A[0] ),
	.B(\intadd_4/B[0] ),
	.CI(\intadd_4/CI ),
	.S(\intadd_4/SUM[0] ),
	.CO(\intadd_4/n3 ));
   ADDFX1M \intadd_5/U4  (.A(\intadd_5/A[0] ),
	.B(\intadd_5/B[0] ),
	.CI(\intadd_5/CI ),
	.S(\intadd_0/A[2] ),
	.CO(\intadd_5/n3 ));
   ADDFX1M \intadd_0/U4  (.A(\intadd_0/A[2] ),
	.B(\intadd_0/B[2] ),
	.CI(\intadd_0/n4 ),
	.S(\intadd_0/SUM[2] ),
	.CO(\intadd_0/n3 ));
   ADDFX1M \intadd_6/U4  (.A(\intadd_6/A[0] ),
	.B(\intadd_6/B[0] ),
	.CI(\intadd_6/CI ),
	.S(\intadd_6/SUM[0] ),
	.CO(\intadd_6/n3 ));
   ADDFX1M \intadd_7/U2  (.A(\intadd_6/SUM[0] ),
	.B(\intadd_7/B[2] ),
	.CI(\intadd_7/n2 ),
	.S(\intadd_7/SUM[2] ),
	.CO(\intadd_7/n1 ));
   ADDFX1M \intadd_1/U5  (.A(\intadd_1/A[1] ),
	.B(\intadd_1/B[1] ),
	.CI(\intadd_1/n5 ),
	.S(\intadd_1/SUM[1] ),
	.CO(\intadd_1/n4 ));
   ADDFX1M \intadd_2/U5  (.A(\intadd_2/A[0] ),
	.B(\intadd_2/B[0] ),
	.CI(\intadd_2/CI ),
	.S(\intadd_2/SUM[0] ),
	.CO(\intadd_2/n4 ));
   ADDFX1M \intadd_5/U3  (.A(\intadd_2/SUM[0] ),
	.B(\intadd_5/B[1] ),
	.CI(\intadd_5/n3 ),
	.S(\intadd_0/B[3] ),
	.CO(\intadd_5/n2 ));
   ADDFX1M \intadd_2/U4  (.A(\intadd_2/A[1] ),
	.B(\intadd_2/B[1] ),
	.CI(\intadd_2/n4 ),
	.S(\intadd_2/SUM[1] ),
	.CO(\intadd_2/n3 ));
   ADDFX1M \intadd_5/U2  (.A(\intadd_5/A[2] ),
	.B(\intadd_2/SUM[1] ),
	.CI(\intadd_5/n2 ),
	.S(\intadd_0/B[4] ),
	.CO(\intadd_5/n1 ));
   ADDFX1M \intadd_0/U2  (.A(\intadd_0/A[4] ),
	.B(\intadd_0/B[4] ),
	.CI(\intadd_0/n2 ),
	.S(\intadd_0/SUM[4] ),
	.CO(\intadd_0/n1 ));
   INVXLM U3 (.A(n19),
	.Y(n259));
   NAND3X2M U4 (.A(n27),
	.B(n4),
	.C(n15),
	.Y(n19));
   NOR2XLM U5 (.A(A[0]),
	.B(n317),
	.Y(n153));
   AOI22XLM U6 (.A0(B[0]),
	.A1(n153),
	.B0(A[1]),
	.B1(n155),
	.Y(n154));
   NOR2XLM U7 (.A(A[0]),
	.B(n372),
	.Y(n157));
   OAI31XLM U8 (.A0(n152),
	.A1(n151),
	.A2(n150),
	.B0(n149),
	.Y(n159));
   INVXLM U9 (.A(n201),
	.Y(n183));
   NOR2XLM U10 (.A(B[3]),
	.B(n112),
	.Y(n142));
   NAND2XLM U11 (.A(A[0]),
	.B(n372),
	.Y(n189));
   OAI21XLM U12 (.A0(n98),
	.A1(n97),
	.B0(n99),
	.Y(n96));
   OAI21XLM U13 (.A0(n46),
	.A1(n47),
	.B0(n44),
	.Y(n61));
   OAI21XLM U14 (.A0(n136),
	.A1(n135),
	.B0(n137),
	.Y(n134));
   AOI22XLM U15 (.A0(n317),
	.A1(n62),
	.B0(n61),
	.B1(n45),
	.Y(n55));
   NOR4XLM U16 (.A(n368),
	.B(n366),
	.C(n317),
	.D(n372),
	.Y(\intadd_1/A[0] ));
   NOR2XLM U17 (.A(n323),
	.B(n358),
	.Y(n304));
   AOI31XLM U18 (.A0(n210),
	.A1(n209),
	.A2(n208),
	.B0(n207),
	.Y(n212));
   AOI222XLM U19 (.A0(B[3]),
	.A1(n73),
	.B0(B[3]),
	.B1(n75),
	.C0(n73),
	.C1(n75),
	.Y(n68));
   INVXLM U20 (.A(\intadd_7/n1 ),
	.Y(n291));
   OAI31XLM U21 (.A0(n305),
	.A1(n304),
	.A2(n303),
	.B0(n302),
	.Y(\intadd_0/B[2] ));
   NOR2XLM U22 (.A(n88),
	.B(n334),
	.Y(n118));
   NAND2XLM U23 (.A(n323),
	.B(n318),
	.Y(n92));
   OAI211X2M U24 (.A0(n69),
	.A1(n54),
	.B0(n53),
	.C0(n52),
	.Y(n242));
   INVXLM U25 (.A(n231),
	.Y(n349));
   INVXLM U26 (.A(n345),
	.Y(n253));
   INVXLM U27 (.A(\intadd_2/SUM[2] ),
	.Y(n271));
   OAI211XLM U28 (.A0(n358),
	.A1(n233),
	.B0(n127),
	.C0(n126),
	.Y(n128));
   NOR2BXLM U29 (.AN(n22),
	.B(n21),
	.Y(n354));
   OAI22XLM U30 (.A0(n274),
	.A1(n349),
	.B0(n319),
	.B1(n253),
	.Y(n17));
   OAI21XLM U31 (.A0(n321),
	.A1(n253),
	.B0(n248),
	.Y(n249));
   AOI211XLM U32 (.A0(\C7M/DATA15_6 ),
	.A1(n259),
	.B0(n29),
	.C0(n28),
	.Y(n30));
   AOI21XLM U33 (.A0(n34),
	.A1(n259),
	.B0(n33),
	.Y(n35));
   OAI2BB1XLM U34 (.A0N(n259),
	.A1N(n251),
	.B0(n250),
	.Y(N187));
   INVXLM U35 (.A(ALU_function[2]),
	.Y(n4));
   INVXLM U36 (.A(ALU_function[0]),
	.Y(n198));
   NOR2XLM U37 (.A(n4),
	.B(n198),
	.Y(n22));
   INVXLM U38 (.A(enable),
	.Y(n1));
   AOI31XLM U39 (.A0(ALU_function[3]),
	.A1(ALU_function[1]),
	.A2(n22),
	.B0(n1),
	.Y(N178));
   NOR2BXLM U40 (.AN(ALU_function[0]),
	.B(ALU_function[2]),
	.Y(n23));
   NOR3BX4M U41 (.AN(n23),
	.B(ALU_function[3]),
	.C(ALU_function[1]),
	.Y(\DP_OP_29J1_122_2578/n43 ));
   INVXLM U42 (.A(\DP_OP_29J1_122_2578/n43 ),
	.Y(n247));
   NOR2XLM U43 (.A(\DP_OP_29J1_122_2578/n9 ),
	.B(n247),
	.Y(n34));
   INVXLM U44 (.A(ALU_function[3]),
	.Y(n27));
   INVXLM U45 (.A(ALU_function[1]),
	.Y(n217));
   NAND2XLM U46 (.A(enable),
	.B(n217),
	.Y(n24));
   INVXLM U47 (.A(n24),
	.Y(n15));
   INVXLM U48 (.A(\intadd_1/n1 ),
	.Y(n282));
   INVXLM U49 (.A(\intadd_0/SUM[3] ),
	.Y(n281));
   AOI22XLM U50 (.A0(\intadd_0/SUM[3] ),
	.A1(\intadd_1/n1 ),
	.B0(n282),
	.B1(n281),
	.Y(n3));
   NAND2XLM U51 (.A(enable),
	.B(ALU_function[1]),
	.Y(n16));
   NAND2BXLM U52 (.AN(n16),
	.B(n27),
	.Y(n14));
   NOR3XLM U53 (.A(ALU_function[2]),
	.B(ALU_function[0]),
	.C(n14),
	.Y(n344));
   INVXLM U54 (.A(FE_OFN13_n344),
	.Y(n37));
   AOI21XLM U55 (.A0(\intadd_3/n1 ),
	.A1(n3),
	.B0(n37),
	.Y(n2));
   OAI21XLM U56 (.A0(\intadd_3/n1 ),
	.A1(n3),
	.B0(n2),
	.Y(n5));
   NOR2XLM U57 (.A(n4),
	.B(ALU_function[0]),
	.Y(n213));
   INVXLM U58 (.A(n213),
	.Y(n26));
   NOR2XLM U59 (.A(n26),
	.B(n14),
	.Y(n231));
   NAND2XLM U60 (.A(ALU_function[3]),
	.B(n15),
	.Y(n21));
   AOI221X1M U61 (.A0(ALU_function[2]),
	.A1(n14),
	.B0(n4),
	.B1(n21),
	.C0(n198),
	.Y(n178));
   NOR2XLM U62 (.A(n231),
	.B(n178),
	.Y(n248));
   OAI2B11XLM U63 (.A0(n19),
	.A1N(n34),
	.B0(n5),
	.C0(n248),
	.Y(N189));
   INVXLM U64 (.A(\intadd_0/n1 ),
	.Y(n272));
   AOI22XLM U65 (.A0(\intadd_2/SUM[2] ),
	.A1(\intadd_0/n1 ),
	.B0(n272),
	.B1(n271),
	.Y(n7));
   AOI21XLM U66 (.A0(\intadd_5/n1 ),
	.A1(n7),
	.B0(n37),
	.Y(n6));
   OAI21XLM U67 (.A0(\intadd_5/n1 ),
	.A1(n7),
	.B0(n6),
	.Y(n8));
   OAI2B11XLM U68 (.A0(n19),
	.A1N(n34),
	.B0(n8),
	.C0(n248),
	.Y(N191));
   INVX2M U69 (.A(A[7]),
	.Y(n321));
   INVX2M U70 (.A(B[5]),
	.Y(n311));
   NOR2XLM U71 (.A(n321),
	.B(n311),
	.Y(n275));
   INVX2M U72 (.A(A[6]),
	.Y(n370));
   INVX2M U73 (.A(B[6]),
	.Y(n318));
   NOR2XLM U74 (.A(n370),
	.B(n318),
	.Y(n274));
   INVX2M U75 (.A(B[7]),
	.Y(n323));
   INVX2M U76 (.A(A[5]),
	.Y(n319));
   NOR2XLM U77 (.A(n323),
	.B(n319),
	.Y(n273));
   NOR2XLM U78 (.A(n323),
	.B(n370),
	.Y(n268));
   NOR2XLM U79 (.A(n321),
	.B(n318),
	.Y(n267));
   NOR2XLM U80 (.A(n321),
	.B(n323),
	.Y(n256));
   OAI211XLM U81 (.A0(\intadd_2/n1 ),
	.A1(n10),
	.B0(n256),
	.C0(FE_OFN13_n344),
	.Y(n9));
   OAI2B11XLM U82 (.A0(n19),
	.A1N(n34),
	.B0(n9),
	.C0(n248),
	.Y(N194));
   AOI2BB2XLM U83 (.A0N(n10),
	.A1N(n256),
	.B0(n256),
	.B1(n10),
	.Y(n12));
   AOI21XLM U84 (.A0(\intadd_2/n1 ),
	.A1(n12),
	.B0(n37),
	.Y(n11));
   OAI21XLM U85 (.A0(\intadd_2/n1 ),
	.A1(n12),
	.B0(n11),
	.Y(n13));
   OAI2B11XLM U86 (.A0(n19),
	.A1N(n34),
	.B0(n13),
	.C0(n248),
	.Y(N193));
   NOR2BXLM U87 (.AN(n23),
	.B(n14),
	.Y(n353));
   INVXLM U88 (.A(n353),
	.Y(n266));
   INVX2M U89 (.A(B[1]),
	.Y(n317));
   INVX2M U90 (.A(B[3]),
	.Y(n327));
   NAND3XLM U91 (.A(n323),
	.B(n318),
	.C(n311),
	.Y(n70));
   NOR2XLM U92 (.A(B[4]),
	.B(n70),
	.Y(n52));
   NAND2XLM U93 (.A(n327),
	.B(n52),
	.Y(n42));
   NOR2XLM U94 (.A(n42),
	.B(B[2]),
	.Y(n252));
   AOI21BXLM U95 (.A0(n370),
	.A1(B[0]),
	.B0N(n252),
	.Y(n40));
   OAI21XLM U96 (.A0(A[7]),
	.A1(n317),
	.B0(n40),
	.Y(n38));
   NAND3XLM U97 (.A(n27),
	.B(n22),
	.C(n15),
	.Y(n228));
   AOI21XLM U98 (.A0(n370),
	.A1(n318),
	.B0(n228),
	.Y(n18));
   NOR3X2M U99 (.A(n27),
	.B(n26),
	.C(n16),
	.Y(n345));
   AOI211XLM U100 (.A0(FE_OFN13_n344),
	.A1(\intadd_6/SUM[2] ),
	.B0(n18),
	.C0(n17),
	.Y(n31));
   INVXLM U101 (.A(n178),
	.Y(n343));
   NAND2XLM U102 (.A(n370),
	.B(n318),
	.Y(n20));
   AOI22XLM U103 (.A0(A[6]),
	.A1(n318),
	.B0(B[6]),
	.B1(n370),
	.Y(n191));
   NOR3X2M U104 (.A(ALU_function[2]),
	.B(ALU_function[0]),
	.C(n21),
	.Y(n226));
   INVXLM U105 (.A(n226),
	.Y(n340));
   OAI22XLM U106 (.A0(n343),
	.A1(n20),
	.B0(n191),
	.B1(n340),
	.Y(n29));
   INVXLM U107 (.A(n354),
	.Y(n233));
   NOR2XLM U108 (.A(n23),
	.B(n27),
	.Y(n25));
   AOI211X2M U109 (.A0(n27),
	.A1(n26),
	.B0(n25),
	.C0(n24),
	.Y(n355));
   OAI2BB2XLM U110 (.A0N(n355),
	.A1N(n274),
	.B0(n233),
	.B1(n321),
	.Y(n28));
   OAI211XLM U111 (.A0(n266),
	.A1(n38),
	.B0(n31),
	.C0(n30),
	.Y(N185));
   INVXLM U112 (.A(n248),
	.Y(n33));
   AOI21XLM U113 (.A0(\intadd_1/SUM[4] ),
	.A1(FE_OFN13_n344),
	.B0(n33),
	.Y(n32));
   OAI2BB1XLM U114 (.A0N(n259),
	.A1N(n34),
	.B0(n32),
	.Y(N188));
   OAI2BB1XLM U115 (.A0N(FE_OFN13_n344),
	.A1N(\intadd_0/SUM[4] ),
	.B0(n35),
	.Y(N190));
   OAI2BB1XLM U116 (.A0N(FE_OFN13_n344),
	.A1N(\intadd_2/SUM[3] ),
	.B0(n35),
	.Y(N192));
   NAND2XLM U117 (.A(B[1]),
	.B(A[1]),
	.Y(n363));
   NAND2XLM U118 (.A(B[1]),
	.B(A[0]),
	.Y(n359));
   INVXLM U119 (.A(n228),
	.Y(n346));
   AOI31XLM U120 (.A0(B[0]),
	.A1(FE_OFN13_n344),
	.A2(n359),
	.B0(n346),
	.Y(n36));
   INVX2M U121 (.A(A[1]),
	.Y(n360));
   NAND2XLM U122 (.A(A[1]),
	.B(n317),
	.Y(n190));
   OAI22XLM U123 (.A0(n36),
	.A1(n360),
	.B0(n190),
	.B1(n340),
	.Y(n123));
   INVX2M U124 (.A(A[0]),
	.Y(n364));
   NOR3XLM U125 (.A(n317),
	.B(n364),
	.C(n37),
	.Y(n124));
   AOI221XLM U126 (.A0(n226),
	.A1(B[1]),
	.B0(n178),
	.B1(n317),
	.C0(n124),
	.Y(n121));
   INVXLM U127 (.A(A[4]),
	.Y(n368));
   NAND2XLM U128 (.A(B[0]),
	.B(n368),
	.Y(n62));
   INVX2M U129 (.A(B[2]),
	.Y(n362));
   NAND2XLM U130 (.A(n319),
	.B(B[0]),
	.Y(n47));
   INVXLM U131 (.A(n47),
	.Y(n48));
   INVX2M U132 (.A(B[0]),
	.Y(n372));
   OAI21XLM U133 (.A0(n372),
	.A1(n38),
	.B0(A[6]),
	.Y(n49));
   AOI222XLM U134 (.A0(B[1]),
	.A1(n48),
	.B0(B[1]),
	.B1(n49),
	.C0(n48),
	.C1(n49),
	.Y(n39));
   OAI21XLM U135 (.A0(A[7]),
	.A1(n362),
	.B0(n39),
	.Y(n43));
   AOI211XLM U136 (.A0(n317),
	.A1(n252),
	.B0(n321),
	.C0(n40),
	.Y(n41));
   INVXLM U137 (.A(n41),
	.Y(n51));
   AOI221X1M U138 (.A0(B[2]),
	.A1(n43),
	.B0(n51),
	.B1(n43),
	.C0(n42),
	.Y(n236));
   INVXLM U139 (.A(n236),
	.Y(n46));
   OAI21XLM U140 (.A0(n46),
	.A1(n372),
	.B0(A[5]),
	.Y(n44));
   NAND3XLM U141 (.A(B[1]),
	.B(B[0]),
	.C(n368),
	.Y(n45));
   NOR2XLM U142 (.A(B[2]),
	.B(n55),
	.Y(n60));
   AOI221XLM U143 (.A0(n48),
	.A1(B[1]),
	.B0(n47),
	.B1(n317),
	.C0(n46),
	.Y(n50));
   XOR2XLM U144 (.A(n50),
	.B(n49),
	.Y(n59));
   NOR2XLM U145 (.A(n51),
	.B(n236),
	.Y(n69));
   AOI222XLM U146 (.A0(B[2]),
	.A1(n55),
	.B0(B[2]),
	.B1(n59),
	.C0(n55),
	.C1(n59),
	.Y(n54));
   AO21XLM U147 (.A0(n69),
	.A1(n54),
	.B0(n327),
	.Y(n53));
   NAND2XLM U148 (.A(B[2]),
	.B(n55),
	.Y(n56));
   NAND2BXLM U149 (.AN(n242),
	.B(n56),
	.Y(n58));
   OAI21XLM U150 (.A0(n60),
	.A1(n58),
	.B0(n59),
	.Y(n57));
   OAI31XLM U151 (.A0(n60),
	.A1(n59),
	.A2(n58),
	.B0(n57),
	.Y(n75));
   INVXLM U152 (.A(n61),
	.Y(n65));
   AOI32XLM U153 (.A0(B[0]),
	.A1(n317),
	.A2(n368),
	.B0(B[1]),
	.B1(n62),
	.Y(n64));
   OAI21XLM U154 (.A0(n242),
	.A1(n64),
	.B0(n65),
	.Y(n63));
   OAI31XLM U155 (.A0(n242),
	.A1(n65),
	.A2(n64),
	.B0(n63),
	.Y(n77));
   INVX2M U156 (.A(A[3]),
	.Y(n366));
   NAND2XLM U157 (.A(B[0]),
	.B(n366),
	.Y(n81));
   OAI21XLM U158 (.A0(n372),
	.A1(n242),
	.B0(A[4]),
	.Y(n66));
   OAI31XLM U159 (.A0(n372),
	.A1(A[4]),
	.A2(n242),
	.B0(n66),
	.Y(n84));
   NAND3XLM U160 (.A(B[1]),
	.B(B[0]),
	.C(n366),
	.Y(n67));
   AOI22XLM U161 (.A0(n317),
	.A1(n81),
	.B0(n84),
	.B1(n67),
	.Y(n76));
   INVXLM U162 (.A(n73),
	.Y(n72));
   INVX2M U163 (.A(B[4]),
	.Y(n310));
   OAI21XLM U164 (.A0(n69),
	.A1(n310),
	.B0(n68),
	.Y(n71));
   NAND2XLM U165 (.A(n69),
	.B(n242),
	.Y(n88));
   AOI221XLM U166 (.A0(B[4]),
	.A1(n71),
	.B0(n88),
	.B1(n71),
	.C0(n70),
	.Y(n334));
   AOI221XLM U168 (.A0(n73),
	.A1(B[3]),
	.B0(n72),
	.B1(n327),
	.C0(n85),
	.Y(n74));
   XOR2XLM U169 (.A(n75),
	.B(n74),
	.Y(n89));
   INVXLM U170 (.A(n89),
	.Y(n99));
   MXI2XLM U172 (.S0(n85),
	.B(n77),
	.A(n78),
	.Y(n116));
   INVX2M U173 (.A(A[2]),
	.Y(n358));
   AOI21XLM U174 (.A0(B[0]),
	.A1(n358),
	.B0(B[1]),
	.Y(n80));
   OAI21XLM U175 (.A0(n85),
	.A1(n372),
	.B0(A[3]),
	.Y(n79));
   OAI31XLM U176 (.A0(n85),
	.A1(A[3]),
	.A2(n372),
	.B0(n79),
	.Y(n105));
   NOR2XLM U177 (.A(n372),
	.B(A[2]),
	.Y(n102));
   OAI2BB2XLM U178 (.A0N(B[1]),
	.A1N(n102),
	.B0(n80),
	.B1(n105),
	.Y(n86));
   NOR2XLM U179 (.A(B[2]),
	.B(n86),
	.Y(n111));
   AOI32XLM U180 (.A0(B[0]),
	.A1(n317),
	.A2(n366),
	.B0(B[1]),
	.B1(n81),
	.Y(n83));
   OAI21XLM U181 (.A0(n85),
	.A1(n83),
	.B0(n84),
	.Y(n82));
   OAI31XLM U182 (.A0(n85),
	.A1(n84),
	.A2(n83),
	.B0(n82),
	.Y(n110));
   NAND2XLM U183 (.A(B[2]),
	.B(n86),
	.Y(n107));
   OAI21XLM U184 (.A0(n111),
	.A1(n110),
	.B0(n107),
	.Y(n87));
   NOR2XLM U185 (.A(B[3]),
	.B(n87),
	.Y(n113));
   NAND2XLM U186 (.A(B[3]),
	.B(n87),
	.Y(n114));
   OAI21XLM U187 (.A0(n116),
	.A1(n113),
	.B0(n114),
	.Y(n94));
   NOR2XLM U188 (.A(B[4]),
	.B(n94),
	.Y(n98));
   INVXLM U189 (.A(n118),
	.Y(n93));
   AOI222XLM U190 (.A0(B[4]),
	.A1(n94),
	.B0(B[4]),
	.B1(n89),
	.C0(n94),
	.C1(n89),
	.Y(n90));
   AOI21XLM U191 (.A0(n311),
	.A1(n118),
	.B0(n90),
	.Y(n91));
   AOI211X2M U192 (.A0(n93),
	.A1(B[5]),
	.B0(n92),
	.C0(n91),
	.Y(n352));
   NAND2XLM U193 (.A(B[4]),
	.B(n94),
	.Y(n95));
   NAND2XLM U194 (.A(n352),
	.B(n95),
	.Y(n97));
   OAI31XLM U195 (.A0(n99),
	.A1(n98),
	.A2(n97),
	.B0(n96),
	.Y(n137));
   NOR2XLM U196 (.A(A[1]),
	.B(n372),
	.Y(n148));
   NOR2XLM U197 (.A(B[1]),
	.B(n148),
	.Y(n101));
   INVXLM U198 (.A(n352),
	.Y(n117));
   OAI21XLM U199 (.A0(n117),
	.A1(n372),
	.B0(A[2]),
	.Y(n100));
   OAI31XLM U200 (.A0(n117),
	.A1(A[2]),
	.A2(n372),
	.B0(n100),
	.Y(n151));
   OAI2BB2XLM U201 (.A0N(B[1]),
	.A1N(n148),
	.B0(n101),
	.B1(n151),
	.Y(n106));
   NOR2XLM U202 (.A(B[2]),
	.B(n106),
	.Y(n143));
   OAI32XLM U203 (.A0(n317),
	.A1(A[2]),
	.A2(n372),
	.B0(B[1]),
	.B1(n102),
	.Y(n104));
   OAI21XLM U204 (.A0(n117),
	.A1(n104),
	.B0(n105),
	.Y(n103));
   OAI31XLM U205 (.A0(n117),
	.A1(n105),
	.A2(n104),
	.B0(n103),
	.Y(n146));
   NAND2XLM U206 (.A(B[2]),
	.B(n106),
	.Y(n144));
   OAI21XLM U207 (.A0(n143),
	.A1(n146),
	.B0(n144),
	.Y(n112));
   NAND2XLM U208 (.A(n107),
	.B(n352),
	.Y(n109));
   OAI21XLM U209 (.A0(n111),
	.A1(n109),
	.B0(n110),
	.Y(n108));
   OAI31XLM U210 (.A0(n111),
	.A1(n110),
	.A2(n109),
	.B0(n108),
	.Y(n141));
   NAND2XLM U211 (.A(B[3]),
	.B(n112),
	.Y(n138));
   OAI21XLM U212 (.A0(n142),
	.A1(n141),
	.B0(n138),
	.Y(n164));
   NOR3BXLM U213 (.AN(n114),
	.B(n113),
	.C(n117),
	.Y(n115));
   XNOR2XLM U214 (.A(n116),
	.B(n115),
	.Y(n168));
   AOI222XLM U215 (.A0(B[4]),
	.A1(n164),
	.B0(B[4]),
	.B1(n168),
	.C0(n164),
	.C1(n168),
	.Y(n131));
   AOI222XLM U216 (.A0(n137),
	.A1(n131),
	.B0(n137),
	.B1(n311),
	.C0(n131),
	.C1(n311),
	.Y(n119));
   NAND2XLM U217 (.A(n118),
	.B(n117),
	.Y(n177));
   OR2X1M U218 (.A(n119),
	.B(n177),
	.Y(n120));
   AOI221X1M U219 (.A0(B[6]),
	.A1(n120),
	.B0(n119),
	.B1(n177),
	.C0(B[7]),
	.Y(n175));
   INVXLM U220 (.A(n175),
	.Y(n152));
   OAI22XLM U221 (.A0(A[1]),
	.A1(n121),
	.B0(n152),
	.B1(n266),
	.Y(n122));
   AOI211XLM U222 (.A0(n231),
	.A1(n363),
	.B0(n123),
	.C0(n122),
	.Y(n130));
   INVXLM U223 (.A(n363),
	.Y(n125));
   AOI22XLM U224 (.A0(n125),
	.A1(n355),
	.B0(n124),
	.B1(n372),
	.Y(n127));
   AOI22XLM U225 (.A0(B[1]),
	.A1(n346),
	.B0(A[0]),
	.B1(n345),
	.Y(n126));
   AOI21XLM U226 (.A0(n259),
	.A1(\C7M/DATA15_1 ),
	.B0(n128),
	.Y(n129));
   NAND2XLM U227 (.A(n130),
	.B(n129),
	.Y(N180));
   INVXLM U228 (.A(n131),
	.Y(n132));
   NOR2XLM U229 (.A(B[5]),
	.B(n132),
	.Y(n136));
   NAND2XLM U230 (.A(B[5]),
	.B(n132),
	.Y(n133));
   NAND2XLM U231 (.A(n175),
	.B(n133),
	.Y(n135));
   OAI31XLM U232 (.A0(n137),
	.A1(n136),
	.A2(n135),
	.B0(n134),
	.Y(n173));
   NAND2XLM U233 (.A(n175),
	.B(n138),
	.Y(n140));
   OAI21XLM U234 (.A0(n142),
	.A1(n140),
	.B0(n141),
	.Y(n139));
   OAI31XLM U235 (.A0(n142),
	.A1(n141),
	.A2(n140),
	.B0(n139),
	.Y(n163));
   NOR3BXLM U236 (.AN(n144),
	.B(n143),
	.C(n152),
	.Y(n145));
   XNOR2XLM U237 (.A(n146),
	.B(n145),
	.Y(n161));
   OAI32XLM U238 (.A0(n317),
	.A1(A[1]),
	.A2(n372),
	.B0(B[1]),
	.B1(n148),
	.Y(n150));
   OAI21XLM U239 (.A0(n152),
	.A1(n150),
	.B0(n151),
	.Y(n149));
   NOR2XLM U240 (.A(n372),
	.B(n152),
	.Y(n155));
   OAI21XLM U241 (.A0(A[1]),
	.A1(n155),
	.B0(n154),
	.Y(n156));
   OAI21XLM U242 (.A0(B[1]),
	.A1(n157),
	.B0(n156),
	.Y(n158));
   AOI222XLM U243 (.A0(n362),
	.A1(n159),
	.B0(n362),
	.B1(n158),
	.C0(n159),
	.C1(n158),
	.Y(n160));
   AOI222XLM U244 (.A0(B[3]),
	.A1(n161),
	.B0(B[3]),
	.B1(n160),
	.C0(n161),
	.C1(n160),
	.Y(n162));
   AOI222XLM U245 (.A0(n310),
	.A1(n163),
	.B0(n310),
	.B1(n162),
	.C0(n163),
	.C1(n162),
	.Y(n171));
   NOR2XLM U246 (.A(B[4]),
	.B(n164),
	.Y(n169));
   NAND2XLM U247 (.A(B[4]),
	.B(n164),
	.Y(n165));
   NAND2XLM U248 (.A(n175),
	.B(n165),
	.Y(n167));
   OAI21XLM U249 (.A0(n169),
	.A1(n167),
	.B0(n168),
	.Y(n166));
   OAI31XLM U250 (.A0(n169),
	.A1(n168),
	.A2(n167),
	.B0(n166),
	.Y(n170));
   AOI222XLM U251 (.A0(B[5]),
	.A1(n171),
	.B0(B[5]),
	.B1(n170),
	.C0(n171),
	.C1(n170),
	.Y(n172));
   AOI222XLM U252 (.A0(n173),
	.A1(n318),
	.B0(n173),
	.B1(n172),
	.C0(n318),
	.C1(n172),
	.Y(n174));
   OAI31XLM U253 (.A0(B[7]),
	.A1(n177),
	.A2(n175),
	.B0(n174),
	.Y(n176));
   OAI2BB1XLM U254 (.A0N(n177),
	.A1N(B[7]),
	.B0(n176),
	.Y(n223));
   AOI221XLM U255 (.A0(n226),
	.A1(B[0]),
	.B0(n178),
	.B1(n372),
	.C0(n231),
	.Y(n180));
   AOI22XLM U256 (.A0(\C7M/DATA15_0 ),
	.A1(n259),
	.B0(n354),
	.B1(A[1]),
	.Y(n179));
   OAI21XLM U257 (.A0(n180),
	.A1(A[0]),
	.B0(n179),
	.Y(n181));
   AOI221XLM U258 (.A0(n346),
	.A1(B[0]),
	.B0(n231),
	.B1(n372),
	.C0(n181),
	.Y(n222));
   NAND2XLM U259 (.A(n323),
	.B(A[7]),
	.Y(n214));
   INVXLM U260 (.A(n214),
	.Y(n197));
   NOR2XLM U261 (.A(n370),
	.B(B[6]),
	.Y(n207));
   INVXLM U262 (.A(n207),
	.Y(n188));
   NAND2XLM U263 (.A(B[1]),
	.B(n360),
	.Y(n182));
   OAI22XLM U264 (.A0(B[1]),
	.A1(n360),
	.B0(B[2]),
	.B1(n358),
	.Y(n200));
   AOI31XLM U265 (.A0(A[0]),
	.A1(n182),
	.A2(n372),
	.B0(n200),
	.Y(n185));
   NOR2XLM U266 (.A(n366),
	.B(B[3]),
	.Y(n199));
   INVXLM U267 (.A(n199),
	.Y(n184));
   AOI22XLM U268 (.A0(n366),
	.A1(B[3]),
	.B0(n358),
	.B1(B[2]),
	.Y(n201));
   NOR2XLM U269 (.A(A[4]),
	.B(n310),
	.Y(n204));
   AOI221XLM U270 (.A0(n185),
	.A1(n184),
	.B0(n183),
	.B1(n184),
	.C0(n204),
	.Y(n186));
   AOI22XLM U271 (.A0(n310),
	.A1(A[4]),
	.B0(n311),
	.B1(A[5]),
	.Y(n205));
   INVXLM U272 (.A(n205),
	.Y(n194));
   NAND2XLM U273 (.A(B[6]),
	.B(n370),
	.Y(n208));
   NAND2XLM U274 (.A(B[5]),
	.B(n319),
	.Y(n209));
   OAI211XLM U275 (.A0(n186),
	.A1(n194),
	.B0(n208),
	.C0(n209),
	.Y(n187));
   AOI22XLM U276 (.A0(B[7]),
	.A1(n321),
	.B0(n188),
	.B1(n187),
	.Y(n196));
   AOI22XLM U277 (.A0(n360),
	.A1(B[1]),
	.B0(n364),
	.B1(B[0]),
	.Y(n202));
   NAND4BXLM U278 (.AN(n204),
	.B(n209),
	.C(n190),
	.D(n189),
	.Y(n193));
   AOI22XLM U279 (.A0(A[7]),
	.A1(n323),
	.B0(B[7]),
	.B1(n321),
	.Y(n254));
   AOI22XLM U280 (.A0(B[3]),
	.A1(n366),
	.B0(A[3]),
	.B1(n327),
	.Y(n328));
   AOI22XLM U281 (.A0(B[2]),
	.A1(n358),
	.B0(A[2]),
	.B1(n362),
	.Y(n341));
   NAND4XLM U282 (.A(n254),
	.B(n191),
	.C(n328),
	.D(n341),
	.Y(n192));
   NOR4BXLM U283 (.AN(n202),
	.B(n194),
	.C(n193),
	.D(n192),
	.Y(n195));
   OAI32XLM U284 (.A0(n198),
	.A1(n197),
	.A2(n196),
	.B0(ALU_function[0]),
	.B1(n195),
	.Y(n216));
   AOI221XLM U285 (.A0(n202),
	.A1(n201),
	.B0(n200),
	.B1(n201),
	.C0(n199),
	.Y(n206));
   NAND2XLM U286 (.A(A[5]),
	.B(n311),
	.Y(n203));
   AOI22XLM U287 (.A0(n206),
	.A1(n205),
	.B0(n204),
	.B1(n203),
	.Y(n210));
   NOR2XLM U288 (.A(A[7]),
	.B(n323),
	.Y(n211));
   AOI32XLM U289 (.A0(n214),
	.A1(n213),
	.A2(n212),
	.B0(n211),
	.B1(n213),
	.Y(n215));
   OAI32XLM U290 (.A0(n217),
	.A1(ALU_function[2]),
	.A2(n216),
	.B0(ALU_function[1]),
	.B1(n215),
	.Y(n220));
   OAI32XLM U291 (.A0(n372),
	.A1(FE_OFN13_n344),
	.A2(n355),
	.B0(n226),
	.B1(B[0]),
	.Y(n218));
   AOI21XLM U292 (.A0(n218),
	.A1(n228),
	.B0(n364),
	.Y(n219));
   AOI31XLM U293 (.A0(enable),
	.A1(ALU_function[3]),
	.A2(n220),
	.B0(n219),
	.Y(n221));
   OAI211XLM U294 (.A0(n223),
	.A1(n266),
	.B0(n222),
	.C0(n221),
	.Y(N179));
   NAND2XLM U295 (.A(B[5]),
	.B(A[5]),
	.Y(n283));
   NAND2XLM U296 (.A(B[2]),
	.B(A[1]),
	.Y(n338));
   NOR2XLM U297 (.A(n327),
	.B(n364),
	.Y(n339));
   NOR3XLM U298 (.A(n362),
	.B(n364),
	.C(n363),
	.Y(n361));
   AOI2B1XLM U299 (.A0(n339),
	.A1N(n338),
	.B0(n361),
	.Y(n296));
   NAND2XLM U300 (.A(B[3]),
	.B(A[1]),
	.Y(n295));
   NOR4XLM U301 (.A(n366),
	.B(n358),
	.C(n317),
	.D(n372),
	.Y(n365));
   INVXLM U302 (.A(n365),
	.Y(n294));
   INVXLM U303 (.A(\intadd_6/SUM[1] ),
	.Y(n292));
   AOI22XLM U304 (.A0(\intadd_6/SUM[1] ),
	.A1(n291),
	.B0(\intadd_7/n1 ),
	.B1(n292),
	.Y(n225));
   OAI21XLM U305 (.A0(n293),
	.A1(n225),
	.B0(FE_OFN13_n344),
	.Y(n224));
   AOI21XLM U306 (.A0(n293),
	.A1(n225),
	.B0(n224),
	.Y(n230));
   OAI21XLM U307 (.A0(n311),
	.A1(n319),
	.B0(n226),
	.Y(n227));
   AOI22XLM U308 (.A0(n311),
	.A1(n319),
	.B0(n228),
	.B1(n227),
	.Y(n229));
   AOI211XLM U309 (.A0(n231),
	.A1(n283),
	.B0(n230),
	.C0(n229),
	.Y(n238));
   NAND2XLM U310 (.A(n311),
	.B(n319),
	.Y(n232));
   OAI22XLM U311 (.A0(n343),
	.A1(n232),
	.B0(n368),
	.B1(n253),
	.Y(n235));
   OAI2B2XLM U312 (.A0(n283),
	.A1N(n355),
	.B0(n370),
	.B1(n233),
	.Y(n234));
   AOI211XLM U313 (.A0(n236),
	.A1(n353),
	.B0(n235),
	.C0(n234),
	.Y(n237));
   OAI2B11XLM U314 (.A0(n19),
	.A1N(\C7M/DATA15_5 ),
	.B0(n238),
	.C0(n237),
	.Y(N184));
   NOR3XLM U315 (.A(B[4]),
	.B(A[4]),
	.C(n343),
	.Y(n244));
   NOR2XLM U316 (.A(n310),
	.B(n368),
	.Y(n312));
   AOI2BB2XLM U317 (.A0N(n312),
	.A1N(n349),
	.B0(FE_OFN13_n344),
	.B1(\intadd_7/SUM[2] ),
	.Y(n241));
   AOI21XLM U318 (.A0(B[4]),
	.A1(A[4]),
	.B0(n340),
	.Y(n239));
   OAI22XLM U319 (.A0(A[4]),
	.A1(B[4]),
	.B0(n346),
	.B1(n239),
	.Y(n240));
   OAI211XLM U320 (.A0(n266),
	.A1(n242),
	.B0(n241),
	.C0(n240),
	.Y(n243));
   AOI211XLM U321 (.A0(n345),
	.A1(A[3]),
	.B0(n244),
	.C0(n243),
	.Y(n246));
   AOI22XLM U322 (.A0(n355),
	.A1(n312),
	.B0(n354),
	.B1(A[5]),
	.Y(n245));
   OAI2B11XLM U323 (.A0(n19),
	.A1N(\C7M/DATA15_4 ),
	.B0(n246),
	.C0(n245),
	.Y(N183));
   XNOR2XLM U324 (.A(\DP_OP_29J1_122_2578/n9 ),
	.B(n247),
	.Y(n251));
   AOI21XLM U325 (.A0(\intadd_1/SUM[3] ),
	.A1(FE_OFN13_n344),
	.B0(n249),
	.Y(n250));
   OAI211XLM U326 (.A0(A[7]),
	.A1(n372),
	.B0(n252),
	.C0(n317),
	.Y(n265));
   NAND2XLM U327 (.A(n321),
	.B(n323),
	.Y(n262));
   AOI2BB2XLM U328 (.A0N(n262),
	.A1N(n343),
	.B0(n355),
	.B1(n256),
	.Y(n264));
   OAI22XLM U329 (.A0(n254),
	.A1(n340),
	.B0(n370),
	.B1(n253),
	.Y(n261));
   INVXLM U330 (.A(\intadd_6/n1 ),
	.Y(n290));
   INVXLM U331 (.A(\intadd_1/SUM[2] ),
	.Y(n289));
   AOI22XLM U332 (.A0(\intadd_1/SUM[2] ),
	.A1(\intadd_6/n1 ),
	.B0(n290),
	.B1(n289),
	.Y(n255));
   AOI2BB2XLM U333 (.A0N(n287),
	.A1N(n255),
	.B0(n287),
	.B1(n255),
	.Y(n257));
   AOI2BB2XLM U334 (.A0N(n256),
	.A1N(n349),
	.B0(n257),
	.B1(FE_OFN13_n344),
	.Y(n258));
   OAI2BB1XLM U335 (.A0N(n259),
	.A1N(\C7M/DATA15_7 ),
	.B0(n258),
	.Y(n260));
   AOI211XLM U336 (.A0(n346),
	.A1(n262),
	.B0(n261),
	.C0(n260),
	.Y(n263));
   OAI211XLM U337 (.A0(n266),
	.A1(n265),
	.B0(n264),
	.C0(n263),
	.Y(N186));
   OAI21XLM U339 (.A0(\intadd_2/SUM[2] ),
	.A1(\intadd_0/n1 ),
	.B0(\intadd_5/n1 ),
	.Y(n270));
   OAI21XLM U340 (.A0(n272),
	.A1(n271),
	.B0(n270),
	.Y(\intadd_2/A[3] ));
   NOR2XLM U342 (.A(n318),
	.B(n319),
	.Y(\intadd_2/B[1] ));
   NOR2XLM U343 (.A(n321),
	.B(n310),
	.Y(n278));
   NOR2XLM U344 (.A(n370),
	.B(n311),
	.Y(n277));
   NOR2XLM U345 (.A(n323),
	.B(n368),
	.Y(n276));
   ADDFX1M U346 (.A(n278),
	.B(n277),
	.CI(n276),
	.S(\intadd_2/A[1] ),
	.CO(\intadd_2/A[2] ));
   NAND2XLM U347 (.A(A[7]),
	.B(B[2]),
	.Y(n303));
   NOR4XLM U348 (.A(n321),
	.B(n370),
	.C(n362),
	.D(n317),
	.Y(n305));
   AOI2B1XLM U349 (.A0(n304),
	.A1N(n303),
	.B0(n305),
	.Y(n285));
   NAND2XLM U350 (.A(B[6]),
	.B(A[4]),
	.Y(n284));
   INVXLM U351 (.A(n279),
	.Y(\intadd_5/A[2] ));
   OAI21XLM U352 (.A0(\intadd_0/SUM[3] ),
	.A1(\intadd_1/n1 ),
	.B0(\intadd_3/n1 ),
	.Y(n280));
   OAI21XLM U353 (.A0(n282),
	.A1(n281),
	.B0(n280),
	.Y(\intadd_0/A[4] ));
   ADDFX1M U354 (.A(n285),
	.B(n284),
	.CI(n283),
	.S(n286),
	.CO(n279));
   INVXLM U355 (.A(n286),
	.Y(\intadd_5/B[1] ));
   NOR2XLM U356 (.A(n323),
	.B(n366),
	.Y(\intadd_2/CI ));
   NOR2XLM U357 (.A(n370),
	.B(n310),
	.Y(\intadd_2/B[0] ));
   NOR2XLM U358 (.A(n321),
	.B(n327),
	.Y(\intadd_2/A[0] ));
   OAI21XLM U359 (.A0(\intadd_1/SUM[2] ),
	.A1(\intadd_6/n1 ),
	.B0(n287),
	.Y(n288));
   OAI21XLM U360 (.A0(n290),
	.A1(n289),
	.B0(n288),
	.Y(\intadd_1/A[3] ));
   NOR2XLM U361 (.A(n310),
	.B(n358),
	.Y(\intadd_1/B[1] ));
   AOI222XLM U362 (.A0(n293),
	.A1(n292),
	.B0(n293),
	.B1(n291),
	.C0(n292),
	.C1(n291),
	.Y(\intadd_6/A[2] ));
   INVXLM U364 (.A(n297),
	.Y(\intadd_7/B[2] ));
   NOR2XLM U365 (.A(n310),
	.B(n364),
	.Y(\intadd_6/CI ));
   NOR4XLM U366 (.A(n319),
	.B(n368),
	.C(n317),
	.D(n372),
	.Y(\intadd_4/A[0] ));
   NOR2XLM U367 (.A(n366),
	.B(n362),
	.Y(n301));
   NAND2XLM U368 (.A(A[4]),
	.B(B[1]),
	.Y(n298));
   AOI221XLM U369 (.A0(n372),
	.A1(n298),
	.B0(n319),
	.B1(n298),
	.C0(\intadd_4/A[0] ),
	.Y(n300));
   NOR2XLM U370 (.A(n311),
	.B(n364),
	.Y(n299));
   ADDFX1M U371 (.A(n301),
	.B(n300),
	.CI(n299),
	.S(\intadd_6/B[1] ),
	.CO(\intadd_1/A[1] ));
   NOR2XLM U372 (.A(n327),
	.B(n358),
	.Y(\intadd_1/CI ));
   NOR2XLM U373 (.A(n310),
	.B(n360),
	.Y(\intadd_1/B[0] ));
   OAI21XLM U374 (.A0(n305),
	.A1(n303),
	.B0(n304),
	.Y(n302));
   NOR2XLM U375 (.A(n318),
	.B(n366),
	.Y(\intadd_5/CI ));
   NOR2XLM U376 (.A(n319),
	.B(n310),
	.Y(\intadd_5/B[0] ));
   NOR2XLM U377 (.A(n370),
	.B(n327),
	.Y(\intadd_5/A[0] ));
   NOR2XLM U378 (.A(n319),
	.B(n327),
	.Y(n314));
   NAND2XLM U379 (.A(A[6]),
	.B(B[2]),
	.Y(n306));
   AOI221XLM U380 (.A0(n317),
	.A1(n306),
	.B0(n321),
	.B1(n306),
	.C0(n305),
	.Y(n313));
   NOR4XLM U381 (.A(n321),
	.B(n370),
	.C(n317),
	.D(n372),
	.Y(n320));
   NOR2XLM U382 (.A(n323),
	.B(n360),
	.Y(n316));
   NOR2XLM U383 (.A(n311),
	.B(n366),
	.Y(n315));
   NOR2XLM U384 (.A(n311),
	.B(n368),
	.Y(n307));
   ADDFX1M U385 (.A(n309),
	.B(n308),
	.CI(n307),
	.S(\intadd_3/A[3] ),
	.CO(\intadd_0/A[3] ));
   NOR2XLM U386 (.A(n311),
	.B(n360),
	.Y(\intadd_4/B[0] ));
   NOR2XLM U387 (.A(n318),
	.B(n364),
	.Y(\intadd_3/CI ));
   NOR2XLM U388 (.A(n368),
	.B(n362),
	.Y(\intadd_3/A[0] ));
   NOR2XLM U389 (.A(n310),
	.B(n366),
	.Y(\intadd_3/B[1] ));
   NOR2XLM U390 (.A(n311),
	.B(n358),
	.Y(\intadd_3/A[1] ));
   ADDFX1M U391 (.A(n314),
	.B(n313),
	.CI(n312),
	.S(\intadd_3/B[2] ),
	.CO(n309));
   NOR2XLM U393 (.A(n368),
	.B(n327),
	.Y(\intadd_0/CI ));
   NOR2XLM U394 (.A(n318),
	.B(n360),
	.Y(\intadd_0/B[0] ));
   NOR4XLM U395 (.A(n370),
	.B(n319),
	.C(n317),
	.D(n372),
	.Y(\intadd_0/A[0] ));
   NOR2XLM U396 (.A(n318),
	.B(n358),
	.Y(\intadd_0/B[1] ));
   NOR2XLM U397 (.A(n319),
	.B(n362),
	.Y(n326));
   NAND2XLM U398 (.A(A[6]),
	.B(B[1]),
	.Y(n322));
   AOI221XLM U399 (.A0(n372),
	.A1(n322),
	.B0(n321),
	.B1(n322),
	.C0(n320),
	.Y(n325));
   NOR2XLM U400 (.A(n323),
	.B(n364),
	.Y(n324));
   ADDFX1M U401 (.A(n326),
	.B(n325),
	.CI(n324),
	.S(\intadd_4/B[1] ),
	.CO(\intadd_0/A[1] ));
   NOR2XLM U402 (.A(n327),
	.B(n366),
	.Y(\intadd_4/CI ));
   NAND2XLM U403 (.A(n327),
	.B(n366),
	.Y(n329));
   OAI22XLM U404 (.A0(n343),
	.A1(n329),
	.B0(n328),
	.B1(n340),
	.Y(n333));
   AOI22XLM U405 (.A0(A[2]),
	.A1(n345),
	.B0(FE_OFN13_n344),
	.B1(\intadd_7/SUM[1] ),
	.Y(n331));
   OAI21XLM U406 (.A0(B[3]),
	.A1(A[3]),
	.B0(n346),
	.Y(n330));
   OAI211XLM U407 (.A0(\intadd_4/CI ),
	.A1(n349),
	.B0(n331),
	.C0(n330),
	.Y(n332));
   AOI211XLM U408 (.A0(n353),
	.A1(n334),
	.B0(n333),
	.C0(n332),
	.Y(n336));
   AOI22XLM U409 (.A0(n355),
	.A1(\intadd_4/CI ),
	.B0(n354),
	.B1(A[4]),
	.Y(n335));
   OAI2B11XLM U410 (.A0(n19),
	.A1N(\C7M/DATA15_3 ),
	.B0(n336),
	.C0(n335),
	.Y(N182));
   OAI21XLM U411 (.A0(n361),
	.A1(n338),
	.B0(n339),
	.Y(n337));
   OAI31XLM U412 (.A0(n361),
	.A1(n339),
	.A2(n338),
	.B0(n337),
	.Y(\intadd_7/B[1] ));
   NOR2XLM U413 (.A(n362),
	.B(n358),
	.Y(\intadd_6/A[0] ));
   NAND2XLM U414 (.A(n362),
	.B(n358),
	.Y(n342));
   OAI22XLM U415 (.A0(n343),
	.A1(n342),
	.B0(n341),
	.B1(n340),
	.Y(n351));
   AOI22XLM U416 (.A0(A[1]),
	.A1(n345),
	.B0(FE_OFN13_n344),
	.B1(\intadd_7/SUM[0] ),
	.Y(n348));
   OAI21XLM U417 (.A0(B[2]),
	.A1(A[2]),
	.B0(n346),
	.Y(n347));
   OAI211XLM U418 (.A0(\intadd_6/A[0] ),
	.A1(n349),
	.B0(n348),
	.C0(n347),
	.Y(n350));
   AOI211XLM U419 (.A0(n353),
	.A1(n352),
	.B0(n351),
	.C0(n350),
	.Y(n357));
   AOI22XLM U420 (.A0(n355),
	.A1(\intadd_6/A[0] ),
	.B0(A[3]),
	.B1(n354),
	.Y(n356));
   OAI2B11XLM U421 (.A0(n19),
	.A1N(\C7M/DATA15_2 ),
	.B0(n357),
	.C0(n356),
	.Y(N181));
   NOR2XLM U422 (.A(n358),
	.B(n372),
	.Y(\intadd_7/CI ));
   NOR3XLM U423 (.A(n360),
	.B(n372),
	.C(n359),
	.Y(\intadd_7/A[0] ));
   XOR2XLM U424 (.A(\DP_OP_29J1_122_2578/n43 ),
	.B(B[2]),
	.Y(\DP_OP_29J1_122_2578/n27 ));
   XOR2XLM U425 (.A(\DP_OP_29J1_122_2578/n43 ),
	.B(B[1]),
	.Y(\DP_OP_29J1_122_2578/n28 ));
   XOR2XLM U426 (.A(\DP_OP_29J1_122_2578/n43 ),
	.B(B[4]),
	.Y(\DP_OP_29J1_122_2578/n25 ));
   XOR2XLM U427 (.A(\DP_OP_29J1_122_2578/n43 ),
	.B(B[3]),
	.Y(\DP_OP_29J1_122_2578/n26 ));
   XOR2XLM U428 (.A(\DP_OP_29J1_122_2578/n43 ),
	.B(B[0]),
	.Y(\DP_OP_29J1_122_2578/n29 ));
   XOR2XLM U429 (.A(\DP_OP_29J1_122_2578/n43 ),
	.B(B[7]),
	.Y(\DP_OP_29J1_122_2578/n22 ));
   XOR2XLM U430 (.A(\DP_OP_29J1_122_2578/n43 ),
	.B(B[6]),
	.Y(\DP_OP_29J1_122_2578/n23 ));
   XOR2XLM U431 (.A(\DP_OP_29J1_122_2578/n43 ),
	.B(B[5]),
	.Y(\DP_OP_29J1_122_2578/n24 ));
   AOI221XLM U432 (.A0(n364),
	.A1(n363),
	.B0(n362),
	.B1(n363),
	.C0(n361),
	.Y(\intadd_7/B[0] ));
   NAND2XLM U433 (.A(A[2]),
	.B(B[1]),
	.Y(n367));
   AOI221XLM U434 (.A0(n372),
	.A1(n367),
	.B0(n366),
	.B1(n367),
	.C0(n365),
	.Y(\intadd_7/A[1] ));
   NAND2XLM U435 (.A(A[3]),
	.B(B[1]),
	.Y(n369));
   AOI221XLM U436 (.A0(n372),
	.A1(n369),
	.B0(n368),
	.B1(n369),
	.C0(\intadd_1/A[0] ),
	.Y(\intadd_6/B[0] ));
   NAND2XLM U437 (.A(A[5]),
	.B(B[1]),
	.Y(n371));
   AOI221XLM U438 (.A0(n372),
	.A1(n371),
	.B0(n370),
	.B1(n371),
	.C0(\intadd_0/A[0] ),
	.Y(\intadd_3/B[0] ));
   ADDFX1M U439 (.A(\intadd_3/SUM[0] ),
	.B(\intadd_1/SUM[1] ),
	.CI(\intadd_4/SUM[0] ),
	.S(\intadd_6/B[2] ),
	.CO(n287));
   ADDFXLM \intadd_2/U2  (.A(\intadd_2/A[3] ),
	.B(\intadd_2/B[3] ),
	.CI(\intadd_2/n2 ),
	.S(\intadd_2/SUM[3] ),
	.CO(\intadd_2/n1 ));
   ADDFXLM \DP_OP_29J1_122_2578/U16  (.A(\DP_OP_29J1_122_2578/n24 ),
	.B(A[5]),
	.CI(\DP_OP_29J1_122_2578/n12 ),
	.S(\C7M/DATA15_5 ),
	.CO(\DP_OP_29J1_122_2578/n11 ));
   ADDFXLM \DP_OP_29J1_122_2578/U19  (.A(\DP_OP_29J1_122_2578/n27 ),
	.B(A[2]),
	.CI(\DP_OP_29J1_122_2578/n15 ),
	.S(\C7M/DATA15_2 ),
	.CO(\DP_OP_29J1_122_2578/n14 ));
   ADDFXLM \intadd_1/U3  (.A(\intadd_1/A[3] ),
	.B(\intadd_1/B[3] ),
	.CI(\intadd_1/n3 ),
	.S(\intadd_1/SUM[3] ),
	.CO(\intadd_1/n2 ));
   ADDFXLM \DP_OP_29J1_122_2578/U15  (.A(\DP_OP_29J1_122_2578/n23 ),
	.B(A[6]),
	.CI(\DP_OP_29J1_122_2578/n11 ),
	.S(\C7M/DATA15_6 ),
	.CO(\DP_OP_29J1_122_2578/n10 ));
   ADDFXLM \DP_OP_29J1_122_2578/U20  (.A(\DP_OP_29J1_122_2578/n28 ),
	.B(A[1]),
	.CI(\DP_OP_29J1_122_2578/n16 ),
	.S(\C7M/DATA15_1 ),
	.CO(\DP_OP_29J1_122_2578/n15 ));
   ADDFXLM \intadd_1/U4  (.A(\intadd_1/A[2] ),
	.B(\intadd_1/B[2] ),
	.CI(\intadd_1/n4 ),
	.S(\intadd_1/SUM[2] ),
	.CO(\intadd_1/n3 ));
   ADDFXLM \intadd_6/U3  (.A(\intadd_1/SUM[0] ),
	.B(\intadd_6/B[1] ),
	.CI(\intadd_6/n3 ),
	.S(\intadd_6/SUM[1] ),
	.CO(\intadd_6/n2 ));
   ADDFXLM \DP_OP_29J1_122_2578/U21  (.A(A[0]),
	.B(\DP_OP_29J1_122_2578/n43 ),
	.CI(\DP_OP_29J1_122_2578/n29 ),
	.S(\C7M/DATA15_0 ),
	.CO(\DP_OP_29J1_122_2578/n16 ));
   ADDFXLM \intadd_1/U6  (.A(\intadd_1/A[0] ),
	.B(\intadd_1/B[0] ),
	.CI(\intadd_1/CI ),
	.S(\intadd_1/SUM[0] ),
	.CO(\intadd_1/n5 ));
   ADDFXLM \intadd_7/U3  (.A(\intadd_7/A[1] ),
	.B(\intadd_7/B[1] ),
	.CI(\intadd_7/n3 ),
	.S(\intadd_7/SUM[1] ),
	.CO(\intadd_7/n2 ));
   ADDFXLM \intadd_7/U4  (.A(\intadd_7/A[0] ),
	.B(\intadd_7/B[0] ),
	.CI(\intadd_7/CI ),
	.S(\intadd_7/SUM[0] ),
	.CO(\intadd_7/n3 ));
   ADDFXLM \intadd_0/U6  (.A(\intadd_0/A[0] ),
	.B(\intadd_0/B[0] ),
	.CI(\intadd_0/CI ),
	.S(\intadd_0/SUM[0] ),
	.CO(\intadd_0/n5 ));
   INVXLM U167 (.A(n334),
	.Y(n85));
   ADDFXLM U171 (.A(B[2]),
	.B(n77),
	.CI(n76),
	.S(n78),
	.CO(n73));
   ADDFXLM U338 (.A(n320),
	.B(n316),
	.CI(n315),
	.S(\intadd_3/A[2] ),
	.CO(n308));
   ADDFXLM U341 (.A(n296),
	.B(n295),
	.CI(n294),
	.S(n297),
	.CO(n293));
   ADDFXLM U363 (.A(n275),
	.B(n274),
	.CI(n273),
	.S(\intadd_2/B[2] ),
	.CO(n269));
   ADDFXLM U392 (.A(n269),
	.B(n268),
	.CI(n267),
	.S(\intadd_2/B[3] ),
	.CO(n10));
endmodule

module register_file_test_1 (
	clk, 
	reset, 
	address, 
	write_enable, 
	write_data, 
	read_enable, 
	read_data, 
	read_data_valid, 
	register0, 
	register1, 
	register2, 
	register3, 
	test_si2, 
	test_si1, 
	test_so1, 
	test_se, 
	p1, 
	p2, 
	p3, 
	p4, 
	p5, 
	multiplexed_reference_clk__L3_N1, 
	multiplexed_reference_clk__L3_N2);
   input clk;
   input reset;
   input [3:0] address;
   input write_enable;
   input [7:0] write_data;
   input read_enable;
   output [7:0] read_data;
   output read_data_valid;
   output [7:0] register0;
   output [7:0] register1;
   output [7:0] register2;
   output [7:0] register3;
   input test_si2;
   input test_si1;
   output test_so1;
   input test_se;
   input p1;
   input p2;
   input p3;
   input p4;
   input p5;
   input multiplexed_reference_clk__L3_N1;
   input multiplexed_reference_clk__L3_N2;

   // Internal wires
   wire FE_RN_4;
   wire FE_RN_2;
   wire n154;
   wire n155;
   wire n156;
   wire n157;
   wire n158;
   wire n159;
   wire n160;
   wire n161;
   wire \memory[4][7] ;
   wire \memory[4][6] ;
   wire \memory[4][5] ;
   wire \memory[4][4] ;
   wire \memory[4][3] ;
   wire \memory[4][2] ;
   wire \memory[4][1] ;
   wire \memory[4][0] ;
   wire \memory[5][7] ;
   wire \memory[5][6] ;
   wire \memory[5][5] ;
   wire \memory[5][4] ;
   wire \memory[5][3] ;
   wire \memory[5][2] ;
   wire \memory[5][1] ;
   wire \memory[5][0] ;
   wire \memory[6][7] ;
   wire \memory[6][6] ;
   wire \memory[6][5] ;
   wire \memory[6][4] ;
   wire \memory[6][3] ;
   wire \memory[6][2] ;
   wire \memory[6][1] ;
   wire \memory[6][0] ;
   wire \memory[7][7] ;
   wire \memory[7][6] ;
   wire \memory[7][5] ;
   wire \memory[7][4] ;
   wire \memory[7][3] ;
   wire \memory[7][2] ;
   wire \memory[7][1] ;
   wire \memory[7][0] ;
   wire \memory[8][7] ;
   wire \memory[8][6] ;
   wire \memory[8][5] ;
   wire \memory[8][4] ;
   wire \memory[8][3] ;
   wire \memory[8][2] ;
   wire \memory[8][1] ;
   wire \memory[8][0] ;
   wire \memory[9][7] ;
   wire \memory[9][6] ;
   wire \memory[9][5] ;
   wire \memory[9][4] ;
   wire \memory[9][3] ;
   wire \memory[9][2] ;
   wire \memory[9][1] ;
   wire \memory[9][0] ;
   wire \memory[10][7] ;
   wire \memory[10][6] ;
   wire \memory[10][5] ;
   wire \memory[10][4] ;
   wire \memory[10][3] ;
   wire \memory[10][2] ;
   wire \memory[10][1] ;
   wire \memory[10][0] ;
   wire \memory[11][7] ;
   wire \memory[11][6] ;
   wire \memory[11][5] ;
   wire \memory[11][4] ;
   wire \memory[11][3] ;
   wire \memory[11][2] ;
   wire \memory[11][1] ;
   wire \memory[11][0] ;
   wire \memory[12][7] ;
   wire \memory[12][6] ;
   wire \memory[12][5] ;
   wire \memory[12][4] ;
   wire \memory[12][3] ;
   wire \memory[12][2] ;
   wire \memory[12][1] ;
   wire \memory[12][0] ;
   wire \memory[13][7] ;
   wire \memory[13][6] ;
   wire \memory[13][5] ;
   wire \memory[13][4] ;
   wire \memory[13][3] ;
   wire \memory[13][2] ;
   wire \memory[13][1] ;
   wire \memory[13][0] ;
   wire \memory[14][7] ;
   wire \memory[14][6] ;
   wire \memory[14][5] ;
   wire \memory[14][4] ;
   wire \memory[14][3] ;
   wire \memory[14][2] ;
   wire \memory[14][1] ;
   wire \memory[14][0] ;
   wire \memory[15][7] ;
   wire \memory[15][6] ;
   wire \memory[15][5] ;
   wire \memory[15][4] ;
   wire \memory[15][3] ;
   wire \memory[15][2] ;
   wire \memory[15][1] ;
   wire \memory[15][0] ;
   wire N61;
   wire n288;
   wire n289;
   wire n290;
   wire n291;
   wire n292;
   wire n293;
   wire n294;
   wire n295;
   wire n296;
   wire n297;
   wire n298;
   wire n299;
   wire n300;
   wire n301;
   wire n302;
   wire n303;
   wire n304;
   wire n305;
   wire n306;
   wire n307;
   wire n308;
   wire n309;
   wire n310;
   wire n311;
   wire n312;
   wire n313;
   wire n314;
   wire n315;
   wire n316;
   wire n317;
   wire n318;
   wire n319;
   wire n320;
   wire n321;
   wire n322;
   wire n323;
   wire n324;
   wire n325;
   wire n326;
   wire n327;
   wire n328;
   wire n329;
   wire n330;
   wire n331;
   wire n332;
   wire n333;
   wire n334;
   wire n335;
   wire n336;
   wire n337;
   wire n338;
   wire n339;
   wire n340;
   wire n341;
   wire n342;
   wire n343;
   wire n344;
   wire n345;
   wire n346;
   wire n347;
   wire n348;
   wire n349;
   wire n350;
   wire n351;
   wire n352;
   wire n353;
   wire n354;
   wire n355;
   wire n356;
   wire n357;
   wire n358;
   wire n359;
   wire n360;
   wire n361;
   wire n362;
   wire n363;
   wire n364;
   wire n365;
   wire n366;
   wire n367;
   wire n368;
   wire n369;
   wire n370;
   wire n371;
   wire n372;
   wire n373;
   wire n374;
   wire n375;
   wire n376;
   wire n377;
   wire n378;
   wire n379;
   wire n380;
   wire n381;
   wire n382;
   wire n383;
   wire n384;
   wire n385;
   wire n386;
   wire n387;
   wire n388;
   wire n389;
   wire n390;
   wire n391;
   wire n392;
   wire n393;
   wire n394;
   wire n395;
   wire n396;
   wire n397;
   wire n398;
   wire n399;
   wire n400;
   wire n401;
   wire n402;
   wire n403;
   wire n404;
   wire n405;
   wire n406;
   wire n407;
   wire n408;
   wire n409;
   wire n410;
   wire n411;
   wire n412;
   wire n413;
   wire n414;
   wire n415;
   wire n416;
   wire n417;
   wire n418;
   wire n419;
   wire n420;
   wire n421;
   wire n422;
   wire n423;
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire n25;
   wire n26;
   wire n27;
   wire n28;
   wire n29;
   wire n30;
   wire n31;
   wire n32;
   wire n33;
   wire n34;
   wire n35;
   wire n36;
   wire n37;
   wire n38;
   wire n39;
   wire n40;
   wire n41;
   wire n42;
   wire n43;
   wire n44;
   wire n45;
   wire n46;
   wire n47;
   wire n48;
   wire n49;
   wire n50;
   wire n51;
   wire n52;
   wire n53;
   wire n54;
   wire n55;
   wire n56;
   wire n57;
   wire n58;
   wire n59;
   wire n60;
   wire n61;
   wire n62;
   wire n63;
   wire n64;
   wire n65;
   wire n66;
   wire n67;
   wire n68;
   wire n69;
   wire n70;
   wire n71;
   wire n72;
   wire n73;
   wire n74;
   wire n75;
   wire n76;
   wire n77;
   wire n78;
   wire n79;
   wire n80;
   wire n81;
   wire n82;
   wire n83;
   wire n84;
   wire n85;
   wire n86;
   wire n87;
   wire n88;
   wire n89;
   wire n90;
   wire n91;
   wire n92;
   wire n93;
   wire n94;
   wire n95;
   wire n96;
   wire n97;
   wire n98;
   wire n99;
   wire n100;
   wire n101;
   wire n102;
   wire n103;
   wire n104;
   wire n105;
   wire n106;
   wire n107;
   wire n108;
   wire n109;
   wire n110;
   wire n111;
   wire n112;
   wire n113;
   wire n114;
   wire n115;
   wire n116;
   wire n117;
   wire n118;
   wire n119;
   wire n120;
   wire n121;
   wire n122;
   wire n123;
   wire n124;
   wire n125;
   wire n126;
   wire n127;
   wire n128;
   wire n129;
   wire n130;
   wire n131;
   wire n132;
   wire n133;
   wire n134;
   wire n135;
   wire n136;
   wire n137;
   wire n138;
   wire n139;
   wire n140;
   wire n141;
   wire n142;
   wire n143;
   wire n144;
   wire n145;
   wire n146;
   wire n147;

   assign test_so1 = \memory[10][1]  ;

   BUFX2M FE_OFC12_ALU_operand_B_0_ (.A(FE_RN_4),
	.Y(register1[0]));
   BUFX2M FE_OFC10_ALU_operand_B_2_ (.A(FE_RN_2),
	.Y(register1[2]));
   SDFFRQX1M \memory_reg[0][7]  (.SI(register0[6]),
	.SE(p3),
	.D(n423),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(register0[7]));
   SDFFRQX1M \memory_reg[0][6]  (.SI(register0[5]),
	.SE(p3),
	.D(n422),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(register0[6]));
   SDFFRQX1M \memory_reg[0][5]  (.SI(register0[4]),
	.SE(p2),
	.D(n421),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(register0[5]));
   SDFFRQX1M \memory_reg[0][4]  (.SI(register0[3]),
	.SE(p2),
	.D(n420),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(register0[4]));
   SDFFRQX1M \memory_reg[0][3]  (.SI(register0[2]),
	.SE(p2),
	.D(n419),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(register0[3]));
   SDFFRQX1M \memory_reg[0][2]  (.SI(register0[1]),
	.SE(p2),
	.D(n418),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(register0[2]));
   SDFFRQX1M \memory_reg[0][1]  (.SI(register0[0]),
	.SE(p2),
	.D(n417),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(register0[1]));
   SDFFRQX1M \memory_reg[0][0]  (.SI(test_si1),
	.SE(p1),
	.D(n416),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(register0[0]));
   SDFFRQX1M \memory_reg[1][7]  (.SI(register1[6]),
	.SE(p3),
	.D(n415),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(register1[7]));
   SDFFRQX1M \memory_reg[1][6]  (.SI(register1[5]),
	.SE(p2),
	.D(n414),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(register1[6]));
   SDFFRQX1M \memory_reg[1][5]  (.SI(register1[4]),
	.SE(p2),
	.D(n413),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(register1[5]));
   SDFFRQX1M \memory_reg[1][4]  (.SI(register1[3]),
	.SE(p2),
	.D(n412),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(register1[4]));
   SDFFRQX1M \memory_reg[1][3]  (.SI(register1[2]),
	.SE(p2),
	.D(n411),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(register1[3]));
   SDFFRQX1M \memory_reg[1][2]  (.SI(register1[1]),
	.SE(p2),
	.D(n410),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(FE_RN_2));
   SDFFRQX1M \memory_reg[1][1]  (.SI(register1[0]),
	.SE(p2),
	.D(n409),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(register1[1]));
   SDFFRQX1M \memory_reg[1][0]  (.SI(register0[7]),
	.SE(p3),
	.D(n408),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(FE_RN_4));
   SDFFRQX1M \memory_reg[2][7]  (.SI(n155),
	.SE(p1),
	.D(n407),
	.CK(clk),
	.RN(reset),
	.Q(n154));
   SDFFRQX1M \memory_reg[2][6]  (.SI(n156),
	.SE(p1),
	.D(n406),
	.CK(clk),
	.RN(reset),
	.Q(n155));
   SDFFRQX1M \memory_reg[2][5]  (.SI(n157),
	.SE(p1),
	.D(n405),
	.CK(clk),
	.RN(reset),
	.Q(n156));
   SDFFRQX1M \memory_reg[2][4]  (.SI(n158),
	.SE(p1),
	.D(n404),
	.CK(clk),
	.RN(reset),
	.Q(n157));
   SDFFRQX1M \memory_reg[2][3]  (.SI(n159),
	.SE(p1),
	.D(n403),
	.CK(clk),
	.RN(reset),
	.Q(n158));
   SDFFRQX1M \memory_reg[2][2]  (.SI(register2[1]),
	.SE(p1),
	.D(n402),
	.CK(clk),
	.RN(reset),
	.Q(n159));
   SDFFRQX1M \memory_reg[2][1]  (.SI(register2[0]),
	.SE(p1),
	.D(n401),
	.CK(clk),
	.RN(reset),
	.Q(register2[1]));
   SDFFRQX1M \memory_reg[3][7]  (.SI(n161),
	.SE(p1),
	.D(n399),
	.CK(clk),
	.RN(reset),
	.Q(n160));
   SDFFRQX1M \memory_reg[3][6]  (.SI(register3[5]),
	.SE(p1),
	.D(n398),
	.CK(clk),
	.RN(reset),
	.Q(n161));
   SDFFRQX1M \memory_reg[3][5]  (.SI(register3[4]),
	.SE(test_se),
	.D(n397),
	.CK(clk),
	.RN(reset),
	.Q(register3[5]));
   SDFFRQX1M \memory_reg[3][4]  (.SI(register3[3]),
	.SE(test_se),
	.D(n396),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(register3[4]));
   SDFFRHQX4M \memory_reg[3][2]  (.SI(register3[1]),
	.SE(test_se),
	.D(n394),
	.CK(clk),
	.RN(reset),
	.Q(register3[2]));
   SDFFRQX1M \memory_reg[3][1]  (.SI(register3[0]),
	.SE(p1),
	.D(n393),
	.CK(clk),
	.RN(reset),
	.Q(register3[1]));
   SDFFRQX1M \memory_reg[3][0]  (.SI(n154),
	.SE(p1),
	.D(n392),
	.CK(clk),
	.RN(reset),
	.Q(register3[0]));
   SDFFRQX1M \memory_reg[4][7]  (.SI(\memory[4][6] ),
	.SE(p1),
	.D(n391),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[4][7] ));
   SDFFRQX1M \memory_reg[4][6]  (.SI(\memory[4][5] ),
	.SE(test_se),
	.D(n390),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[4][6] ));
   SDFFRQX1M \memory_reg[4][5]  (.SI(\memory[4][4] ),
	.SE(test_se),
	.D(n389),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[4][5] ));
   SDFFRQX1M \memory_reg[4][4]  (.SI(\memory[4][3] ),
	.SE(test_se),
	.D(n388),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[4][4] ));
   SDFFRQX1M \memory_reg[4][3]  (.SI(\memory[4][2] ),
	.SE(test_se),
	.D(n387),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[4][3] ));
   SDFFRQX1M \memory_reg[4][2]  (.SI(\memory[4][1] ),
	.SE(test_se),
	.D(n386),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[4][2] ));
   SDFFRQX1M \memory_reg[4][1]  (.SI(\memory[4][0] ),
	.SE(p1),
	.D(n385),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[4][1] ));
   SDFFRQX1M \memory_reg[4][0]  (.SI(n160),
	.SE(p1),
	.D(n384),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[4][0] ));
   SDFFRQX1M \memory_reg[5][7]  (.SI(\memory[5][6] ),
	.SE(p1),
	.D(n383),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[5][7] ));
   SDFFRQX1M \memory_reg[5][6]  (.SI(\memory[5][5] ),
	.SE(test_se),
	.D(n382),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[5][6] ));
   SDFFRQX1M \memory_reg[5][5]  (.SI(\memory[5][4] ),
	.SE(test_se),
	.D(n381),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[5][5] ));
   SDFFRQX1M \memory_reg[5][4]  (.SI(\memory[5][3] ),
	.SE(test_se),
	.D(n380),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[5][4] ));
   SDFFRQX1M \memory_reg[5][3]  (.SI(\memory[5][2] ),
	.SE(test_se),
	.D(n379),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[5][3] ));
   SDFFRQX1M \memory_reg[5][2]  (.SI(\memory[5][1] ),
	.SE(test_se),
	.D(n378),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[5][2] ));
   SDFFRQX1M \memory_reg[5][1]  (.SI(\memory[5][0] ),
	.SE(p1),
	.D(n377),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[5][1] ));
   SDFFRQX1M \memory_reg[5][0]  (.SI(\memory[4][7] ),
	.SE(p1),
	.D(n376),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[5][0] ));
   SDFFRQX1M \memory_reg[6][7]  (.SI(\memory[6][6] ),
	.SE(test_se),
	.D(n375),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[6][7] ));
   SDFFRQX1M \memory_reg[6][6]  (.SI(\memory[6][5] ),
	.SE(p1),
	.D(n374),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[6][6] ));
   SDFFRQX1M \memory_reg[6][5]  (.SI(\memory[6][4] ),
	.SE(p1),
	.D(n373),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[6][5] ));
   SDFFRQX1M \memory_reg[6][4]  (.SI(\memory[6][3] ),
	.SE(p1),
	.D(n372),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[6][4] ));
   SDFFRQX1M \memory_reg[6][3]  (.SI(\memory[6][2] ),
	.SE(p1),
	.D(n371),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[6][3] ));
   SDFFRQX1M \memory_reg[6][2]  (.SI(\memory[6][1] ),
	.SE(p1),
	.D(n370),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[6][2] ));
   SDFFRQX1M \memory_reg[6][1]  (.SI(\memory[6][0] ),
	.SE(p1),
	.D(n369),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[6][1] ));
   SDFFRQX1M \memory_reg[6][0]  (.SI(\memory[5][7] ),
	.SE(p1),
	.D(n368),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[6][0] ));
   SDFFRQX1M \memory_reg[7][7]  (.SI(\memory[7][6] ),
	.SE(p2),
	.D(n367),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[7][7] ));
   SDFFRQX1M \memory_reg[7][6]  (.SI(\memory[7][5] ),
	.SE(test_se),
	.D(n366),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[7][6] ));
   SDFFRQX1M \memory_reg[7][5]  (.SI(\memory[7][4] ),
	.SE(test_se),
	.D(n365),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[7][5] ));
   SDFFRQX1M \memory_reg[7][4]  (.SI(\memory[7][3] ),
	.SE(test_se),
	.D(n364),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[7][4] ));
   SDFFRQX1M \memory_reg[7][3]  (.SI(\memory[7][2] ),
	.SE(p1),
	.D(n363),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[7][3] ));
   SDFFRQX1M \memory_reg[7][2]  (.SI(\memory[7][1] ),
	.SE(p1),
	.D(n362),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[7][2] ));
   SDFFRQX1M \memory_reg[7][1]  (.SI(\memory[7][0] ),
	.SE(p1),
	.D(n361),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[7][1] ));
   SDFFRQX1M \memory_reg[7][0]  (.SI(\memory[6][7] ),
	.SE(p1),
	.D(n360),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(reset),
	.Q(\memory[7][0] ));
   SDFFRQX1M \memory_reg[8][7]  (.SI(\memory[8][6] ),
	.SE(p1),
	.D(n359),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[8][7] ));
   SDFFRQX1M \memory_reg[8][6]  (.SI(\memory[8][5] ),
	.SE(p2),
	.D(n358),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[8][6] ));
   SDFFRQX1M \memory_reg[8][5]  (.SI(\memory[8][4] ),
	.SE(p2),
	.D(n357),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[8][5] ));
   SDFFRQX1M \memory_reg[8][4]  (.SI(\memory[8][3] ),
	.SE(p2),
	.D(n356),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[8][4] ));
   SDFFRQX1M \memory_reg[8][3]  (.SI(\memory[8][2] ),
	.SE(p2),
	.D(n355),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[8][3] ));
   SDFFRQX1M \memory_reg[8][2]  (.SI(\memory[8][1] ),
	.SE(p2),
	.D(n354),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[8][2] ));
   SDFFRQX1M \memory_reg[8][1]  (.SI(\memory[8][0] ),
	.SE(p2),
	.D(n353),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[8][1] ));
   SDFFRQX1M \memory_reg[8][0]  (.SI(\memory[7][7] ),
	.SE(p1),
	.D(n352),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[8][0] ));
   SDFFRQX1M \memory_reg[9][7]  (.SI(\memory[9][6] ),
	.SE(p1),
	.D(n351),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[9][7] ));
   SDFFRQX1M \memory_reg[9][6]  (.SI(\memory[9][5] ),
	.SE(p2),
	.D(n350),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[9][6] ));
   SDFFRQX1M \memory_reg[9][5]  (.SI(\memory[9][4] ),
	.SE(p2),
	.D(n349),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[9][5] ));
   SDFFRQX1M \memory_reg[9][4]  (.SI(\memory[9][3] ),
	.SE(p2),
	.D(n348),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[9][4] ));
   SDFFRQX1M \memory_reg[9][3]  (.SI(\memory[9][2] ),
	.SE(p2),
	.D(n347),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[9][3] ));
   SDFFRQX1M \memory_reg[9][2]  (.SI(\memory[9][1] ),
	.SE(p2),
	.D(n346),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[9][2] ));
   SDFFRQX1M \memory_reg[9][1]  (.SI(\memory[9][0] ),
	.SE(p2),
	.D(n345),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[9][1] ));
   SDFFRQX1M \memory_reg[9][0]  (.SI(\memory[8][7] ),
	.SE(p1),
	.D(n344),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[9][0] ));
   SDFFRQX1M \memory_reg[10][7]  (.SI(\memory[10][6] ),
	.SE(p2),
	.D(n343),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[10][7] ));
   SDFFRQX1M \memory_reg[10][6]  (.SI(\memory[10][5] ),
	.SE(p2),
	.D(n342),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[10][6] ));
   SDFFRQX1M \memory_reg[10][5]  (.SI(\memory[10][4] ),
	.SE(p2),
	.D(n341),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[10][5] ));
   SDFFRQX1M \memory_reg[10][4]  (.SI(\memory[10][3] ),
	.SE(p2),
	.D(n340),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[10][4] ));
   SDFFRQX1M \memory_reg[10][3]  (.SI(\memory[10][2] ),
	.SE(p1),
	.D(n339),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[10][3] ));
   SDFFRQX1M \memory_reg[10][2]  (.SI(test_si2),
	.SE(p2),
	.D(n338),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[10][2] ));
   SDFFRQX1M \memory_reg[10][1]  (.SI(\memory[10][0] ),
	.SE(p2),
	.D(n337),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[10][1] ));
   SDFFRQX1M \memory_reg[10][0]  (.SI(\memory[9][7] ),
	.SE(p1),
	.D(n336),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[10][0] ));
   SDFFRQX1M \memory_reg[11][7]  (.SI(\memory[11][6] ),
	.SE(p2),
	.D(n335),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[11][7] ));
   SDFFRQX1M \memory_reg[11][6]  (.SI(\memory[11][5] ),
	.SE(p2),
	.D(n334),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[11][6] ));
   SDFFRQX1M \memory_reg[11][5]  (.SI(\memory[11][4] ),
	.SE(p2),
	.D(n333),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[11][5] ));
   SDFFRQX1M \memory_reg[11][4]  (.SI(\memory[11][3] ),
	.SE(p2),
	.D(n332),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[11][4] ));
   SDFFRQX1M \memory_reg[11][3]  (.SI(\memory[11][2] ),
	.SE(p2),
	.D(n331),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[11][3] ));
   SDFFRQX1M \memory_reg[11][2]  (.SI(\memory[11][1] ),
	.SE(p2),
	.D(n330),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[11][2] ));
   SDFFRQX1M \memory_reg[11][1]  (.SI(\memory[11][0] ),
	.SE(p2),
	.D(n329),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[11][1] ));
   SDFFRQX1M \memory_reg[11][0]  (.SI(\memory[10][7] ),
	.SE(p2),
	.D(n328),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(reset),
	.Q(\memory[11][0] ));
   SDFFRQX1M \memory_reg[12][7]  (.SI(\memory[12][6] ),
	.SE(p2),
	.D(n327),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[12][7] ));
   SDFFRQX1M \memory_reg[12][6]  (.SI(\memory[12][5] ),
	.SE(p2),
	.D(n326),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[12][6] ));
   SDFFRQX1M \memory_reg[12][5]  (.SI(\memory[12][4] ),
	.SE(p2),
	.D(n325),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[12][5] ));
   SDFFRQX1M \memory_reg[12][4]  (.SI(\memory[12][3] ),
	.SE(p2),
	.D(n324),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[12][4] ));
   SDFFRQX1M \memory_reg[12][3]  (.SI(\memory[12][2] ),
	.SE(p2),
	.D(n323),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[12][3] ));
   SDFFRQX1M \memory_reg[12][2]  (.SI(\memory[12][1] ),
	.SE(p2),
	.D(n322),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[12][2] ));
   SDFFRQX1M \memory_reg[12][1]  (.SI(\memory[12][0] ),
	.SE(p2),
	.D(n321),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[12][1] ));
   SDFFRQX1M \memory_reg[12][0]  (.SI(\memory[11][7] ),
	.SE(p2),
	.D(n320),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[12][0] ));
   SDFFRQX1M \memory_reg[13][7]  (.SI(\memory[13][6] ),
	.SE(p2),
	.D(n319),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[13][7] ));
   SDFFRQX1M \memory_reg[13][6]  (.SI(\memory[13][5] ),
	.SE(p2),
	.D(n318),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[13][6] ));
   SDFFRQX1M \memory_reg[13][5]  (.SI(\memory[13][4] ),
	.SE(p2),
	.D(n317),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[13][5] ));
   SDFFRQX1M \memory_reg[13][4]  (.SI(\memory[13][3] ),
	.SE(p2),
	.D(n316),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[13][4] ));
   SDFFRQX1M \memory_reg[13][3]  (.SI(\memory[13][2] ),
	.SE(p2),
	.D(n315),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[13][3] ));
   SDFFRQX1M \memory_reg[13][2]  (.SI(\memory[13][1] ),
	.SE(p2),
	.D(n314),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[13][2] ));
   SDFFRQX1M \memory_reg[13][1]  (.SI(\memory[13][0] ),
	.SE(p2),
	.D(n313),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[13][1] ));
   SDFFRQX1M \memory_reg[13][0]  (.SI(\memory[12][7] ),
	.SE(p2),
	.D(n312),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[13][0] ));
   SDFFRQX1M \memory_reg[14][7]  (.SI(\memory[14][6] ),
	.SE(p2),
	.D(n311),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(\memory[14][7] ));
   SDFFRQX1M \memory_reg[14][6]  (.SI(\memory[14][5] ),
	.SE(p2),
	.D(n310),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[14][6] ));
   SDFFRQX1M \memory_reg[14][5]  (.SI(\memory[14][4] ),
	.SE(p2),
	.D(n309),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[14][5] ));
   SDFFRQX1M \memory_reg[14][4]  (.SI(\memory[14][3] ),
	.SE(p2),
	.D(n308),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[14][4] ));
   SDFFRQX1M \memory_reg[14][3]  (.SI(\memory[14][2] ),
	.SE(p2),
	.D(n307),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[14][3] ));
   SDFFRQX1M \memory_reg[14][2]  (.SI(\memory[14][1] ),
	.SE(p2),
	.D(n306),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[14][2] ));
   SDFFRQX1M \memory_reg[14][1]  (.SI(\memory[14][0] ),
	.SE(p2),
	.D(n305),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[14][1] ));
   SDFFRQX1M \memory_reg[14][0]  (.SI(\memory[13][7] ),
	.SE(p2),
	.D(n304),
	.CK(multiplexed_reference_clk__L3_N2),
	.RN(p4),
	.Q(\memory[14][0] ));
   SDFFRQX1M \memory_reg[15][7]  (.SI(\memory[15][6] ),
	.SE(p2),
	.D(n303),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(\memory[15][7] ));
   SDFFRQX1M \memory_reg[15][6]  (.SI(\memory[15][5] ),
	.SE(p2),
	.D(n302),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(\memory[15][6] ));
   SDFFRQX1M \memory_reg[15][5]  (.SI(\memory[15][4] ),
	.SE(p2),
	.D(n301),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(\memory[15][5] ));
   SDFFRQX1M \memory_reg[15][4]  (.SI(\memory[15][3] ),
	.SE(p2),
	.D(n300),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(\memory[15][4] ));
   SDFFRQX1M \memory_reg[15][3]  (.SI(\memory[15][2] ),
	.SE(p2),
	.D(n299),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(\memory[15][3] ));
   SDFFRQX1M \memory_reg[15][2]  (.SI(\memory[15][1] ),
	.SE(p2),
	.D(n298),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(\memory[15][2] ));
   SDFFRQX1M \memory_reg[15][1]  (.SI(\memory[15][0] ),
	.SE(p2),
	.D(n297),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(\memory[15][1] ));
   SDFFRQX1M \memory_reg[15][0]  (.SI(\memory[14][7] ),
	.SE(p2),
	.D(n296),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(\memory[15][0] ));
   SDFFRQX1M \read_data_reg[7]  (.SI(read_data[6]),
	.SE(p1),
	.D(n295),
	.CK(clk),
	.RN(p4),
	.Q(read_data[7]));
   SDFFRQX1M \read_data_reg[6]  (.SI(read_data[5]),
	.SE(p1),
	.D(n294),
	.CK(clk),
	.RN(p4),
	.Q(read_data[6]));
   SDFFRQX1M \read_data_reg[5]  (.SI(read_data[4]),
	.SE(p1),
	.D(n293),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(read_data[5]));
   SDFFRQX1M \read_data_reg[4]  (.SI(read_data[3]),
	.SE(p1),
	.D(n292),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(read_data[4]));
   SDFFRQX1M \read_data_reg[3]  (.SI(read_data[2]),
	.SE(p1),
	.D(n291),
	.CK(clk),
	.RN(p4),
	.Q(read_data[3]));
   SDFFRQX1M \read_data_reg[2]  (.SI(read_data[1]),
	.SE(p1),
	.D(n290),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(read_data[2]));
   SDFFRQX1M \read_data_reg[1]  (.SI(read_data[0]),
	.SE(p1),
	.D(n289),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(read_data[1]));
   SDFFRQX1M \read_data_reg[0]  (.SI(\memory[15][7] ),
	.SE(p2),
	.D(n288),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p4),
	.Q(read_data[0]));
   SDFFRQX1M read_data_valid_reg (.SI(read_data[7]),
	.SE(p3),
	.D(N61),
	.CK(multiplexed_reference_clk__L3_N1),
	.RN(p5),
	.Q(read_data_valid));
   INVXLM U3 (.A(n113),
	.Y(n4));
   NOR2X2M U4 (.A(n126),
	.B(n127),
	.Y(n95));
   AOI22XLM U5 (.A0(n100),
	.A1(\memory[12][1] ),
	.B0(n99),
	.B1(\memory[13][1] ),
	.Y(n55));
   AOI22XLM U6 (.A0(n102),
	.A1(\memory[14][3] ),
	.B0(n101),
	.B1(\memory[15][3] ),
	.Y(n21));
   AOI22XLM U7 (.A0(n102),
	.A1(\memory[14][5] ),
	.B0(n101),
	.B1(\memory[15][5] ),
	.Y(n76));
   AOI22XLM U8 (.A0(n86),
	.A1(n155),
	.B0(n85),
	.B1(n161),
	.Y(n93));
   NAND4XLM U9 (.A(n64),
	.B(n63),
	.C(n62),
	.D(n61),
	.Y(n70));
   NOR2X2M U10 (.A(n138),
	.B(n137),
	.Y(n147));
   CLKINVX2M U11 (.A(write_data[0]),
	.Y(n146));
   INVXLM U12 (.A(n38),
	.Y(n288));
   NAND2BXLM U18 (.AN(write_enable),
	.B(read_enable),
	.Y(n109));
   INVXLM U19 (.A(n109),
	.Y(N61));
   INVXLM U20 (.A(address[2]),
	.Y(n1));
   INVXLM U21 (.A(address[1]),
	.Y(n2));
   NAND2X12M U22 (.A(n1),
	.B(n2),
	.Y(n127));
   NOR2XLM U23 (.A(address[0]),
	.B(address[3]),
	.Y(n111));
   INVXLM U24 (.A(n111),
	.Y(n3));
   NOR2X2M U25 (.A(n127),
	.B(n3),
	.Y(n84));
   INVXLM U26 (.A(address[0]),
	.Y(n9));
   NOR2XLM U27 (.A(n9),
	.B(address[3]),
	.Y(n113));
   NOR2X2M U28 (.A(n127),
	.B(n4),
	.Y(n83));
   AOI22XLM U29 (.A0(n84),
	.A1(register0[2]),
	.B0(n83),
	.B1(register1[2]),
	.Y(n8));
   NAND2XLM U30 (.A(address[1]),
	.B(n1),
	.Y(n130));
   NOR2XLM U31 (.A(n130),
	.B(n3),
	.Y(n86));
   NOR2XLM U32 (.A(n130),
	.B(n4),
	.Y(n85));
   AOI22XLM U33 (.A0(n86),
	.A1(n159),
	.B0(n85),
	.B1(register3[2]),
	.Y(n7));
   NAND2XLM U34 (.A(address[2]),
	.B(n2),
	.Y(n133));
   NOR2XLM U35 (.A(n133),
	.B(n3),
	.Y(n88));
   NOR2X2M U36 (.A(n133),
	.B(n4),
	.Y(n87));
   AOI22XLM U37 (.A0(n88),
	.A1(\memory[4][2] ),
	.B0(n87),
	.B1(\memory[5][2] ),
	.Y(n6));
   NAND2XLM U38 (.A(address[2]),
	.B(address[1]),
	.Y(n138));
   NOR2XLM U39 (.A(n138),
	.B(n3),
	.Y(n90));
   NOR2XLM U40 (.A(n138),
	.B(n4),
	.Y(n89));
   AOI22XLM U41 (.A0(n90),
	.A1(\memory[6][2] ),
	.B0(n89),
	.B1(\memory[7][2] ),
	.Y(n5));
   NAND4XLM U42 (.A(n8),
	.B(n7),
	.C(n6),
	.D(n5),
	.Y(n15));
   NAND2XLM U43 (.A(address[3]),
	.B(n9),
	.Y(n123));
   NOR2X2M U44 (.A(n123),
	.B(n127),
	.Y(n96));
   NAND2XLM U45 (.A(address[0]),
	.B(address[3]),
	.Y(n126));
   AOI22XLM U46 (.A0(n96),
	.A1(\memory[8][2] ),
	.B0(n95),
	.B1(\memory[9][2] ),
	.Y(n13));
   NOR2XLM U47 (.A(n123),
	.B(n130),
	.Y(n98));
   NOR2XLM U48 (.A(n130),
	.B(n126),
	.Y(n97));
   AOI22XLM U49 (.A0(n98),
	.A1(\memory[10][2] ),
	.B0(n97),
	.B1(\memory[11][2] ),
	.Y(n12));
   NOR2XLM U50 (.A(n123),
	.B(n133),
	.Y(n100));
   NOR2XLM U51 (.A(n126),
	.B(n133),
	.Y(n99));
   AOI22XLM U52 (.A0(n100),
	.A1(\memory[12][2] ),
	.B0(n99),
	.B1(\memory[13][2] ),
	.Y(n11));
   NOR2XLM U53 (.A(n123),
	.B(n138),
	.Y(n102));
   NOR2XLM U54 (.A(n126),
	.B(n138),
	.Y(n101));
   AOI22XLM U55 (.A0(n102),
	.A1(\memory[14][2] ),
	.B0(n101),
	.B1(\memory[15][2] ),
	.Y(n10));
   NAND4XLM U56 (.A(n13),
	.B(n12),
	.C(n11),
	.D(n10),
	.Y(n14));
   OAI32XLM U57 (.A0(n109),
	.A1(n15),
	.A2(n14),
	.B0(read_data[2]),
	.B1(N61),
	.Y(n16));
   INVXLM U58 (.A(n16),
	.Y(n290));
   AOI22XLM U59 (.A0(n84),
	.A1(register0[3]),
	.B0(n83),
	.B1(register1[3]),
	.Y(n20));
   AOI22XLM U60 (.A0(n86),
	.A1(n158),
	.B0(n85),
	.B1(register3[3]),
	.Y(n19));
   AOI22XLM U61 (.A0(n88),
	.A1(\memory[4][3] ),
	.B0(n87),
	.B1(\memory[5][3] ),
	.Y(n18));
   AOI22XLM U62 (.A0(n90),
	.A1(\memory[6][3] ),
	.B0(n89),
	.B1(\memory[7][3] ),
	.Y(n17));
   NAND4XLM U63 (.A(n20),
	.B(n19),
	.C(n18),
	.D(n17),
	.Y(n26));
   AOI22XLM U64 (.A0(n96),
	.A1(\memory[8][3] ),
	.B0(n95),
	.B1(\memory[9][3] ),
	.Y(n24));
   AOI22XLM U65 (.A0(n98),
	.A1(\memory[10][3] ),
	.B0(n97),
	.B1(\memory[11][3] ),
	.Y(n23));
   AOI22XLM U66 (.A0(n100),
	.A1(\memory[12][3] ),
	.B0(n99),
	.B1(\memory[13][3] ),
	.Y(n22));
   NAND4XLM U67 (.A(n24),
	.B(n23),
	.C(n22),
	.D(n21),
	.Y(n25));
   OAI32XLM U68 (.A0(n109),
	.A1(n26),
	.A2(n25),
	.B0(read_data[3]),
	.B1(N61),
	.Y(n27));
   INVXLM U69 (.A(n27),
	.Y(n291));
   AOI22XLM U70 (.A0(n84),
	.A1(register0[0]),
	.B0(n83),
	.B1(register1[0]),
	.Y(n31));
   AOI22XLM U71 (.A0(n86),
	.A1(register2[0]),
	.B0(n85),
	.B1(register3[0]),
	.Y(n30));
   AOI22XLM U72 (.A0(n88),
	.A1(\memory[4][0] ),
	.B0(n87),
	.B1(\memory[5][0] ),
	.Y(n29));
   AOI22XLM U73 (.A0(n90),
	.A1(\memory[6][0] ),
	.B0(n89),
	.B1(\memory[7][0] ),
	.Y(n28));
   NAND4XLM U74 (.A(n31),
	.B(n30),
	.C(n29),
	.D(n28),
	.Y(n37));
   AOI22XLM U75 (.A0(n96),
	.A1(\memory[8][0] ),
	.B0(n95),
	.B1(\memory[9][0] ),
	.Y(n35));
   AOI22XLM U76 (.A0(n98),
	.A1(\memory[10][0] ),
	.B0(n97),
	.B1(\memory[11][0] ),
	.Y(n34));
   AOI22XLM U77 (.A0(n100),
	.A1(\memory[12][0] ),
	.B0(n99),
	.B1(\memory[13][0] ),
	.Y(n33));
   AOI22XLM U78 (.A0(n102),
	.A1(\memory[14][0] ),
	.B0(n101),
	.B1(\memory[15][0] ),
	.Y(n32));
   NAND4XLM U79 (.A(n35),
	.B(n34),
	.C(n33),
	.D(n32),
	.Y(n36));
   OAI32XLM U80 (.A0(n109),
	.A1(n37),
	.A2(n36),
	.B0(read_data[0]),
	.B1(N61),
	.Y(n38));
   AOI22XLM U81 (.A0(n84),
	.A1(register0[7]),
	.B0(n83),
	.B1(register1[7]),
	.Y(n42));
   AOI22XLM U82 (.A0(n86),
	.A1(n154),
	.B0(n85),
	.B1(n160),
	.Y(n41));
   AOI22XLM U83 (.A0(n88),
	.A1(\memory[4][7] ),
	.B0(n87),
	.B1(\memory[5][7] ),
	.Y(n40));
   AOI22XLM U84 (.A0(n90),
	.A1(\memory[6][7] ),
	.B0(n89),
	.B1(\memory[7][7] ),
	.Y(n39));
   NAND4XLM U85 (.A(n42),
	.B(n41),
	.C(n40),
	.D(n39),
	.Y(n48));
   AOI22XLM U86 (.A0(n96),
	.A1(\memory[8][7] ),
	.B0(n95),
	.B1(\memory[9][7] ),
	.Y(n46));
   AOI22XLM U87 (.A0(n98),
	.A1(\memory[10][7] ),
	.B0(n97),
	.B1(\memory[11][7] ),
	.Y(n45));
   AOI22XLM U88 (.A0(n100),
	.A1(\memory[12][7] ),
	.B0(n99),
	.B1(\memory[13][7] ),
	.Y(n44));
   AOI22XLM U89 (.A0(n102),
	.A1(\memory[14][7] ),
	.B0(n101),
	.B1(\memory[15][7] ),
	.Y(n43));
   NAND4XLM U90 (.A(n46),
	.B(n45),
	.C(n44),
	.D(n43),
	.Y(n47));
   OAI32XLM U91 (.A0(n109),
	.A1(n48),
	.A2(n47),
	.B0(read_data[7]),
	.B1(N61),
	.Y(n49));
   INVXLM U92 (.A(n49),
	.Y(n295));
   AOI22XLM U93 (.A0(n84),
	.A1(register0[1]),
	.B0(n83),
	.B1(register1[1]),
	.Y(n53));
   AOI22XLM U94 (.A0(n86),
	.A1(register2[1]),
	.B0(n85),
	.B1(register3[1]),
	.Y(n52));
   AOI22XLM U95 (.A0(n88),
	.A1(\memory[4][1] ),
	.B0(n87),
	.B1(\memory[5][1] ),
	.Y(n51));
   AOI22XLM U96 (.A0(n90),
	.A1(\memory[6][1] ),
	.B0(n89),
	.B1(\memory[7][1] ),
	.Y(n50));
   NAND4XLM U97 (.A(n53),
	.B(n52),
	.C(n51),
	.D(n50),
	.Y(n59));
   AOI22XLM U98 (.A0(n96),
	.A1(\memory[8][1] ),
	.B0(n95),
	.B1(\memory[9][1] ),
	.Y(n57));
   AOI22XLM U99 (.A0(n98),
	.A1(\memory[10][1] ),
	.B0(n97),
	.B1(\memory[11][1] ),
	.Y(n56));
   AOI22XLM U100 (.A0(n102),
	.A1(\memory[14][1] ),
	.B0(n101),
	.B1(\memory[15][1] ),
	.Y(n54));
   NAND4XLM U101 (.A(n57),
	.B(n56),
	.C(n55),
	.D(n54),
	.Y(n58));
   OAI32XLM U102 (.A0(n109),
	.A1(n59),
	.A2(n58),
	.B0(read_data[1]),
	.B1(N61),
	.Y(n60));
   INVXLM U103 (.A(n60),
	.Y(n289));
   AOI22XLM U104 (.A0(n84),
	.A1(register0[4]),
	.B0(n83),
	.B1(register1[4]),
	.Y(n64));
   AOI22XLM U105 (.A0(n86),
	.A1(n157),
	.B0(n85),
	.B1(register3[4]),
	.Y(n63));
   AOI22XLM U106 (.A0(n88),
	.A1(\memory[4][4] ),
	.B0(n87),
	.B1(\memory[5][4] ),
	.Y(n62));
   AOI22XLM U107 (.A0(n90),
	.A1(\memory[6][4] ),
	.B0(n89),
	.B1(\memory[7][4] ),
	.Y(n61));
   AOI22XLM U108 (.A0(n96),
	.A1(\memory[8][4] ),
	.B0(n95),
	.B1(\memory[9][4] ),
	.Y(n68));
   AOI22XLM U109 (.A0(n98),
	.A1(\memory[10][4] ),
	.B0(n97),
	.B1(\memory[11][4] ),
	.Y(n67));
   AOI22XLM U110 (.A0(n100),
	.A1(\memory[12][4] ),
	.B0(n99),
	.B1(\memory[13][4] ),
	.Y(n66));
   AOI22XLM U111 (.A0(n102),
	.A1(\memory[14][4] ),
	.B0(n101),
	.B1(\memory[15][4] ),
	.Y(n65));
   NAND4XLM U112 (.A(n68),
	.B(n67),
	.C(n66),
	.D(n65),
	.Y(n69));
   OAI32XLM U113 (.A0(n109),
	.A1(n70),
	.A2(n69),
	.B0(read_data[4]),
	.B1(N61),
	.Y(n71));
   INVXLM U114 (.A(n71),
	.Y(n292));
   AOI22XLM U115 (.A0(n84),
	.A1(register0[5]),
	.B0(n83),
	.B1(register1[5]),
	.Y(n75));
   AOI22XLM U116 (.A0(n86),
	.A1(n156),
	.B0(n85),
	.B1(register3[5]),
	.Y(n74));
   AOI22XLM U117 (.A0(n88),
	.A1(\memory[4][5] ),
	.B0(n87),
	.B1(\memory[5][5] ),
	.Y(n73));
   AOI22XLM U118 (.A0(n90),
	.A1(\memory[6][5] ),
	.B0(n89),
	.B1(\memory[7][5] ),
	.Y(n72));
   NAND4XLM U119 (.A(n75),
	.B(n74),
	.C(n73),
	.D(n72),
	.Y(n81));
   AOI22XLM U120 (.A0(n96),
	.A1(\memory[8][5] ),
	.B0(n95),
	.B1(\memory[9][5] ),
	.Y(n79));
   AOI22XLM U121 (.A0(n98),
	.A1(\memory[10][5] ),
	.B0(n97),
	.B1(\memory[11][5] ),
	.Y(n78));
   AOI22XLM U122 (.A0(n100),
	.A1(\memory[12][5] ),
	.B0(n99),
	.B1(\memory[13][5] ),
	.Y(n77));
   NAND4XLM U123 (.A(n79),
	.B(n78),
	.C(n77),
	.D(n76),
	.Y(n80));
   OAI32XLM U124 (.A0(n109),
	.A1(n81),
	.A2(n80),
	.B0(read_data[5]),
	.B1(N61),
	.Y(n82));
   INVXLM U125 (.A(n82),
	.Y(n293));
   AOI22XLM U126 (.A0(n84),
	.A1(register0[6]),
	.B0(n83),
	.B1(register1[6]),
	.Y(n94));
   AOI22XLM U127 (.A0(n88),
	.A1(\memory[4][6] ),
	.B0(n87),
	.B1(\memory[5][6] ),
	.Y(n92));
   AOI22XLM U128 (.A0(n90),
	.A1(\memory[6][6] ),
	.B0(n89),
	.B1(\memory[7][6] ),
	.Y(n91));
   NAND4XLM U129 (.A(n94),
	.B(n93),
	.C(n92),
	.D(n91),
	.Y(n108));
   AOI22XLM U130 (.A0(n96),
	.A1(\memory[8][6] ),
	.B0(n95),
	.B1(\memory[9][6] ),
	.Y(n106));
   AOI22XLM U131 (.A0(n98),
	.A1(\memory[10][6] ),
	.B0(n97),
	.B1(\memory[11][6] ),
	.Y(n105));
   AOI22XLM U132 (.A0(n100),
	.A1(\memory[12][6] ),
	.B0(n99),
	.B1(\memory[13][6] ),
	.Y(n104));
   AOI22XLM U133 (.A0(n102),
	.A1(\memory[14][6] ),
	.B0(n101),
	.B1(\memory[15][6] ),
	.Y(n103));
   NAND4XLM U134 (.A(n106),
	.B(n105),
	.C(n104),
	.D(n103),
	.Y(n107));
   OAI32XLM U135 (.A0(n109),
	.A1(n108),
	.A2(n107),
	.B0(read_data[6]),
	.B1(N61),
	.Y(n110));
   INVXLM U136 (.A(n110),
	.Y(n294));
   NOR2BXLM U137 (.AN(write_enable),
	.B(read_enable),
	.Y(n125));
   NAND2XLM U138 (.A(n111),
	.B(n125),
	.Y(n119));
   NOR2X2M U139 (.A(n127),
	.B(n119),
	.Y(n112));
   CLKINVX2M U140 (.A(write_data[7]),
	.Y(n139));
   AOI2BB2XLM U141 (.A0N(register0[7]),
	.A1N(n112),
	.B0(n112),
	.B1(n139),
	.Y(n423));
   CLKINVX2M U142 (.A(write_data[6]),
	.Y(n140));
   AOI2BB2XLM U143 (.A0N(register0[6]),
	.A1N(n112),
	.B0(n112),
	.B1(n140),
	.Y(n422));
   CLKINVX2M U144 (.A(write_data[5]),
	.Y(n141));
   AOI2BB2XLM U145 (.A0N(register0[5]),
	.A1N(n112),
	.B0(n112),
	.B1(n141),
	.Y(n421));
   CLKINVX2M U146 (.A(write_data[4]),
	.Y(n142));
   AOI2BB2XLM U147 (.A0N(register0[4]),
	.A1N(n112),
	.B0(n112),
	.B1(n142),
	.Y(n420));
   CLKINVX2M U148 (.A(write_data[3]),
	.Y(n143));
   AOI2BB2XLM U149 (.A0N(register0[3]),
	.A1N(n112),
	.B0(n112),
	.B1(n143),
	.Y(n419));
   CLKINVX2M U150 (.A(write_data[2]),
	.Y(n144));
   AOI2BB2XLM U151 (.A0N(register0[2]),
	.A1N(n112),
	.B0(n112),
	.B1(n144),
	.Y(n418));
   CLKINVX2M U152 (.A(write_data[1]),
	.Y(n145));
   AOI2BB2XLM U153 (.A0N(register0[1]),
	.A1N(n112),
	.B0(n112),
	.B1(n145),
	.Y(n417));
   AOI2BB2XLM U154 (.A0N(register0[0]),
	.A1N(n112),
	.B0(n112),
	.B1(n146),
	.Y(n416));
   NAND2XLM U155 (.A(n113),
	.B(n125),
	.Y(n121));
   NOR2X2M U156 (.A(n127),
	.B(n121),
	.Y(n114));
   AOI2BB2XLM U157 (.A0N(register1[7]),
	.A1N(n114),
	.B0(n114),
	.B1(n139),
	.Y(n415));
   AOI2BB2XLM U158 (.A0N(register1[6]),
	.A1N(n114),
	.B0(n114),
	.B1(n140),
	.Y(n414));
   AOI2BB2XLM U159 (.A0N(register1[5]),
	.A1N(n114),
	.B0(n114),
	.B1(n141),
	.Y(n413));
   AOI2BB2XLM U160 (.A0N(register1[4]),
	.A1N(n114),
	.B0(n114),
	.B1(n142),
	.Y(n412));
   AOI2BB2XLM U161 (.A0N(register1[3]),
	.A1N(n114),
	.B0(n114),
	.B1(n143),
	.Y(n411));
   AOI2BB2XLM U162 (.A0N(register1[2]),
	.A1N(n114),
	.B0(n114),
	.B1(n144),
	.Y(n410));
   AOI2BB2XLM U163 (.A0N(register1[1]),
	.A1N(n114),
	.B0(n114),
	.B1(n145),
	.Y(n409));
   AOI2BB2XLM U164 (.A0N(register1[0]),
	.A1N(n114),
	.B0(n114),
	.B1(n146),
	.Y(n408));
   NOR2X2M U165 (.A(n130),
	.B(n119),
	.Y(n115));
   AOI2BB2XLM U166 (.A0N(n154),
	.A1N(n115),
	.B0(n115),
	.B1(n139),
	.Y(n407));
   AOI2BB2XLM U167 (.A0N(n155),
	.A1N(n115),
	.B0(n115),
	.B1(n140),
	.Y(n406));
   AOI2BB2XLM U168 (.A0N(n156),
	.A1N(n115),
	.B0(n115),
	.B1(n141),
	.Y(n405));
   AOI2BB2XLM U169 (.A0N(n157),
	.A1N(n115),
	.B0(n115),
	.B1(n142),
	.Y(n404));
   AOI2BB2XLM U170 (.A0N(n158),
	.A1N(n115),
	.B0(n115),
	.B1(n143),
	.Y(n403));
   AOI2BB2XLM U171 (.A0N(n159),
	.A1N(n115),
	.B0(n115),
	.B1(n144),
	.Y(n402));
   AOI2BB2XLM U172 (.A0N(register2[1]),
	.A1N(n115),
	.B0(n115),
	.B1(n145),
	.Y(n401));
   AOI2BB2XLM U173 (.A0N(register2[0]),
	.A1N(n115),
	.B0(n115),
	.B1(n146),
	.Y(n400));
   NOR2X2M U174 (.A(n130),
	.B(n121),
	.Y(n116));
   AOI2BB2XLM U175 (.A0N(n160),
	.A1N(n116),
	.B0(n116),
	.B1(n139),
	.Y(n399));
   AOI2BB2XLM U176 (.A0N(n161),
	.A1N(n116),
	.B0(n116),
	.B1(n140),
	.Y(n398));
   AOI2BB2XLM U177 (.A0N(register3[5]),
	.A1N(n116),
	.B0(n116),
	.B1(n141),
	.Y(n397));
   AOI2BB2XLM U178 (.A0N(register3[4]),
	.A1N(n116),
	.B0(n116),
	.B1(n142),
	.Y(n396));
   AOI2BB2XLM U179 (.A0N(register3[3]),
	.A1N(n116),
	.B0(n116),
	.B1(n143),
	.Y(n395));
   AOI2BB2XLM U180 (.A0N(register3[2]),
	.A1N(n116),
	.B0(n116),
	.B1(n144),
	.Y(n394));
   AOI2BB2XLM U181 (.A0N(register3[1]),
	.A1N(n116),
	.B0(n116),
	.B1(n145),
	.Y(n393));
   AOI2BB2XLM U182 (.A0N(register3[0]),
	.A1N(n116),
	.B0(n116),
	.B1(n146),
	.Y(n392));
   NOR2X2M U183 (.A(n133),
	.B(n119),
	.Y(n117));
   AOI2BB2XLM U184 (.A0N(\memory[4][7] ),
	.A1N(n117),
	.B0(n117),
	.B1(n139),
	.Y(n391));
   AOI2BB2XLM U185 (.A0N(\memory[4][6] ),
	.A1N(n117),
	.B0(n117),
	.B1(n140),
	.Y(n390));
   AOI2BB2XLM U186 (.A0N(\memory[4][5] ),
	.A1N(n117),
	.B0(n117),
	.B1(n141),
	.Y(n389));
   AOI2BB2XLM U187 (.A0N(\memory[4][4] ),
	.A1N(n117),
	.B0(n117),
	.B1(n142),
	.Y(n388));
   AOI2BB2XLM U188 (.A0N(\memory[4][3] ),
	.A1N(n117),
	.B0(n117),
	.B1(n143),
	.Y(n387));
   AOI2BB2XLM U189 (.A0N(\memory[4][2] ),
	.A1N(n117),
	.B0(n117),
	.B1(n144),
	.Y(n386));
   AOI2BB2XLM U190 (.A0N(\memory[4][1] ),
	.A1N(n117),
	.B0(n117),
	.B1(n145),
	.Y(n385));
   AOI2BB2XLM U191 (.A0N(\memory[4][0] ),
	.A1N(n117),
	.B0(n117),
	.B1(n146),
	.Y(n384));
   NOR2X2M U192 (.A(n133),
	.B(n121),
	.Y(n118));
   AOI2BB2XLM U193 (.A0N(\memory[5][7] ),
	.A1N(n118),
	.B0(n118),
	.B1(n139),
	.Y(n383));
   AOI2BB2XLM U194 (.A0N(\memory[5][6] ),
	.A1N(n118),
	.B0(n118),
	.B1(n140),
	.Y(n382));
   AOI2BB2XLM U195 (.A0N(\memory[5][5] ),
	.A1N(n118),
	.B0(n118),
	.B1(n141),
	.Y(n381));
   AOI2BB2XLM U196 (.A0N(\memory[5][4] ),
	.A1N(n118),
	.B0(n118),
	.B1(n142),
	.Y(n380));
   AOI2BB2XLM U197 (.A0N(\memory[5][3] ),
	.A1N(n118),
	.B0(n118),
	.B1(n143),
	.Y(n379));
   AOI2BB2XLM U198 (.A0N(\memory[5][2] ),
	.A1N(n118),
	.B0(n118),
	.B1(n144),
	.Y(n378));
   AOI2BB2XLM U199 (.A0N(\memory[5][1] ),
	.A1N(n118),
	.B0(n118),
	.B1(n145),
	.Y(n377));
   AOI2BB2XLM U200 (.A0N(\memory[5][0] ),
	.A1N(n118),
	.B0(n118),
	.B1(n146),
	.Y(n376));
   NOR2X2M U201 (.A(n138),
	.B(n119),
	.Y(n120));
   AOI2BB2XLM U202 (.A0N(\memory[6][7] ),
	.A1N(n120),
	.B0(n120),
	.B1(n139),
	.Y(n375));
   AOI2BB2XLM U203 (.A0N(\memory[6][6] ),
	.A1N(n120),
	.B0(n120),
	.B1(n140),
	.Y(n374));
   AOI2BB2XLM U204 (.A0N(\memory[6][5] ),
	.A1N(n120),
	.B0(n120),
	.B1(n141),
	.Y(n373));
   AOI2BB2XLM U205 (.A0N(\memory[6][4] ),
	.A1N(n120),
	.B0(n120),
	.B1(n142),
	.Y(n372));
   AOI2BB2XLM U206 (.A0N(\memory[6][3] ),
	.A1N(n120),
	.B0(n120),
	.B1(n143),
	.Y(n371));
   AOI2BB2XLM U207 (.A0N(\memory[6][2] ),
	.A1N(n120),
	.B0(n120),
	.B1(n144),
	.Y(n370));
   AOI2BB2XLM U208 (.A0N(\memory[6][1] ),
	.A1N(n120),
	.B0(n120),
	.B1(n145),
	.Y(n369));
   AOI2BB2XLM U209 (.A0N(\memory[6][0] ),
	.A1N(n120),
	.B0(n120),
	.B1(n146),
	.Y(n368));
   NOR2X2M U210 (.A(n138),
	.B(n121),
	.Y(n122));
   AOI2BB2XLM U211 (.A0N(\memory[7][7] ),
	.A1N(n122),
	.B0(n122),
	.B1(n139),
	.Y(n367));
   AOI2BB2XLM U212 (.A0N(\memory[7][6] ),
	.A1N(n122),
	.B0(n122),
	.B1(n140),
	.Y(n366));
   AOI2BB2XLM U213 (.A0N(\memory[7][5] ),
	.A1N(n122),
	.B0(n122),
	.B1(n141),
	.Y(n365));
   AOI2BB2XLM U214 (.A0N(\memory[7][4] ),
	.A1N(n122),
	.B0(n122),
	.B1(n142),
	.Y(n364));
   AOI2BB2XLM U215 (.A0N(\memory[7][3] ),
	.A1N(n122),
	.B0(n122),
	.B1(n143),
	.Y(n363));
   AOI2BB2XLM U216 (.A0N(\memory[7][2] ),
	.A1N(n122),
	.B0(n122),
	.B1(n144),
	.Y(n362));
   AOI2BB2XLM U217 (.A0N(\memory[7][1] ),
	.A1N(n122),
	.B0(n122),
	.B1(n145),
	.Y(n361));
   AOI2BB2XLM U218 (.A0N(\memory[7][0] ),
	.A1N(n122),
	.B0(n122),
	.B1(n146),
	.Y(n360));
   NAND2BXLM U219 (.AN(n123),
	.B(n125),
	.Y(n135));
   NOR2X2M U220 (.A(n127),
	.B(n135),
	.Y(n124));
   AOI2BB2XLM U221 (.A0N(\memory[8][7] ),
	.A1N(n124),
	.B0(n124),
	.B1(n139),
	.Y(n359));
   AOI2BB2XLM U222 (.A0N(\memory[8][6] ),
	.A1N(n124),
	.B0(n124),
	.B1(n140),
	.Y(n358));
   AOI2BB2XLM U223 (.A0N(\memory[8][5] ),
	.A1N(n124),
	.B0(n124),
	.B1(n141),
	.Y(n357));
   AOI2BB2XLM U224 (.A0N(\memory[8][4] ),
	.A1N(n124),
	.B0(n124),
	.B1(n142),
	.Y(n356));
   AOI2BB2XLM U225 (.A0N(\memory[8][3] ),
	.A1N(n124),
	.B0(n124),
	.B1(n143),
	.Y(n355));
   AOI2BB2XLM U226 (.A0N(\memory[8][2] ),
	.A1N(n124),
	.B0(n124),
	.B1(n144),
	.Y(n354));
   AOI2BB2XLM U227 (.A0N(\memory[8][1] ),
	.A1N(n124),
	.B0(n124),
	.B1(n145),
	.Y(n353));
   AOI2BB2XLM U228 (.A0N(\memory[8][0] ),
	.A1N(n124),
	.B0(n124),
	.B1(n146),
	.Y(n352));
   NAND2BXLM U229 (.AN(n126),
	.B(n125),
	.Y(n137));
   NOR2X2M U230 (.A(n127),
	.B(n137),
	.Y(n128));
   AOI2BB2XLM U231 (.A0N(\memory[9][7] ),
	.A1N(n128),
	.B0(n128),
	.B1(n139),
	.Y(n351));
   AOI2BB2XLM U232 (.A0N(\memory[9][6] ),
	.A1N(n128),
	.B0(n128),
	.B1(n140),
	.Y(n350));
   AOI2BB2XLM U233 (.A0N(\memory[9][5] ),
	.A1N(n128),
	.B0(n128),
	.B1(n141),
	.Y(n349));
   AOI2BB2XLM U234 (.A0N(\memory[9][4] ),
	.A1N(n128),
	.B0(n128),
	.B1(n142),
	.Y(n348));
   AOI2BB2XLM U235 (.A0N(\memory[9][3] ),
	.A1N(n128),
	.B0(n128),
	.B1(n143),
	.Y(n347));
   AOI2BB2XLM U236 (.A0N(\memory[9][2] ),
	.A1N(n128),
	.B0(n128),
	.B1(n144),
	.Y(n346));
   AOI2BB2XLM U237 (.A0N(\memory[9][1] ),
	.A1N(n128),
	.B0(n128),
	.B1(n145),
	.Y(n345));
   AOI2BB2XLM U238 (.A0N(\memory[9][0] ),
	.A1N(n128),
	.B0(n128),
	.B1(n146),
	.Y(n344));
   NOR2X2M U239 (.A(n130),
	.B(n135),
	.Y(n129));
   AOI2BB2XLM U240 (.A0N(\memory[10][7] ),
	.A1N(n129),
	.B0(n129),
	.B1(n139),
	.Y(n343));
   AOI2BB2XLM U241 (.A0N(\memory[10][6] ),
	.A1N(n129),
	.B0(n129),
	.B1(n140),
	.Y(n342));
   AOI2BB2XLM U242 (.A0N(\memory[10][5] ),
	.A1N(n129),
	.B0(n129),
	.B1(n141),
	.Y(n341));
   AOI2BB2XLM U243 (.A0N(\memory[10][4] ),
	.A1N(n129),
	.B0(n129),
	.B1(n142),
	.Y(n340));
   AOI2BB2XLM U244 (.A0N(\memory[10][3] ),
	.A1N(n129),
	.B0(n129),
	.B1(n143),
	.Y(n339));
   AOI2BB2XLM U245 (.A0N(\memory[10][2] ),
	.A1N(n129),
	.B0(n129),
	.B1(n144),
	.Y(n338));
   AOI2BB2XLM U246 (.A0N(\memory[10][1] ),
	.A1N(n129),
	.B0(n129),
	.B1(n145),
	.Y(n337));
   AOI2BB2XLM U247 (.A0N(\memory[10][0] ),
	.A1N(n129),
	.B0(n129),
	.B1(n146),
	.Y(n336));
   NOR2X2M U248 (.A(n130),
	.B(n137),
	.Y(n131));
   AOI2BB2XLM U249 (.A0N(\memory[11][7] ),
	.A1N(n131),
	.B0(n131),
	.B1(n139),
	.Y(n335));
   AOI2BB2XLM U250 (.A0N(\memory[11][6] ),
	.A1N(n131),
	.B0(n131),
	.B1(n140),
	.Y(n334));
   AOI2BB2XLM U251 (.A0N(\memory[11][5] ),
	.A1N(n131),
	.B0(n131),
	.B1(n141),
	.Y(n333));
   AOI2BB2XLM U252 (.A0N(\memory[11][4] ),
	.A1N(n131),
	.B0(n131),
	.B1(n142),
	.Y(n332));
   AOI2BB2XLM U253 (.A0N(\memory[11][3] ),
	.A1N(n131),
	.B0(n131),
	.B1(n143),
	.Y(n331));
   AOI2BB2XLM U254 (.A0N(\memory[11][2] ),
	.A1N(n131),
	.B0(n131),
	.B1(n144),
	.Y(n330));
   AOI2BB2XLM U255 (.A0N(\memory[11][1] ),
	.A1N(n131),
	.B0(n131),
	.B1(n145),
	.Y(n329));
   AOI2BB2XLM U256 (.A0N(\memory[11][0] ),
	.A1N(n131),
	.B0(n131),
	.B1(n146),
	.Y(n328));
   NOR2X2M U257 (.A(n133),
	.B(n135),
	.Y(n132));
   AOI2BB2XLM U258 (.A0N(\memory[12][7] ),
	.A1N(n132),
	.B0(n132),
	.B1(n139),
	.Y(n327));
   AOI2BB2XLM U259 (.A0N(\memory[12][6] ),
	.A1N(n132),
	.B0(n132),
	.B1(n140),
	.Y(n326));
   AOI2BB2XLM U260 (.A0N(\memory[12][5] ),
	.A1N(n132),
	.B0(n132),
	.B1(n141),
	.Y(n325));
   AOI2BB2XLM U261 (.A0N(\memory[12][4] ),
	.A1N(n132),
	.B0(n132),
	.B1(n142),
	.Y(n324));
   AOI2BB2XLM U262 (.A0N(\memory[12][3] ),
	.A1N(n132),
	.B0(n132),
	.B1(n143),
	.Y(n323));
   AOI2BB2XLM U263 (.A0N(\memory[12][2] ),
	.A1N(n132),
	.B0(n132),
	.B1(n144),
	.Y(n322));
   AOI2BB2XLM U264 (.A0N(\memory[12][1] ),
	.A1N(n132),
	.B0(n132),
	.B1(n145),
	.Y(n321));
   AOI2BB2XLM U265 (.A0N(\memory[12][0] ),
	.A1N(n132),
	.B0(n132),
	.B1(n146),
	.Y(n320));
   NOR2X2M U266 (.A(n133),
	.B(n137),
	.Y(n134));
   AOI2BB2XLM U267 (.A0N(\memory[13][7] ),
	.A1N(n134),
	.B0(n134),
	.B1(n139),
	.Y(n319));
   AOI2BB2XLM U268 (.A0N(\memory[13][6] ),
	.A1N(n134),
	.B0(n134),
	.B1(n140),
	.Y(n318));
   AOI2BB2XLM U269 (.A0N(\memory[13][5] ),
	.A1N(n134),
	.B0(n134),
	.B1(n141),
	.Y(n317));
   AOI2BB2XLM U270 (.A0N(\memory[13][4] ),
	.A1N(n134),
	.B0(n134),
	.B1(n142),
	.Y(n316));
   AOI2BB2XLM U271 (.A0N(\memory[13][3] ),
	.A1N(n134),
	.B0(n134),
	.B1(n143),
	.Y(n315));
   AOI2BB2XLM U272 (.A0N(\memory[13][2] ),
	.A1N(n134),
	.B0(n134),
	.B1(n144),
	.Y(n314));
   AOI2BB2XLM U273 (.A0N(\memory[13][1] ),
	.A1N(n134),
	.B0(n134),
	.B1(n145),
	.Y(n313));
   AOI2BB2XLM U274 (.A0N(\memory[13][0] ),
	.A1N(n134),
	.B0(n134),
	.B1(n146),
	.Y(n312));
   NOR2X2M U275 (.A(n138),
	.B(n135),
	.Y(n136));
   AOI2BB2XLM U276 (.A0N(\memory[14][7] ),
	.A1N(n136),
	.B0(n136),
	.B1(n139),
	.Y(n311));
   AOI2BB2XLM U277 (.A0N(\memory[14][6] ),
	.A1N(n136),
	.B0(n136),
	.B1(n140),
	.Y(n310));
   AOI2BB2XLM U278 (.A0N(\memory[14][5] ),
	.A1N(n136),
	.B0(n136),
	.B1(n141),
	.Y(n309));
   AOI2BB2XLM U279 (.A0N(\memory[14][4] ),
	.A1N(n136),
	.B0(n136),
	.B1(n142),
	.Y(n308));
   AOI2BB2XLM U280 (.A0N(\memory[14][3] ),
	.A1N(n136),
	.B0(n136),
	.B1(n143),
	.Y(n307));
   AOI2BB2XLM U281 (.A0N(\memory[14][2] ),
	.A1N(n136),
	.B0(n136),
	.B1(n144),
	.Y(n306));
   AOI2BB2XLM U282 (.A0N(\memory[14][1] ),
	.A1N(n136),
	.B0(n136),
	.B1(n145),
	.Y(n305));
   AOI2BB2XLM U283 (.A0N(\memory[14][0] ),
	.A1N(n136),
	.B0(n136),
	.B1(n146),
	.Y(n304));
   AOI2BB2XLM U284 (.A0N(\memory[15][7] ),
	.A1N(n147),
	.B0(n147),
	.B1(n139),
	.Y(n303));
   AOI2BB2XLM U285 (.A0N(\memory[15][6] ),
	.A1N(n147),
	.B0(n147),
	.B1(n140),
	.Y(n302));
   AOI2BB2XLM U286 (.A0N(\memory[15][5] ),
	.A1N(n147),
	.B0(n147),
	.B1(n141),
	.Y(n301));
   AOI2BB2XLM U287 (.A0N(\memory[15][4] ),
	.A1N(n147),
	.B0(n147),
	.B1(n142),
	.Y(n300));
   AOI2BB2XLM U288 (.A0N(\memory[15][3] ),
	.A1N(n147),
	.B0(n147),
	.B1(n143),
	.Y(n299));
   AOI2BB2XLM U289 (.A0N(\memory[15][2] ),
	.A1N(n147),
	.B0(n147),
	.B1(n144),
	.Y(n298));
   AOI2BB2XLM U290 (.A0N(\memory[15][1] ),
	.A1N(n147),
	.B0(n147),
	.B1(n145),
	.Y(n297));
   AOI2BB2XLM U291 (.A0N(\memory[15][0] ),
	.A1N(n147),
	.B0(n147),
	.B1(n146),
	.Y(n296));
   SDFFSQX1M \memory_reg[3][3]  (.SI(register3[2]),
	.SE(test_se),
	.D(n395),
	.CK(multiplexed_reference_clk__L3_N1),
	.SN(reset),
	.Q(register3[3]));
   SDFFSQX1M \memory_reg[2][0]  (.SI(register1[7]),
	.SE(p1),
	.D(n400),
	.CK(clk),
	.SN(p4),
	.Q(register2[0]));
endmodule

module register_test_1 (
	clk, 
	reset, 
	D, 
	Q, 
	test_si, 
	test_se);
   input clk;
   input reset;
   input [0:0] D;
   output [0:0] Q;
   input test_si;
   input test_se;

   SDFFRQX1M \Q_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(D[0]),
	.CK(clk),
	.RN(reset),
	.Q(Q[0]));
endmodule

module register_test_2 (
	clk, 
	reset, 
	D, 
	Q, 
	test_se);
   input clk;
   input reset;
   input [0:0] D;
   output [0:0] Q;
   input test_se;

   SDFFRQX2M \Q_reg[0]  (.SI(D[0]),
	.SE(test_se),
	.D(D[0]),
	.CK(clk),
	.RN(reset),
	.Q(Q[0]));
endmodule

module bus_synchronizer_test_1 (
	clk, 
	reset, 
	asynchronous_data, 
	synchronous_data, 
	test_si, 
	test_se);
   input clk;
   input reset;
   input [0:0] asynchronous_data;
   output [0:0] synchronous_data;
   input test_si;
   input test_se;

   // Internal wires
   wire \output_ports[0][0] ;

   register_test_1 U0_register (.clk(clk),
	.reset(reset),
	.D(asynchronous_data),
	.Q(\output_ports[0][0] ),
	.test_si(test_si),
	.test_se(test_se));
   register_test_2 \register_instance[1].U_register  (.clk(clk),
	.reset(reset),
	.D(\output_ports[0][0] ),
	.Q(synchronous_data),
	.test_se(test_se));
endmodule

module register_6 (
	clk, 
	reset, 
	D, 
	Q);
   input clk;
   input reset;
   input [0:0] D;
   output [0:0] Q;

   DFFRQX1M \Q_reg[0]  (.D(D[0]),
	.CK(clk),
	.RN(reset),
	.Q(Q[0]));
endmodule

module register_5 (
	clk, 
	reset, 
	D, 
	Q);
   input clk;
   input reset;
   input [0:0] D;
   output [0:0] Q;

   DFFRQX1M \Q_reg[0]  (.D(D[0]),
	.CK(clk),
	.RN(reset),
	.Q(Q[0]));
endmodule

module bus_synchronizer_3 (
	clk, 
	reset, 
	asynchronous_data, 
	synchronous_data);
   input clk;
   input reset;
   input [0:0] asynchronous_data;
   output [0:0] synchronous_data;

   // Internal wires
   wire \output_ports[0][0] ;

   register_6 U0_register (.clk(clk),
	.reset(reset),
	.D(asynchronous_data),
	.Q(\output_ports[0][0] ));
   register_5 \register_instance[1].U_register  (.clk(clk),
	.reset(reset),
	.D(\output_ports[0][0] ),
	.Q(synchronous_data));
endmodule

module register_test_0 (
	clk, 
	reset, 
	D, 
	Q, 
	test_si, 
	test_se);
   input clk;
   input reset;
   input [0:0] D;
   output [0:0] Q;
   input test_si;
   input test_se;

   SDFFRQX1M \Q_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(D[0]),
	.CK(clk),
	.RN(reset),
	.Q(Q[0]));
endmodule

module register_3 (
	clk, 
	reset, 
	D, 
	Q);
   input clk;
   input reset;
   input [0:0] D;
   output [0:0] Q;

   DFFRQX1M \Q_reg[0]  (.D(D[0]),
	.CK(clk),
	.RN(reset),
	.Q(Q[0]));
endmodule

module bus_synchronizer_test_0 (
	clk, 
	reset, 
	asynchronous_data, 
	synchronous_data, 
	test_si, 
	test_se);
   input clk;
   input reset;
   input [0:0] asynchronous_data;
   output [0:0] synchronous_data;
   input test_si;
   input test_se;

   // Internal wires
   wire \output_ports[0][0] ;

   register_test_0 U0_register (.clk(clk),
	.reset(reset),
	.D(asynchronous_data),
	.Q(\output_ports[0][0] ),
	.test_si(test_si),
	.test_se(test_se));
   register_3 \register_instance[1].U_register  (.clk(clk),
	.reset(reset),
	.D(\output_ports[0][0] ),
	.Q(synchronous_data));
endmodule

module data_synchronizer_test_0 (
	clk, 
	reset, 
	asynchronous_data_valid, 
	asynchronous_data, 
	Q_pulse_generator, 
	synchronous_data_valid, 
	synchronous_data, 
	test_si2, 
	test_si1, 
	test_so1, 
	test_se, 
	p1, 
	p2);
   input clk;
   input reset;
   input asynchronous_data_valid;
   input [7:0] asynchronous_data;
   output Q_pulse_generator;
   output synchronous_data_valid;
   output [7:0] synchronous_data;
   input test_si2;
   input test_si1;
   output test_so1;
   input test_se;
   input p1;
   input p2;

   // Internal wires
   wire n2;
   wire synchronized_enable;
   wire pulse_generator_output;
   wire n4;
   wire n6;
   wire n8;
   wire n10;
   wire n12;
   wire n14;
   wire n16;
   wire n18;
   wire n1;

   assign test_so1 = n2 ;

   SDFFRQX1M synchronous_data_valid_reg (.SI(synchronous_data[7]),
	.SE(test_se),
	.D(pulse_generator_output),
	.CK(clk),
	.RN(reset),
	.Q(synchronous_data_valid));
   SDFFRQX1M \synchronous_data_reg[7]  (.SI(synchronous_data[6]),
	.SE(test_se),
	.D(n18),
	.CK(clk),
	.RN(reset),
	.Q(synchronous_data[7]));
   SDFFRQX1M \synchronous_data_reg[6]  (.SI(synchronous_data[5]),
	.SE(test_se),
	.D(n16),
	.CK(clk),
	.RN(reset),
	.Q(synchronous_data[6]));
   SDFFRQX1M \synchronous_data_reg[5]  (.SI(synchronous_data[4]),
	.SE(p1),
	.D(n14),
	.CK(clk),
	.RN(reset),
	.Q(synchronous_data[5]));
   SDFFRQX1M \synchronous_data_reg[4]  (.SI(synchronous_data[3]),
	.SE(p1),
	.D(n12),
	.CK(clk),
	.RN(p2),
	.Q(synchronous_data[4]));
   SDFFRQX1M \synchronous_data_reg[3]  (.SI(synchronous_data[2]),
	.SE(p1),
	.D(n10),
	.CK(clk),
	.RN(p2),
	.Q(synchronous_data[3]));
   SDFFRQX1M \synchronous_data_reg[2]  (.SI(synchronous_data[1]),
	.SE(p1),
	.D(n8),
	.CK(clk),
	.RN(p2),
	.Q(synchronous_data[2]));
   SDFFRQX1M \synchronous_data_reg[1]  (.SI(synchronous_data[0]),
	.SE(p1),
	.D(n6),
	.CK(clk),
	.RN(p2),
	.Q(synchronous_data[1]));
   SDFFRQX1M \synchronous_data_reg[0]  (.SI(test_si2),
	.SE(p1),
	.D(n4),
	.CK(clk),
	.RN(p2),
	.Q(synchronous_data[0]));
   DFFRQX1M Q_pulse_generator_reg (.D(synchronized_enable),
	.CK(clk),
	.RN(p2),
	.Q(n2));
   NOR2BX2M U3 (.AN(synchronized_enable),
	.B(n2),
	.Y(pulse_generator_output));
   INVXLM U4 (.A(pulse_generator_output),
	.Y(n1));
   AO22XLM U5 (.A0(pulse_generator_output),
	.A1(asynchronous_data[7]),
	.B0(n1),
	.B1(synchronous_data[7]),
	.Y(n18));
   AO22XLM U6 (.A0(pulse_generator_output),
	.A1(asynchronous_data[6]),
	.B0(n1),
	.B1(synchronous_data[6]),
	.Y(n16));
   AO22XLM U7 (.A0(pulse_generator_output),
	.A1(asynchronous_data[5]),
	.B0(n1),
	.B1(synchronous_data[5]),
	.Y(n14));
   AO22XLM U8 (.A0(pulse_generator_output),
	.A1(asynchronous_data[4]),
	.B0(n1),
	.B1(synchronous_data[4]),
	.Y(n12));
   AO22XLM U9 (.A0(pulse_generator_output),
	.A1(asynchronous_data[3]),
	.B0(n1),
	.B1(synchronous_data[3]),
	.Y(n10));
   AO22XLM U10 (.A0(pulse_generator_output),
	.A1(asynchronous_data[2]),
	.B0(n1),
	.B1(synchronous_data[2]),
	.Y(n8));
   AO22XLM U11 (.A0(pulse_generator_output),
	.A1(asynchronous_data[1]),
	.B0(n1),
	.B1(synchronous_data[1]),
	.Y(n6));
   AO22XLM U13 (.A0(pulse_generator_output),
	.A1(asynchronous_data[0]),
	.B0(n1),
	.B1(synchronous_data[0]),
	.Y(n4));
   bus_synchronizer_test_0 U_bus_synchronizer (.clk(clk),
	.reset(p2),
	.asynchronous_data(asynchronous_data_valid),
	.synchronous_data(synchronized_enable),
	.test_si(test_si1),
	.test_se(p1));
endmodule

module multiplexer_2x1_5 (
	IN0, 
	IN1, 
	select, 
	OUT);
   input IN0;
   input IN1;
   input select;
   output OUT;

   MX2X8M U1 (.S0(select),
	.B(IN1),
	.A(IN0),
	.Y(OUT));
endmodule

module multiplexer_2x1_4 (
	IN0, 
	IN1, 
	select, 
	OUT);
   input IN0;
   input IN1;
   input select;
   output OUT;

   MX2X4M U1 (.S0(select),
	.B(IN1),
	.A(IN0),
	.Y(OUT));
endmodule

module reset_synchronizer_test_0 (
	clk, 
	reset, 
	reset_synchronized, 
	test_si, 
	test_se);
   input clk;
   input reset;
   output reset_synchronized;
   input test_si;
   input test_se;

   // Internal wires
   wire HTIE_LTIEHI_NET;
   wire \Q[0] ;

   TIEHIM HTIE_LTIEHI (.Y(HTIE_LTIEHI_NET));
   SDFFRQX1M \Q_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(HTIE_LTIEHI_NET),
	.CK(clk),
	.RN(reset),
	.Q(\Q[0] ));
   SDFFRQX1M \Q_reg[1]  (.SI(\Q[0] ),
	.SE(test_se),
	.D(\Q[0] ),
	.CK(clk),
	.RN(reset),
	.Q(reset_synchronized));
endmodule

module multiplexer_2x1_2 (
	IN0, 
	IN1, 
	select, 
	OUT);
   input IN0;
   input IN1;
   input select;
   output OUT;

   MX2X6M U1 (.S0(select),
	.B(IN1),
	.A(IN0),
	.Y(OUT));
endmodule

module UART_transmitter_FSM_test_1 (
	clk, 
	reset, 
	parity_enable, 
	data_valid, 
	serial_enable, 
	bit_select, 
	serial_data_index, 
	busy, 
	test_si, 
	test_so, 
	test_se);
   input clk;
   input reset;
   input parity_enable;
   input data_valid;
   output serial_enable;
   output [1:0] bit_select;
   output [2:0] serial_data_index;
   output busy;
   input test_si;
   output test_so;
   input test_se;

   // Internal wires
   wire \serial_data_transmission_state[3] ;
   wire N22;
   wire N23;
   wire N24;
   wire N25;
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n18;
   wire [2:0] current_state;
   wire [2:0] next_state;

   assign test_so = n13 ;

   SDFFRQX1M \serial_data_transmission_state_reg[0]  (.SI(n18),
	.SE(test_se),
	.D(N22),
	.CK(clk),
	.RN(reset),
	.Q(serial_data_index[0]));
   SDFFRQX1M \serial_data_transmission_state_reg[1]  (.SI(serial_data_index[0]),
	.SE(test_se),
	.D(N23),
	.CK(clk),
	.RN(reset),
	.Q(serial_data_index[1]));
   SDFFRQX1M \serial_data_transmission_state_reg[2]  (.SI(serial_data_index[1]),
	.SE(test_se),
	.D(N24),
	.CK(clk),
	.RN(reset),
	.Q(serial_data_index[2]));
   SDFFRQX1M \serial_data_transmission_state_reg[3]  (.SI(serial_data_index[2]),
	.SE(test_se),
	.D(N25),
	.CK(clk),
	.RN(reset),
	.Q(\serial_data_transmission_state[3] ));
   SDFFRQX1M \current_state_reg[1]  (.SI(n3),
	.SE(test_se),
	.D(next_state[1]),
	.CK(clk),
	.RN(reset),
	.Q(current_state[1]));
   NAND2XLM U3 (.A(data_valid),
	.B(n18),
	.Y(n4));
   INVXLM U5 (.A(\serial_data_transmission_state[3] ),
	.Y(n13));
   NAND2XLM U6 (.A(n18),
	.B(current_state[1]),
	.Y(n2));
   AOI221XLM U7 (.A0(parity_enable),
	.A1(n3),
	.B0(n13),
	.B1(n3),
	.C0(n2),
	.Y(n1));
   INVXLM U8 (.A(n1),
	.Y(n15));
   OAI21XLM U10 (.A0(current_state[0]),
	.A1(current_state[1]),
	.B0(n18),
	.Y(n8));
   OAI31XLM U11 (.A0(current_state[0]),
	.A1(current_state[1]),
	.A2(n18),
	.B0(n8),
	.Y(busy));
   INVXLM U12 (.A(n2),
	.Y(bit_select[1]));
   NAND4XLM U13 (.A(\serial_data_transmission_state[3] ),
	.B(parity_enable),
	.C(bit_select[1]),
	.D(n3),
	.Y(n5));
   OAI31XLM U14 (.A0(current_state[0]),
	.A1(current_state[1]),
	.A2(n4),
	.B0(n5),
	.Y(next_state[0]));
   AOI221XLM U15 (.A0(\serial_data_transmission_state[3] ),
	.A1(current_state[1]),
	.B0(current_state[0]),
	.B1(current_state[1]),
	.C0(n8),
	.Y(serial_enable));
   INVXLM U16 (.A(serial_enable),
	.Y(n11));
   NAND2XLM U17 (.A(n11),
	.B(n5),
	.Y(next_state[1]));
   NAND2XLM U18 (.A(serial_data_index[1]),
	.B(serial_data_index[0]),
	.Y(n7));
   INVXLM U19 (.A(serial_data_index[2]),
	.Y(n6));
   INVXLM U20 (.A(serial_data_index[1]),
	.Y(n10));
   INVXLM U21 (.A(serial_data_index[0]),
	.Y(n9));
   NOR3XLM U22 (.A(n10),
	.B(n9),
	.C(n6),
	.Y(n14));
   AOI211XLM U23 (.A0(n7),
	.A1(n6),
	.B0(n14),
	.C0(n11),
	.Y(N24));
   AO21XLM U24 (.A0(current_state[0]),
	.A1(current_state[1]),
	.B0(n8),
	.Y(bit_select[0]));
   AOI221XLM U25 (.A0(serial_data_index[1]),
	.A1(serial_data_index[0]),
	.B0(n10),
	.B1(n9),
	.C0(n11),
	.Y(N23));
   NOR2XLM U26 (.A(serial_data_index[0]),
	.B(n11),
	.Y(N22));
   INVXLM U27 (.A(n14),
	.Y(n12));
   AOI221XLM U28 (.A0(\serial_data_transmission_state[3] ),
	.A1(n14),
	.B0(n13),
	.B1(n12),
	.C0(n11),
	.Y(N25));
   SDFFSQX1M \current_state_reg[2]  (.SI(current_state[1]),
	.SE(test_se),
	.D(n15),
	.CK(clk),
	.SN(reset),
	.Q(n18));
   SDFFRX1M \current_state_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(next_state[0]),
	.CK(clk),
	.RN(reset),
	.Q(current_state[0]),
	.QN(n3));
endmodule

module serializer_test_1 (
	clk, 
	reset, 
	parallel_data, 
	serial_enable, 
	serial_data_index, 
	serial_data, 
	test_si, 
	test_se);
   input clk;
   input reset;
   input [7:0] parallel_data;
   input serial_enable;
   input [2:0] serial_data_index;
   output serial_data;
   input test_si;
   input test_se;

   // Internal wires
   wire n10;
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n11;

   SDFFRQX1M serial_data_reg (.SI(test_si),
	.SE(test_se),
	.D(n10),
	.CK(clk),
	.RN(reset),
	.Q(serial_data));
   AOI22XLM U2 (.A0(serial_data_index[2]),
	.A1(parallel_data[4]),
	.B0(parallel_data[0]),
	.B1(n3),
	.Y(n5));
   AOI22XLM U3 (.A0(serial_data_index[1]),
	.A1(n2),
	.B0(n1),
	.B1(n4),
	.Y(n8));
   OAI2B1XLM U4 (.A0(serial_enable),
	.A1N(serial_data),
	.B0(n11),
	.Y(n10));
   INVXLM U5 (.A(serial_data_index[2]),
	.Y(n3));
   AOI22XLM U6 (.A0(serial_data_index[2]),
	.A1(parallel_data[7]),
	.B0(parallel_data[3]),
	.B1(n3),
	.Y(n2));
   AOI22XLM U7 (.A0(serial_data_index[2]),
	.A1(parallel_data[5]),
	.B0(parallel_data[1]),
	.B1(n3),
	.Y(n1));
   INVXLM U8 (.A(serial_data_index[1]),
	.Y(n4));
   AOI22XLM U9 (.A0(serial_data_index[2]),
	.A1(parallel_data[6]),
	.B0(parallel_data[2]),
	.B1(n3),
	.Y(n6));
   AOI221XLM U10 (.A0(n6),
	.A1(serial_data_index[1]),
	.B0(n5),
	.B1(n4),
	.C0(serial_data_index[0]),
	.Y(n7));
   AOI32XLM U11 (.A0(serial_data_index[0]),
	.A1(serial_enable),
	.A2(n8),
	.B0(n7),
	.B1(serial_enable),
	.Y(n11));
endmodule

module parity_calculator_test_1 (
	clk, 
	reset, 
	parity_type, 
	parity_enable, 
	data_valid, 
	parallel_data, 
	parity_bit, 
	test_si, 
	test_se);
   input clk;
   input reset;
   input parity_type;
   input parity_enable;
   input data_valid;
   input [7:0] parallel_data;
   output parity_bit;
   input test_si;
   input test_se;

   // Internal wires
   wire n10;
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;

   SDFFRQX1M parity_bit_reg (.SI(test_si),
	.SE(test_se),
	.D(n10),
	.CK(clk),
	.RN(reset),
	.Q(parity_bit));
   NAND2XLM U2 (.A(data_valid),
	.B(parity_enable),
	.Y(n7));
   XOR3XLM U3 (.A(parity_type),
	.B(parallel_data[4]),
	.C(parallel_data[2]),
	.Y(n5));
   XOR2XLM U4 (.A(parallel_data[0]),
	.B(parallel_data[5]),
	.Y(n1));
   XOR3XLM U5 (.A(parallel_data[1]),
	.B(parallel_data[6]),
	.C(n1),
	.Y(n2));
   XOR3XLM U6 (.A(parallel_data[7]),
	.B(parallel_data[3]),
	.C(n2),
	.Y(n4));
   NOR2XLM U7 (.A(n5),
	.B(n4),
	.Y(n3));
   AOI211XLM U8 (.A0(n5),
	.A1(n4),
	.B0(n7),
	.C0(n3),
	.Y(n6));
   AO21XLM U9 (.A0(n7),
	.A1(parity_bit),
	.B0(n6),
	.Y(n10));
endmodule

module output_multiplexer (
	bit_select, 
	serial_data, 
	parity_bit, 
	mux_out);
   input [1:0] bit_select;
   input serial_data;
   input parity_bit;
   output mux_out;

   // Internal wires
   wire n3;
   wire n4;

   AOI31X2M U5 (.A0(n4),
	.A1(bit_select[0]),
	.A2(bit_select[1]),
	.B0(n3),
	.Y(mux_out));
   INVXLM U6 (.A(parity_bit),
	.Y(n4));
   AOI21XLM U7 (.A0(bit_select[1]),
	.A1(serial_data),
	.B0(bit_select[0]),
	.Y(n3));
endmodule

module UART_transmitter_test_1 (
	clk, 
	reset, 
	parity_type, 
	parity_enable, 
	data_valid, 
	parallel_data, 
	TX_out, 
	busy, 
	test_si, 
	test_so, 
	test_se);
   input clk;
   input reset;
   input parity_type;
   input parity_enable;
   input data_valid;
   input [7:0] parallel_data;
   output TX_out;
   output busy;
   input test_si;
   output test_so;
   input test_se;

   // Internal wires
   wire serial_enable;
   wire serial_data;
   wire parity_bit;
   wire n1;
   wire [1:0] bit_select;
   wire [2:0] serial_data_index;

   assign test_so = serial_data ;

   UART_transmitter_FSM_test_1 U_UART_transmitter_FSM (.clk(clk),
	.reset(reset),
	.parity_enable(parity_enable),
	.data_valid(data_valid),
	.serial_enable(serial_enable),
	.bit_select(bit_select),
	.serial_data_index(serial_data_index),
	.busy(busy),
	.test_si(test_si),
	.test_so(n1),
	.test_se(test_se));
   serializer_test_1 U_serializer (.clk(clk),
	.reset(reset),
	.parallel_data(parallel_data),
	.serial_enable(serial_enable),
	.serial_data_index(serial_data_index),
	.serial_data(serial_data),
	.test_si(parity_bit),
	.test_se(test_se));
   parity_calculator_test_1 U_parity_calculator (.clk(clk),
	.reset(reset),
	.parity_type(parity_type),
	.parity_enable(parity_enable),
	.data_valid(data_valid),
	.parallel_data(parallel_data),
	.parity_bit(parity_bit),
	.test_si(n1),
	.test_se(test_se));
   output_multiplexer U_output_multiplexer (.bit_select(bit_select),
	.serial_data(serial_data),
	.parity_bit(parity_bit),
	.mux_out(TX_out));
endmodule

module UART_receiver_FSM_test_1 (
	clk, 
	reset, 
	parity_enable, 
	prescale, 
	serial_data, 
	start_bit_error, 
	parity_bit_error, 
	stop_bit_error, 
	edge_count, 
	edge_count_done, 
	start_bit_check_enable, 
	parity_bit_check_enable, 
	stop_bit_check_enable, 
	edge_counter_and_data_sampler_enable, 
	deserializer_enable, 
	data_index, 
	data_valid, 
	test_si, 
	test_so, 
	test_se, 
	p1, 
	multiplexed_UART_clk__L9_N1);
   input clk;
   input reset;
   input parity_enable;
   input [5:0] prescale;
   input serial_data;
   input start_bit_error;
   input parity_bit_error;
   input stop_bit_error;
   input [4:0] edge_count;
   input edge_count_done;
   output start_bit_check_enable;
   output parity_bit_check_enable;
   output stop_bit_check_enable;
   output edge_counter_and_data_sampler_enable;
   output deserializer_enable;
   output [2:0] data_index;
   output data_valid;
   input test_si;
   output test_so;
   input test_se;
   input p1;
   input multiplexed_UART_clk__L9_N1;

   // Internal wires
   wire \data_transmission_state[3] ;
   wire n32;
   wire n33;
   wire n34;
   wire n35;
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire n25;
   wire n26;
   wire n27;
   wire n28;
   wire n29;
   wire n30;
   wire n36;
   wire n37;
   wire n38;
   wire n39;
   wire n40;
   wire n41;
   wire n42;
   wire n43;
   wire n44;
   wire n45;
   wire n46;
   wire n47;
   wire n48;
   wire n49;
   wire n50;
   wire n51;
   wire n52;
   wire n53;
   wire n54;
   wire n55;
   wire n56;
   wire n57;
   wire [2:0] current_state;
   wire [2:0] next_state;

   assign test_so = \data_transmission_state[3]  ;

   SDFFRQX1M \current_state_reg[0]  (.SI(test_si),
	.SE(p1),
	.D(next_state[0]),
	.CK(clk),
	.RN(reset),
	.Q(current_state[0]));
   SDFFRQX1M \current_state_reg[2]  (.SI(current_state[1]),
	.SE(p1),
	.D(next_state[2]),
	.CK(clk),
	.RN(reset),
	.Q(current_state[2]));
   SDFFRQX1M \current_state_reg[1]  (.SI(n50),
	.SE(p1),
	.D(next_state[1]),
	.CK(clk),
	.RN(reset),
	.Q(current_state[1]));
   SDFFRQX1M \data_transmission_state_reg[2]  (.SI(data_index[1]),
	.SE(p1),
	.D(n32),
	.CK(multiplexed_UART_clk__L9_N1),
	.RN(reset),
	.Q(data_index[2]));
   SDFFRQX1M \data_transmission_state_reg[3]  (.SI(n29),
	.SE(test_se),
	.D(n35),
	.CK(multiplexed_UART_clk__L9_N1),
	.RN(reset),
	.Q(\data_transmission_state[3] ));
   SDFFRQX1M \data_transmission_state_reg[0]  (.SI(n49),
	.SE(p1),
	.D(n34),
	.CK(clk),
	.RN(reset),
	.Q(data_index[0]));
   SDFFRQX1M \data_transmission_state_reg[1]  (.SI(data_index[0]),
	.SE(p1),
	.D(n33),
	.CK(clk),
	.RN(reset),
	.Q(data_index[1]));
   AOI32XLM U3 (.A0(n14),
	.A1(n13),
	.A2(n12),
	.B0(prescale[5]),
	.B1(n11),
	.Y(n20));
   NOR2BXLM U4 (.AN(n45),
	.B(n38),
	.Y(deserializer_enable));
   NOR3XLM U5 (.A(n50),
	.B(n56),
	.C(n38),
	.Y(parity_bit_check_enable));
   INVXLM U6 (.A(n36),
	.Y(n56));
   NAND3XLM U7 (.A(prescale[3]),
	.B(prescale[2]),
	.C(prescale[4]),
	.Y(n10));
   INVXLM U8 (.A(edge_count[4]),
	.Y(n15));
   NOR2XLM U9 (.A(n15),
	.B(prescale[5]),
	.Y(n9));
   AOI32XLM U10 (.A0(prescale[2]),
	.A1(n10),
	.A2(prescale[3]),
	.B0(prescale[4]),
	.B1(n10),
	.Y(n6));
   INVXLM U11 (.A(prescale[2]),
	.Y(n1));
   MXI2XLM U12 (.S0(edge_count[2]),
	.B(n1),
	.A(prescale[2]),
	.Y(n18));
   OAI22XLM U13 (.A0(prescale[3]),
	.A1(n18),
	.B0(prescale[2]),
	.B1(edge_count[1]),
	.Y(n2));
   AOI221XLM U14 (.A0(n18),
	.A1(prescale[3]),
	.B0(prescale[2]),
	.B1(edge_count[1]),
	.C0(n2),
	.Y(n5));
   AOI2BB2XLM U15 (.A0N(edge_count[0]),
	.A1N(prescale[1]),
	.B0(prescale[1]),
	.B1(edge_count[0]),
	.Y(n3));
   AOI21XLM U16 (.A0(n6),
	.A1(edge_count[3]),
	.B0(n3),
	.Y(n4));
   OAI211XLM U17 (.A0(n6),
	.A1(edge_count[3]),
	.B0(n5),
	.C0(n4),
	.Y(n7));
   AOI221XLM U18 (.A0(prescale[5]),
	.A1(n15),
	.B0(n9),
	.B1(n10),
	.C0(n7),
	.Y(n8));
   OAI21XLM U19 (.A0(n10),
	.A1(n9),
	.B0(n8),
	.Y(n38));
   INVXLM U20 (.A(current_state[0]),
	.Y(n50));
   INVXLM U21 (.A(current_state[1]),
	.Y(n48));
   NAND3XLM U22 (.A(current_state[2]),
	.B(n50),
	.C(n48),
	.Y(n47));
   NOR2XLM U23 (.A(n38),
	.B(n47),
	.Y(stop_bit_check_enable));
   NOR2XLM U24 (.A(n48),
	.B(current_state[2]),
	.Y(n36));
   INVXLM U25 (.A(\data_transmission_state[3] ),
	.Y(n41));
   NOR3XLM U26 (.A(prescale[3]),
	.B(prescale[2]),
	.C(prescale[1]),
	.Y(n14));
   AOI221XLM U27 (.A0(prescale[2]),
	.A1(prescale[3]),
	.B0(prescale[1]),
	.B1(prescale[3]),
	.C0(n14),
	.Y(n26));
   NOR2XLM U28 (.A(current_state[0]),
	.B(n56),
	.Y(n45));
   AOI32XLM U29 (.A0(prescale[1]),
	.A1(n45),
	.A2(n18),
	.B0(edge_count[1]),
	.B1(n45),
	.Y(n25));
   INVXLM U30 (.A(edge_count[0]),
	.Y(n22));
   INVXLM U31 (.A(prescale[5]),
	.Y(n13));
   NAND2XLM U32 (.A(prescale[4]),
	.B(n15),
	.Y(n12));
   INVXLM U33 (.A(prescale[4]),
	.Y(n16));
   NAND2XLM U34 (.A(edge_count[4]),
	.B(n16),
	.Y(n11));
   AOI221XLM U35 (.A0(prescale[4]),
	.A1(edge_count[4]),
	.B0(n16),
	.B1(n15),
	.C0(n14),
	.Y(n17));
   AOI221XLM U36 (.A0(prescale[1]),
	.A1(edge_count[1]),
	.B0(n18),
	.B1(edge_count[1]),
	.C0(n17),
	.Y(n19));
   OAI211XLM U37 (.A0(n22),
	.A1(prescale[0]),
	.B0(n20),
	.C0(n19),
	.Y(n21));
   AOI21XLM U38 (.A0(n22),
	.A1(prescale[0]),
	.B0(n21),
	.Y(n23));
   OAI21XLM U39 (.A0(n26),
	.A1(edge_count[3]),
	.B0(n23),
	.Y(n24));
   AOI211X2M U40 (.A0(n26),
	.A1(edge_count[3]),
	.B0(n25),
	.C0(n24),
	.Y(n42));
   NAND2XLM U41 (.A(n42),
	.B(data_index[0]),
	.Y(n40));
   OAI221XLM U42 (.A0(n41),
	.A1(n42),
	.B0(data_index[0]),
	.B1(n42),
	.C0(n40),
	.Y(n27));
   INVXLM U43 (.A(n27),
	.Y(n34));
   INVXLM U44 (.A(current_state[2]),
	.Y(n49));
   NOR3XLM U45 (.A(current_state[1]),
	.B(n49),
	.C(n50),
	.Y(data_valid));
   NAND2BXLM U46 (.AN(n40),
	.B(data_index[1]),
	.Y(n44));
   INVXLM U47 (.A(data_index[2]),
	.Y(n29));
   OAI211XLM U48 (.A0(n44),
	.A1(n29),
	.B0(\data_transmission_state[3] ),
	.C0(n42),
	.Y(n28));
   OAI31XLM U49 (.A0(n44),
	.A1(n29),
	.A2(\data_transmission_state[3] ),
	.B0(n28),
	.Y(n35));
   INVXLM U50 (.A(edge_count_done),
	.Y(n30));
   AOI221XLM U51 (.A0(parity_enable),
	.A1(n50),
	.B0(n41),
	.B1(n50),
	.C0(n30),
	.Y(n57));
   OAI2B11XLM U52 (.A0(n50),
	.A1N(parity_bit_error),
	.B0(n36),
	.C0(n57),
	.Y(n37));
   AOI32XLM U53 (.A0(edge_count_done),
	.A1(n37),
	.A2(stop_bit_error),
	.B0(n47),
	.B1(n37),
	.Y(next_state[2]));
   NAND2XLM U54 (.A(current_state[0]),
	.B(n49),
	.Y(n54));
   NAND3XLM U55 (.A(n56),
	.B(n54),
	.C(n47),
	.Y(edge_counter_and_data_sampler_enable));
   NOR3XLM U56 (.A(current_state[1]),
	.B(n38),
	.C(n54),
	.Y(start_bit_check_enable));
   OAI211XLM U57 (.A0(n41),
	.A1(n42),
	.B0(n40),
	.C0(data_index[1]),
	.Y(n39));
   OAI21XLM U58 (.A0(n40),
	.A1(data_index[1]),
	.B0(n39),
	.Y(n33));
   OAI211XLM U59 (.A0(n42),
	.A1(n41),
	.B0(data_index[2]),
	.C0(n44),
	.Y(n43));
   OAI21XLM U60 (.A0(data_index[2]),
	.A1(n44),
	.B0(n43),
	.Y(n32));
   NAND3XLM U61 (.A(\data_transmission_state[3] ),
	.B(n45),
	.C(parity_enable),
	.Y(n46));
   OAI21XLM U62 (.A0(stop_bit_error),
	.A1(n47),
	.B0(n46),
	.Y(n53));
   AOI31XLM U63 (.A0(n50),
	.A1(n49),
	.A2(n48),
	.B0(data_valid),
	.Y(n51));
   OAI22XLM U64 (.A0(edge_count_done),
	.A1(n54),
	.B0(serial_data),
	.B1(n51),
	.Y(n52));
   AO21XLM U65 (.A0(edge_count_done),
	.A1(n53),
	.B0(n52),
	.Y(next_state[0]));
   NOR3XLM U66 (.A(current_state[1]),
	.B(start_bit_error),
	.C(n54),
	.Y(n55));
   OAI2BB2XLM U67 (.A0N(edge_count_done),
	.A1N(n55),
	.B0(n57),
	.B1(n56),
	.Y(next_state[1]));
endmodule

module data_sampler_test_1 (
	clk, 
	reset, 
	serial_data, 
	prescale, 
	enable, 
	edge_count, 
	sampled_bit, 
	test_si, 
	test_so, 
	test_se);
   input clk;
   input reset;
   input serial_data;
   input [4:0] prescale;
   input enable;
   input [4:0] edge_count;
   output sampled_bit;
   input test_si;
   output test_so;
   input test_se;

   // Internal wires
   wire sample_enable;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n24;
   wire n25;
   wire n26;
   wire n27;
   wire n28;
   wire n29;
   wire n30;
   wire n31;
   wire n32;
   wire n33;
   wire n34;
   wire n35;
   wire n36;
   wire n37;
   wire n38;
   wire n39;
   wire n40;
   wire n41;
   wire n42;
   wire n43;
   wire n44;
   wire n45;
   wire n46;
   wire n47;
   wire [2:0] samples;

   assign test_so = samples[2] ;

   SDFFRQX1M sample_enable_reg (.SI(test_si),
	.SE(test_se),
	.D(n13),
	.CK(clk),
	.RN(reset),
	.Q(sample_enable));
   SDFFRQX1M \samples_reg[2]  (.SI(samples[1]),
	.SE(test_se),
	.D(n16),
	.CK(clk),
	.RN(reset),
	.Q(samples[2]));
   SDFFRQX1M \samples_reg[1]  (.SI(samples[0]),
	.SE(test_se),
	.D(n15),
	.CK(clk),
	.RN(reset),
	.Q(samples[1]));
   SDFFRQX1M \samples_reg[0]  (.SI(sample_enable),
	.SE(test_se),
	.D(n14),
	.CK(clk),
	.RN(reset),
	.Q(samples[0]));
   OAI21XLM U3 (.A0(n34),
	.A1(n33),
	.B0(n32),
	.Y(n44));
   XOR2XLM U4 (.A(prescale[4]),
	.B(edge_count[4]),
	.Y(n11));
   INVXLM U5 (.A(prescale[1]),
	.Y(n38));
   MXI2XLM U6 (.S0(edge_count[1]),
	.B(prescale[1]),
	.A(n38),
	.Y(n24));
   INVXLM U7 (.A(prescale[0]),
	.Y(n29));
   MXI2XLM U8 (.S0(edge_count[0]),
	.B(prescale[0]),
	.A(n29),
	.Y(n26));
   INVXLM U9 (.A(enable),
	.Y(n47));
   NOR4XLM U10 (.A(n11),
	.B(n24),
	.C(n26),
	.D(n47),
	.Y(n5));
   INVXLM U11 (.A(edge_count[3]),
	.Y(n3));
   INVXLM U12 (.A(prescale[2]),
	.Y(n2));
   OAI22XLM U13 (.A0(prescale[3]),
	.A1(n3),
	.B0(n2),
	.B1(edge_count[2]),
	.Y(n1));
   AOI221XLM U14 (.A0(n3),
	.A1(prescale[3]),
	.B0(n2),
	.B1(edge_count[2]),
	.C0(n1),
	.Y(n4));
   NAND2XLM U15 (.A(n5),
	.B(n4),
	.Y(n6));
   MX2XLM U16 (.S0(n6),
	.B(samples[2]),
	.A(serial_data),
	.Y(n16));
   NOR3XLM U17 (.A(prescale[3]),
	.B(prescale[2]),
	.C(prescale[1]),
	.Y(n10));
   NOR2XLM U18 (.A(n10),
	.B(n11),
	.Y(n22));
   NOR2XLM U19 (.A(prescale[2]),
	.B(prescale[1]),
	.Y(n7));
   AOI2B1XLM U20 (.A0(prescale[3]),
	.A1N(n7),
	.B0(n10),
	.Y(n36));
   INVXLM U21 (.A(n36),
	.Y(n21));
   NOR2XLM U22 (.A(prescale[1]),
	.B(n29),
	.Y(n9));
   AOI21XLM U23 (.A0(prescale[1]),
	.A1(prescale[2]),
	.B0(n7),
	.Y(n37));
   XOR2XLM U24 (.A(edge_count[2]),
	.B(n37),
	.Y(n34));
   NAND2XLM U25 (.A(n26),
	.B(enable),
	.Y(n31));
   MXI2XLM U26 (.S0(n24),
	.B(prescale[0]),
	.A(n29),
	.Y(n30));
   OAI21XLM U27 (.A0(n9),
	.A1(n34),
	.B0(n30),
	.Y(n8));
   AOI211XLM U28 (.A0(n9),
	.A1(n34),
	.B0(n31),
	.C0(n8),
	.Y(n20));
   AOI21XLM U29 (.A0(n11),
	.A1(n10),
	.B0(n22),
	.Y(n45));
   NOR3XLM U30 (.A(prescale[2]),
	.B(prescale[1]),
	.C(n29),
	.Y(n18));
   NOR2XLM U31 (.A(edge_count[3]),
	.B(n21),
	.Y(n35));
   AOI21XLM U32 (.A0(edge_count[3]),
	.A1(n21),
	.B0(n35),
	.Y(n39));
   OAI211XLM U33 (.A0(n45),
	.A1(n36),
	.B0(n18),
	.C0(n39),
	.Y(n17));
   OAI31XLM U34 (.A0(n45),
	.A1(n18),
	.A2(n39),
	.B0(n17),
	.Y(n19));
   OAI211XLM U35 (.A0(n22),
	.A1(n21),
	.B0(n20),
	.C0(n19),
	.Y(n23));
   MX2XLM U36 (.S0(n23),
	.B(samples[1]),
	.A(serial_data),
	.Y(n15));
   NAND3XLM U37 (.A(n24),
	.B(enable),
	.C(n34),
	.Y(n25));
   NOR4XLM U38 (.A(n45),
	.B(n39),
	.C(n26),
	.D(n25),
	.Y(n27));
   MX2XLM U39 (.S0(n27),
	.B(serial_data),
	.A(samples[0]),
	.Y(n14));
   AOI222XLM U40 (.A0(samples[1]),
	.A1(samples[0]),
	.B0(samples[1]),
	.B1(samples[2]),
	.C0(samples[0]),
	.C1(samples[2]),
	.Y(n28));
   NOR2BX2M U41 (.AN(sample_enable),
	.B(n28),
	.Y(sampled_bit));
   NAND2XLM U42 (.A(prescale[1]),
	.B(n29),
	.Y(n33));
   AOI211XLM U43 (.A0(n34),
	.A1(n33),
	.B0(n31),
	.C0(n30),
	.Y(n32));
   AOI2BB1XLM U44 (.A0N(n45),
	.A1N(n36),
	.B0(n35),
	.Y(n42));
   OAI21BXLM U45 (.A0(n38),
	.A1(prescale[0]),
	.B0N(n37),
	.Y(n41));
   OAI21XLM U46 (.A0(n45),
	.A1(n39),
	.B0(n41),
	.Y(n40));
   OAI21XLM U47 (.A0(n42),
	.A1(n41),
	.B0(n40),
	.Y(n43));
   AOI211XLM U48 (.A0(n45),
	.A1(edge_count[3]),
	.B0(n44),
	.C0(n43),
	.Y(n46));
   AO21XLM U49 (.A0(sample_enable),
	.A1(n47),
	.B0(n46),
	.Y(n13));
endmodule

module deserializer_test_1 (
	clk, 
	reset, 
	enable, 
	data_index, 
	sampled_bit, 
	parallel_data, 
	test_si, 
	test_se, 
	multiplexed_UART_clk__L9_N1);
   input clk;
   input reset;
   input enable;
   input [2:0] data_index;
   input sampled_bit;
   output [7:0] parallel_data;
   input test_si;
   input test_se;
   input multiplexed_UART_clk__L9_N1;

   // Internal wires
   wire n26;
   wire n27;
   wire n28;
   wire n29;
   wire n30;
   wire n31;
   wire n32;
   wire n33;
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;
   wire n17;
   wire n19;

   SDFFRQX1M \parallel_data_reg[7]  (.SI(parallel_data[6]),
	.SE(test_se),
	.D(n33),
	.CK(multiplexed_UART_clk__L9_N1),
	.RN(reset),
	.Q(parallel_data[7]));
   SDFFRQX1M \parallel_data_reg[6]  (.SI(parallel_data[5]),
	.SE(test_se),
	.D(n32),
	.CK(clk),
	.RN(reset),
	.Q(parallel_data[6]));
   SDFFRQX1M \parallel_data_reg[5]  (.SI(parallel_data[4]),
	.SE(test_se),
	.D(n31),
	.CK(clk),
	.RN(reset),
	.Q(parallel_data[5]));
   SDFFRQX1M \parallel_data_reg[4]  (.SI(parallel_data[3]),
	.SE(test_se),
	.D(n30),
	.CK(clk),
	.RN(reset),
	.Q(parallel_data[4]));
   SDFFRQX1M \parallel_data_reg[3]  (.SI(parallel_data[2]),
	.SE(test_se),
	.D(n29),
	.CK(clk),
	.RN(reset),
	.Q(parallel_data[3]));
   SDFFRQX1M \parallel_data_reg[2]  (.SI(parallel_data[1]),
	.SE(test_se),
	.D(n28),
	.CK(clk),
	.RN(reset),
	.Q(parallel_data[2]));
   SDFFRQX1M \parallel_data_reg[1]  (.SI(parallel_data[0]),
	.SE(test_se),
	.D(n27),
	.CK(multiplexed_UART_clk__L9_N1),
	.RN(reset),
	.Q(parallel_data[1]));
   SDFFRQX1M \parallel_data_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(n26),
	.CK(multiplexed_UART_clk__L9_N1),
	.RN(reset),
	.Q(parallel_data[0]));
   NAND2BXLM U2 (.AN(data_index[0]),
	.B(enable),
	.Y(n15));
   NAND2BXLM U3 (.AN(n15),
	.B(sampled_bit),
	.Y(n19));
   OAI21XLM U4 (.A0(n19),
	.A1(n12),
	.B0(n11),
	.Y(n32));
   NAND2XLM U5 (.A(data_index[0]),
	.B(enable),
	.Y(n6));
   NAND2BXLM U6 (.AN(n6),
	.B(sampled_bit),
	.Y(n8));
   NAND2XLM U7 (.A(data_index[1]),
	.B(data_index[2]),
	.Y(n12));
   OAI21XLM U8 (.A0(n6),
	.A1(n12),
	.B0(parallel_data[7]),
	.Y(n1));
   OAI21XLM U9 (.A0(n8),
	.A1(n12),
	.B0(n1),
	.Y(n33));
   INVXLM U10 (.A(data_index[2]),
	.Y(n3));
   NAND2XLM U11 (.A(data_index[1]),
	.B(n3),
	.Y(n17));
   OAI21XLM U12 (.A0(n6),
	.A1(n17),
	.B0(parallel_data[3]),
	.Y(n2));
   OAI21XLM U13 (.A0(n8),
	.A1(n17),
	.B0(n2),
	.Y(n29));
   INVXLM U14 (.A(data_index[1]),
	.Y(n5));
   NAND2XLM U15 (.A(n5),
	.B(n3),
	.Y(n10));
   OAI21XLM U16 (.A0(n6),
	.A1(n10),
	.B0(parallel_data[1]),
	.Y(n4));
   OAI21XLM U17 (.A0(n8),
	.A1(n10),
	.B0(n4),
	.Y(n27));
   NAND2XLM U18 (.A(data_index[2]),
	.B(n5),
	.Y(n14));
   OAI21XLM U19 (.A0(n6),
	.A1(n14),
	.B0(parallel_data[5]),
	.Y(n7));
   OAI21XLM U20 (.A0(n8),
	.A1(n14),
	.B0(n7),
	.Y(n31));
   OAI21XLM U21 (.A0(n15),
	.A1(n10),
	.B0(parallel_data[0]),
	.Y(n9));
   OAI21XLM U22 (.A0(n19),
	.A1(n10),
	.B0(n9),
	.Y(n26));
   OAI21XLM U23 (.A0(n15),
	.A1(n12),
	.B0(parallel_data[6]),
	.Y(n11));
   OAI21XLM U24 (.A0(n15),
	.A1(n14),
	.B0(parallel_data[4]),
	.Y(n13));
   OAI21XLM U25 (.A0(n19),
	.A1(n14),
	.B0(n13),
	.Y(n30));
   OAI21XLM U26 (.A0(n15),
	.A1(n17),
	.B0(parallel_data[2]),
	.Y(n16));
   OAI21XLM U27 (.A0(n19),
	.A1(n17),
	.B0(n16),
	.Y(n28));
endmodule

module edge_counter_test_1 (
	clk, 
	reset, 
	prescale, 
	enable, 
	edge_count, 
	edge_count_done, 
	test_si, 
	test_so, 
	test_se);
   input clk;
   input reset;
   input [5:0] prescale;
   input enable;
   output [4:0] edge_count;
   output edge_count_done;
   input test_si;
   output test_so;
   input test_se;

   // Internal wires
   wire N14;
   wire N15;
   wire N16;
   wire N17;
   wire N18;
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n16;

   assign test_so = n15 ;

   SDFFRQX1M \edge_count_reg[4]  (.SI(edge_count[3]),
	.SE(test_se),
	.D(N18),
	.CK(clk),
	.RN(reset),
	.Q(edge_count[4]));
   SDFFRQX1M \edge_count_reg[3]  (.SI(n5),
	.SE(test_se),
	.D(N17),
	.CK(clk),
	.RN(reset),
	.Q(edge_count[3]));
   SDFFRQX1M \edge_count_reg[2]  (.SI(n7),
	.SE(test_se),
	.D(N16),
	.CK(clk),
	.RN(reset),
	.Q(edge_count[2]));
   SDFFRQX1M \edge_count_reg[1]  (.SI(edge_count[0]),
	.SE(test_se),
	.D(N15),
	.CK(clk),
	.RN(reset),
	.Q(edge_count[1]));
   SDFFRQX1M \edge_count_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(N14),
	.CK(clk),
	.RN(reset),
	.Q(edge_count[0]));
   NOR3XLM U3 (.A(n8),
	.B(n7),
	.C(n5),
	.Y(n12));
   AOI21XLM U4 (.A0(prescale[5]),
	.A1(edge_count[4]),
	.B0(prescale[4]),
	.Y(n1));
   INVXLM U5 (.A(edge_count[3]),
	.Y(n11));
   AOI211XLM U6 (.A0(prescale[4]),
	.A1(prescale[5]),
	.B0(n1),
	.C0(n11),
	.Y(n3));
   INVXLM U7 (.A(edge_count[0]),
	.Y(n8));
   INVXLM U8 (.A(edge_count[1]),
	.Y(n7));
   INVXLM U9 (.A(edge_count[2]),
	.Y(n5));
   OAI21XLM U10 (.A0(prescale[5]),
	.A1(prescale[4]),
	.B0(prescale[3]),
	.Y(n2));
   OAI211XLM U11 (.A0(prescale[3]),
	.A1(n3),
	.B0(n12),
	.C0(n2),
	.Y(n4));
   NOR4X1M U12 (.A(prescale[2]),
	.B(prescale[1]),
	.C(prescale[0]),
	.D(n4),
	.Y(edge_count_done));
   NAND2BXLM U13 (.AN(edge_count_done),
	.B(enable),
	.Y(n13));
   NOR2XLM U14 (.A(edge_count[0]),
	.B(n13),
	.Y(N14));
   NAND2XLM U15 (.A(edge_count[0]),
	.B(edge_count[1]),
	.Y(n6));
   AOI211XLM U16 (.A0(n6),
	.A1(n5),
	.B0(n12),
	.C0(n13),
	.Y(N16));
   AOI221XLM U17 (.A0(edge_count[0]),
	.A1(edge_count[1]),
	.B0(n8),
	.B1(n7),
	.C0(n13),
	.Y(N15));
   INVXLM U18 (.A(n12),
	.Y(n10));
   AOI221XLM U19 (.A0(edge_count[3]),
	.A1(n12),
	.B0(n11),
	.B1(n10),
	.C0(n13),
	.Y(N17));
   NAND2XLM U20 (.A(edge_count[3]),
	.B(n12),
	.Y(n14));
   INVXLM U21 (.A(n14),
	.Y(n16));
   INVXLM U22 (.A(edge_count[4]),
	.Y(n15));
   AOI221XLM U23 (.A0(edge_count[4]),
	.A1(n16),
	.B0(n15),
	.B1(n14),
	.C0(n13),
	.Y(N18));
endmodule

module start_bit_checker_test_1 (
	clk, 
	reset, 
	enable, 
	sampled_bit, 
	start_bit_error, 
	test_si, 
	test_se);
   input clk;
   input reset;
   input enable;
   input sampled_bit;
   output start_bit_error;
   input test_si;
   input test_se;

   // Internal wires
   wire N4;

   SDFFRQX1M start_bit_error_reg (.SI(test_si),
	.SE(test_se),
	.D(N4),
	.CK(clk),
	.RN(reset),
	.Q(start_bit_error));
   AND2X1M U3 (.A(sampled_bit),
	.B(enable),
	.Y(N4));
endmodule

module parity_bit_checker_test_1 (
	clk, 
	reset, 
	parity_type, 
	enable, 
	sampled_bit, 
	parallel_data, 
	parity_bit_error, 
	test_si, 
	test_so, 
	test_se);
   input clk;
   input reset;
   input parity_type;
   input enable;
   input sampled_bit;
   input [7:0] parallel_data;
   output parity_bit_error;
   input test_si;
   output test_so;
   input test_se;

   // Internal wires
   wire FE_OFN6_parity_error;
   wire N10;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;

   assign parity_bit_error = test_so ;

   BUFX10M FE_OFC7_parity_error (.A(FE_OFN6_parity_error),
	.Y(test_so));
   AOI21XLM U4 (.A0(n8),
	.A1(n7),
	.B0(n6),
	.Y(N10));
   XOR2XLM U6 (.A(parallel_data[3]),
	.B(parallel_data[1]),
	.Y(n3));
   XOR3XLM U7 (.A(parity_type),
	.B(parallel_data[0]),
	.C(n3),
	.Y(n8));
   XOR2XLM U8 (.A(parallel_data[4]),
	.B(parallel_data[2]),
	.Y(n4));
   XOR3XLM U9 (.A(parallel_data[7]),
	.B(parallel_data[6]),
	.C(n4),
	.Y(n5));
   XOR3XLM U10 (.A(parallel_data[5]),
	.B(sampled_bit),
	.C(n5),
	.Y(n7));
   OAI21XLM U11 (.A0(n8),
	.A1(n7),
	.B0(enable),
	.Y(n6));
   SDFFRQX2M parity_bit_error_reg (.SI(test_si),
	.SE(test_se),
	.D(N10),
	.CK(clk),
	.RN(reset),
	.Q(FE_OFN6_parity_error));
endmodule

module stop_bit_checker_test_1 (
	clk, 
	reset, 
	enable, 
	sampled_bit, 
	stop_bit_error, 
	test_si, 
	test_se);
   input clk;
   input reset;
   input enable;
   input sampled_bit;
   output stop_bit_error;
   input test_si;
   input test_se;

   // Internal wires
   wire N5;

   SDFFRQX1M stop_bit_error_reg (.SI(test_si),
	.SE(test_se),
	.D(N5),
	.CK(clk),
	.RN(reset),
	.Q(stop_bit_error));
   NOR2BXLM U3 (.AN(enable),
	.B(sampled_bit),
	.Y(N5));
endmodule

module UART_receiver_test_1 (
	clk, 
	reset, 
	parity_type, 
	parity_enable, 
	prescale, 
	serial_data, 
	data_valid, 
	parallel_data, 
	parity_error, 
	frame_error, 
	test_si, 
	test_so, 
	test_se, 
	p1, 
	multiplexed_UART_clk__L9_N1);
   input clk;
   input reset;
   input parity_type;
   input parity_enable;
   input [5:0] prescale;
   input serial_data;
   output data_valid;
   output [7:0] parallel_data;
   output parity_error;
   output frame_error;
   input test_si;
   output test_so;
   input test_se;
   input p1;
   input multiplexed_UART_clk__L9_N1;

   // Internal wires
   wire start_bit_error;
   wire stop_bit_error;
   wire edge_count_done;
   wire start_bit_check_enable;
   wire parity_bit_check_enable;
   wire stop_bit_check_enable;
   wire edge_counter_and_data_sampler_enable;
   wire deserializer_enable;
   wire sampled_bit;
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire [4:0] edge_count;
   wire [2:0] data_index;

   assign test_so = stop_bit_error ;

   OR2X12M U1 (.A(start_bit_error),
	.B(stop_bit_error),
	.Y(frame_error));
   UART_receiver_FSM_test_1 U_UART_receiver_FSM (.clk(clk),
	.reset(reset),
	.parity_enable(parity_enable),
	.prescale(prescale),
	.serial_data(serial_data),
	.start_bit_error(start_bit_error),
	.parity_bit_error(parity_error),
	.stop_bit_error(stop_bit_error),
	.edge_count(edge_count),
	.edge_count_done(edge_count_done),
	.start_bit_check_enable(start_bit_check_enable),
	.parity_bit_check_enable(parity_bit_check_enable),
	.stop_bit_check_enable(stop_bit_check_enable),
	.edge_counter_and_data_sampler_enable(edge_counter_and_data_sampler_enable),
	.deserializer_enable(deserializer_enable),
	.data_index(data_index),
	.data_valid(data_valid),
	.test_si(test_si),
	.test_so(n4),
	.test_se(test_se),
	.p1(p1),
	.multiplexed_UART_clk__L9_N1(multiplexed_UART_clk__L9_N1));
   data_sampler_test_1 U_data_sampler (.clk(multiplexed_UART_clk__L9_N1),
	.reset(reset),
	.serial_data(serial_data),
	.prescale({ prescale[5],
		prescale[4],
		prescale[3],
		prescale[2],
		prescale[1] }),
	.enable(edge_counter_and_data_sampler_enable),
	.edge_count(edge_count),
	.sampled_bit(sampled_bit),
	.test_si(n4),
	.test_so(n3),
	.test_se(test_se));
   deserializer_test_1 U_deserializer (.clk(clk),
	.reset(reset),
	.enable(deserializer_enable),
	.data_index(data_index),
	.sampled_bit(sampled_bit),
	.parallel_data(parallel_data),
	.test_si(n3),
	.test_se(test_se),
	.multiplexed_UART_clk__L9_N1(multiplexed_UART_clk__L9_N1));
   edge_counter_test_1 U_edge_counter (.clk(multiplexed_UART_clk__L9_N1),
	.reset(reset),
	.prescale(prescale),
	.enable(edge_counter_and_data_sampler_enable),
	.edge_count(edge_count),
	.edge_count_done(edge_count_done),
	.test_si(parallel_data[7]),
	.test_so(n2),
	.test_se(test_se));
   start_bit_checker_test_1 U_start_bit_checker (.clk(clk),
	.reset(reset),
	.enable(start_bit_check_enable),
	.sampled_bit(sampled_bit),
	.start_bit_error(start_bit_error),
	.test_si(n1),
	.test_se(p1));
   parity_bit_checker_test_1 U_parity_bit_checker (.clk(multiplexed_UART_clk__L9_N1),
	.reset(reset),
	.parity_type(parity_type),
	.enable(parity_bit_check_enable),
	.sampled_bit(sampled_bit),
	.parallel_data(parallel_data),
	.parity_bit_error(parity_error),
	.test_si(n2),
	.test_so(n1),
	.test_se(test_se));
   stop_bit_checker_test_1 U_stop_bit_checker (.clk(clk),
	.reset(reset),
	.enable(stop_bit_check_enable),
	.sampled_bit(sampled_bit),
	.stop_bit_error(stop_bit_error),
	.test_si(start_bit_error),
	.test_se(p1));
endmodule

module UART_test_1 (
	transmitter_clk, 
	receiver_clk, 
	reset, 
	parity_type, 
	parity_enable, 
	prescale, 
	transmitter_parallel_data_valid, 
	transmitter_parallel_data, 
	serial_data_receiver, 
	serial_data_transmitter, 
	transmitter_busy, 
	receiver_parallel_data_valid, 
	receiver_parallel_data, 
	parity_error_receiver, 
	frame_error_receiver, 
	test_si, 
	test_so, 
	test_se, 
	p1, 
	multiplexed_UART_clk__L9_N1);
   input transmitter_clk;
   input receiver_clk;
   input reset;
   input parity_type;
   input parity_enable;
   input [5:0] prescale;
   input transmitter_parallel_data_valid;
   input [7:0] transmitter_parallel_data;
   input serial_data_receiver;
   output serial_data_transmitter;
   output transmitter_busy;
   output receiver_parallel_data_valid;
   output [7:0] receiver_parallel_data;
   output parity_error_receiver;
   output frame_error_receiver;
   input test_si;
   output test_so;
   input test_se;
   input p1;
   input multiplexed_UART_clk__L9_N1;

   // Internal wires
   wire n3;

   UART_transmitter_test_1 U_UART_transmitter (.clk(transmitter_clk),
	.reset(reset),
	.parity_type(parity_type),
	.parity_enable(parity_enable),
	.data_valid(transmitter_parallel_data_valid),
	.parallel_data(transmitter_parallel_data),
	.TX_out(serial_data_transmitter),
	.busy(transmitter_busy),
	.test_si(n3),
	.test_so(test_so),
	.test_se(p1));
   UART_receiver_test_1 U_UART_receiver (.clk(receiver_clk),
	.reset(reset),
	.parity_type(parity_type),
	.parity_enable(parity_enable),
	.prescale(prescale),
	.serial_data(serial_data_receiver),
	.data_valid(receiver_parallel_data_valid),
	.parallel_data(receiver_parallel_data),
	.parity_error(parity_error_receiver),
	.frame_error(frame_error_receiver),
	.test_si(test_si),
	.test_so(n3),
	.test_se(test_se),
	.p1(p1),
	.multiplexed_UART_clk__L9_N1(multiplexed_UART_clk__L9_N1));
endmodule

module clock_divider_test_1 (
	reference_clk, 
	reset, 
	clk_divider_enable, 
	division_ratio, 
	output_clk, 
	test_si2, 
	test_si1, 
	test_so2, 
	test_so1, 
	test_se, 
	p1);
   input reference_clk;
   input reset;
   input clk_divider_enable;
   input [5:0] division_ratio;
   output output_clk;
   input test_si2;
   input test_si1;
   output test_so2;
   output test_so1;
   input test_se;
   input p1;

   // Internal wires
   wire multiplexed_UART_clk__Fence_N0__SKEWGRP2__MMExc_0_NET;
   wire divided_clk__SKEWGRP1__MMExc_0_NET;
   wire multiplexed_UART_clk__Fence_N0;
   wire HTIE_LTIEHI_NET;
   wire divided_clk;
   wire odd_toggle;
   wire n17;
   wire n18;
   wire n19;
   wire n20;
   wire n21;
   wire n22;
   wire n23;
   wire n1;
   wire n2;
   wire n3;
   wire n4;
   wire n5;
   wire n6;
   wire n7;
   wire n8;
   wire n9;
   wire n10;
   wire n11;
   wire n12;
   wire n13;
   wire n14;
   wire n15;
   wire n24;
   wire n25;
   wire n26;
   wire n27;
   wire n28;
   wire n29;
   wire n30;
   wire n31;
   wire n32;
   wire n33;
   wire n34;
   wire n35;
   wire n36;
   wire n37;
   wire n38;
   wire n39;
   wire [4:0] counter;

   assign test_so1 = counter[3] ;
   assign test_so2 = odd_toggle ;

   CLKBUFX20M multiplexed_UART_clk__Fence_N0__SKEWGRP2__MMExc_0 (.A(multiplexed_UART_clk__Fence_N0),
	.Y(multiplexed_UART_clk__Fence_N0__SKEWGRP2__MMExc_0_NET));
   CLKBUFX20M divided_clk__SKEWGRP1__MMExc_0 (.A(divided_clk),
	.Y(divided_clk__SKEWGRP1__MMExc_0_NET));
   CLKBUFX40M multiplexed_UART_clk__Fence_I0 (.A(reference_clk),
	.Y(multiplexed_UART_clk__Fence_N0));
   TIEHIM HTIE_LTIEHI (.Y(HTIE_LTIEHI_NET));
   SDFFRQX1M \counter_reg[0]  (.SI(test_si1),
	.SE(p1),
	.D(n22),
	.CK(multiplexed_UART_clk__Fence_N0),
	.RN(reset),
	.Q(counter[0]));
   SDFFRQX1M \counter_reg[1]  (.SI(counter[0]),
	.SE(test_se),
	.D(n21),
	.CK(multiplexed_UART_clk__Fence_N0),
	.RN(reset),
	.Q(counter[1]));
   SDFFRQX1M \counter_reg[2]  (.SI(n31),
	.SE(test_se),
	.D(n20),
	.CK(multiplexed_UART_clk__Fence_N0),
	.RN(reset),
	.Q(counter[2]));
   SDFFRQX1M \counter_reg[3]  (.SI(n26),
	.SE(test_se),
	.D(n19),
	.CK(multiplexed_UART_clk__Fence_N0),
	.RN(reset),
	.Q(counter[3]));
   SDFFRQX1M \counter_reg[4]  (.SI(test_si2),
	.SE(test_se),
	.D(n18),
	.CK(multiplexed_UART_clk__Fence_N0),
	.RN(reset),
	.Q(counter[4]));
   SDFFRHQX8M divided_clk_reg (.SI(counter[4]),
	.SE(p1),
	.D(n17),
	.CK(multiplexed_UART_clk__Fence_N0),
	.RN(reset),
	.Q(divided_clk));
   MX2X3M U26 (.S0(HTIE_LTIEHI_NET),
	.B(divided_clk),
	.A(multiplexed_UART_clk__Fence_N0__SKEWGRP2__MMExc_0_NET),
	.Y(output_clk));
   INVXLM U3 (.A(n10),
	.Y(n11));
   OAI211XLM U4 (.A0(n9),
	.A1(n15),
	.B0(n8),
	.C0(n7),
	.Y(n27));
   INVXLM U5 (.A(n38),
	.Y(n36));
   OAI21XLM U6 (.A0(n30),
	.A1(n27),
	.B0(odd_toggle),
	.Y(n28));
   OAI31XLM U7 (.A0(n30),
	.A1(n29),
	.A2(odd_toggle),
	.B0(n28),
	.Y(n23));
   INVXLM U8 (.A(counter[2]),
	.Y(n26));
   NAND2XLM U9 (.A(counter[0]),
	.B(counter[1]),
	.Y(n25));
   NAND3XLM U10 (.A(counter[0]),
	.B(counter[1]),
	.C(counter[2]),
	.Y(n34));
   INVXLM U11 (.A(n34),
	.Y(n33));
   NOR3XLM U12 (.A(division_ratio[3]),
	.B(division_ratio[1]),
	.C(division_ratio[2]),
	.Y(n9));
   INVXLM U13 (.A(counter[3]),
	.Y(n35));
   NOR2XLM U14 (.A(division_ratio[4]),
	.B(n35),
	.Y(n2));
   AOI21XLM U15 (.A0(division_ratio[4]),
	.A1(n35),
	.B0(n2),
	.Y(n15));
   NAND2XLM U16 (.A(division_ratio[4]),
	.B(n35),
	.Y(n1));
   INVXLM U17 (.A(counter[4]),
	.Y(n37));
   XOR2XLM U18 (.A(n37),
	.B(division_ratio[5]),
	.Y(n10));
   INVXLM U19 (.A(counter[0]),
	.Y(n32));
   AOI2BB2XLM U20 (.A0N(counter[1]),
	.A1N(division_ratio[2]),
	.B0(division_ratio[2]),
	.B1(counter[1]),
	.Y(n6));
   AOI21XLM U21 (.A0(division_ratio[1]),
	.A1(n32),
	.B0(n6),
	.Y(n24));
   AOI31XLM U22 (.A0(n9),
	.A1(n1),
	.A2(n10),
	.B0(n24),
	.Y(n8));
   AOI2BB2XLM U23 (.A0N(counter[2]),
	.A1N(division_ratio[3]),
	.B0(division_ratio[3]),
	.B1(counter[2]),
	.Y(n12));
   INVXLM U24 (.A(division_ratio[1]),
	.Y(n13));
   OAI211XLM U25 (.A0(division_ratio[2]),
	.A1(n12),
	.B0(counter[0]),
	.C0(n13),
	.Y(n5));
   NOR2XLM U27 (.A(division_ratio[1]),
	.B(division_ratio[2]),
	.Y(n3));
   OAI2B2XLM U28 (.A0(n3),
	.A1N(n12),
	.B0(n2),
	.B1(n10),
	.Y(n4));
   AOI21XLM U29 (.A0(n6),
	.A1(n5),
	.B0(n4),
	.Y(n7));
   INVXLM U30 (.A(division_ratio[0]),
	.Y(n30));
   AOI211XLM U31 (.A0(counter[0]),
	.A1(n13),
	.B0(n12),
	.C0(n11),
	.Y(n14));
   AOI31XLM U32 (.A0(n24),
	.A1(n15),
	.A2(n14),
	.B0(odd_toggle),
	.Y(n29));
   AOI222X2M U33 (.A0(n27),
	.A1(n30),
	.B0(n27),
	.B1(odd_toggle),
	.C0(division_ratio[0]),
	.C1(n29),
	.Y(n39));
   AOI211XLM U34 (.A0(n26),
	.A1(n25),
	.B0(n33),
	.C0(n39),
	.Y(n20));
   NOR2XLM U36 (.A(counter[0]),
	.B(n39),
	.Y(n22));
   INVXLM U37 (.A(counter[1]),
	.Y(n31));
   AOI221XLM U38 (.A0(counter[0]),
	.A1(counter[1]),
	.B0(n32),
	.B1(n31),
	.C0(n39),
	.Y(n21));
   AOI221XLM U39 (.A0(counter[3]),
	.A1(n33),
	.B0(n35),
	.B1(n34),
	.C0(n39),
	.Y(n19));
   NOR2XLM U40 (.A(n35),
	.B(n34),
	.Y(n38));
   AOI221XLM U41 (.A0(counter[4]),
	.A1(n38),
	.B0(n37),
	.B1(n36),
	.C0(n39),
	.Y(n18));
   AOI2BB2XLM U42 (.A0N(n39),
	.A1N(divided_clk__SKEWGRP1__MMExc_0_NET),
	.B0(divided_clk__SKEWGRP1__MMExc_0_NET),
	.B1(n39),
	.Y(n17));
   SDFFSQX1M odd_toggle_reg (.SI(divided_clk__SKEWGRP1__MMExc_0_NET),
	.SE(p1),
	.D(n23),
	.CK(multiplexed_UART_clk__Fence_N0),
	.SN(reset),
	.Q(odd_toggle));
endmodule

module register_test_3 (
	clk, 
	reset, 
	D, 
	Q, 
	test_si, 
	test_se);
   input clk;
   input reset;
   input [0:0] D;
   output [0:0] Q;
   input test_si;
   input test_se;

   SDFFRQX1M \Q_reg[0]  (.SI(test_si),
	.SE(test_se),
	.D(D[0]),
	.CK(clk),
	.RN(reset),
	.Q(Q[0]));
endmodule

module register_1 (
	clk, 
	reset, 
	D, 
	Q);
   input clk;
   input reset;
   input [0:0] D;
   output [0:0] Q;

   // Internal wires
   wire HTIE_LTIEHI_NET;

   TIEHIM HTIE_LTIEHI (.Y(HTIE_LTIEHI_NET));
   DFFSRX1M \Q_reg[0]  (.D(D[0]),
	.CK(clk),
	.SN(HTIE_LTIEHI_NET),
	.RN(reset),
	.Q(Q[0]));
endmodule

module bus_synchronizer_test_2 (
	clk, 
	reset, 
	asynchronous_data, 
	synchronous_data, 
	test_si, 
	test_se);
   input clk;
   input reset;
   input [0:0] asynchronous_data;
   output [0:0] synchronous_data;
   input test_si;
   input test_se;

   // Internal wires
   wire \output_ports[0][0] ;

   register_test_3 U0_register (.clk(clk),
	.reset(reset),
	.D(asynchronous_data),
	.Q(\output_ports[0][0] ),
	.test_si(test_si),
	.test_se(test_se));
   register_1 \register_instance[1].U_register  (.clk(clk),
	.reset(reset),
	.D(\output_ports[0][0] ),
	.Q(synchronous_data));
endmodule

module data_synchronizer_test_1 (
	clk, 
	reset, 
	asynchronous_data_valid, 
	asynchronous_data, 
	Q_pulse_generator, 
	synchronous_data_valid, 
	synchronous_data, 
	test_si2, 
	test_si1, 
	test_se);
   input clk;
   input reset;
   input asynchronous_data_valid;
   input [7:0] asynchronous_data;
   output Q_pulse_generator;
   output synchronous_data_valid;
   output [7:0] synchronous_data;
   input test_si2;
   input test_si1;
   input test_se;

   // Internal wires
   wire synchronized_enable;
   wire pulse_generator_output;
   wire n1;
   wire n2;
   wire n5;
   wire n7;
   wire n9;
   wire n11;
   wire n12;
   wire n13;
   wire n14;

   SDFFRQX1M synchronous_data_valid_reg (.SI(synchronous_data[7]),
	.SE(test_se),
	.D(pulse_generator_output),
	.CK(clk),
	.RN(reset),
	.Q(synchronous_data_valid));
   SDFFRQX1M \synchronous_data_reg[7]  (.SI(synchronous_data[6]),
	.SE(test_se),
	.D(n2),
	.CK(clk),
	.RN(reset),
	.Q(synchronous_data[7]));
   SDFFRQX1M \synchronous_data_reg[6]  (.SI(synchronous_data[5]),
	.SE(test_se),
	.D(n5),
	.CK(clk),
	.RN(reset),
	.Q(synchronous_data[6]));
   SDFFRQX1M \synchronous_data_reg[5]  (.SI(synchronous_data[4]),
	.SE(test_se),
	.D(n7),
	.CK(clk),
	.RN(reset),
	.Q(synchronous_data[5]));
   SDFFRQX1M \synchronous_data_reg[4]  (.SI(synchronous_data[3]),
	.SE(test_se),
	.D(n9),
	.CK(clk),
	.RN(reset),
	.Q(synchronous_data[4]));
   SDFFRQX1M \synchronous_data_reg[3]  (.SI(synchronous_data[2]),
	.SE(test_se),
	.D(n11),
	.CK(clk),
	.RN(reset),
	.Q(synchronous_data[3]));
   SDFFRQX1M \synchronous_data_reg[2]  (.SI(synchronous_data[1]),
	.SE(test_se),
	.D(n12),
	.CK(clk),
	.RN(reset),
	.Q(synchronous_data[2]));
   SDFFRQX1M \synchronous_data_reg[1]  (.SI(synchronous_data[0]),
	.SE(test_se),
	.D(n13),
	.CK(clk),
	.RN(reset),
	.Q(synchronous_data[1]));
   SDFFRQX1M \synchronous_data_reg[0]  (.SI(test_si2),
	.SE(test_se),
	.D(n14),
	.CK(clk),
	.RN(reset),
	.Q(synchronous_data[0]));
   DFFRQX1M Q_pulse_generator_reg (.D(synchronized_enable),
	.CK(clk),
	.RN(reset),
	.Q(Q_pulse_generator));
   NOR2BX2M U3 (.AN(synchronized_enable),
	.B(Q_pulse_generator),
	.Y(pulse_generator_output));
   INVXLM U4 (.A(pulse_generator_output),
	.Y(n1));
   AO22XLM U5 (.A0(pulse_generator_output),
	.A1(asynchronous_data[5]),
	.B0(n1),
	.B1(synchronous_data[5]),
	.Y(n7));
   AO22XLM U6 (.A0(pulse_generator_output),
	.A1(asynchronous_data[6]),
	.B0(n1),
	.B1(synchronous_data[6]),
	.Y(n5));
   AO22XLM U7 (.A0(pulse_generator_output),
	.A1(asynchronous_data[4]),
	.B0(n1),
	.B1(synchronous_data[4]),
	.Y(n9));
   AO22XLM U8 (.A0(pulse_generator_output),
	.A1(asynchronous_data[0]),
	.B0(n1),
	.B1(synchronous_data[0]),
	.Y(n14));
   AO22XLM U9 (.A0(pulse_generator_output),
	.A1(asynchronous_data[3]),
	.B0(n1),
	.B1(synchronous_data[3]),
	.Y(n11));
   AO22XLM U10 (.A0(pulse_generator_output),
	.A1(asynchronous_data[1]),
	.B0(n1),
	.B1(synchronous_data[1]),
	.Y(n13));
   AO22XLM U11 (.A0(pulse_generator_output),
	.A1(asynchronous_data[7]),
	.B0(n1),
	.B1(synchronous_data[7]),
	.Y(n2));
   AO22XLM U12 (.A0(pulse_generator_output),
	.A1(asynchronous_data[2]),
	.B0(n1),
	.B1(synchronous_data[2]),
	.Y(n12));
   bus_synchronizer_test_2 U_bus_synchronizer (.clk(clk),
	.reset(reset),
	.asynchronous_data(asynchronous_data_valid),
	.synchronous_data(synchronized_enable),
	.test_si(test_si1),
	.test_se(test_se));
endmodule

